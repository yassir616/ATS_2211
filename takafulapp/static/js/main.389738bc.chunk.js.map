{"version":3,"sources":["constants/index.js","menutakaful/Administration/AdministartionAPI.js","common/AppHeader.js","common/LoadingIndicator.js","common/NotFound.js","menutakaful/Acceuil/Acceuil.js","util/Title/ComponentTitle.js","menutakaful/Administration/Users/AddUserForm.js","user/UserAPI.js","menutakaful/Parametrage/pointvente/PointVenteAPI.js","menutakaful/Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps.js","menutakaful/Administration/Users/Users.js","menutakaful/Parametrage/Restitutions/RestitutionAPI.js","menutakaful/Parametrage/Restitutions/AjoutRestitution.js","menutakaful/Parametrage/Restitutions/Restitutions.js","menutakaful/Participants/ParticipantAPI.js","menutakaful/Production Prestations/Souscription/SouscriptionAPI.js","util/VillesAPI.js","menutakaful/Production Prestations/Souscription/StepOne/AddPerPhysique/AddSouscripteur.js","menutakaful/Participants/Participant.js","menutakaful/Production Prestations/Souscription/StepOne/AddPerMorale/AddPerMorale.js","menutakaful/Participants/ParticipantMoral.js","menutakaful/Participants/AllParticipant.js","menutakaful/Parametrage/Auxiliaires/AuxiliaireAPI.js","menutakaful/Parametrage/Auxiliaires/AjouterAuxiliaire.js","menutakaful/Parametrage/Auxiliaires/auxiliaires.js","menutakaful/Parametrage/Honoraires/HonorairesAPI.js","menutakaful/Parametrage/Honoraires/AjouterHonoraire.js","menutakaful/Parametrage/Honoraires/Honoraires.js","menutakaful/Parametrage/TypePrestation/PrestationAPI.js","menutakaful/Parametrage/ProduitDeces/ProduitDecesAPI.js","menutakaful/Parametrage/TypePrestation/AjoutTypePrestation.js","menutakaful/Parametrage/TypePrestation/TypePrestation.js","menutakaful/Parametrage/CauseRestitution/AjoutCauseRes.js","menutakaful/Parametrage/CauseRestitution/CauseRestitution.js","menutakaful/Parametrage/avenant/AvenantAPI.js","menutakaful/GestionContrats/DetailsTabs/Avenants.js","menutakaful/GestionContrats/DetailsTabs/Contrats.js","menutakaful/GestionContrats/DetailsTabs/General.js","menutakaful/GestionContrats/DetailsTabs/Produits.js","menutakaful/GestionContrats/DetailsTabs/SinistreAPI.js","menutakaful/EchangeFichiersInformatiques/EchangeFileAPI.js","menutakaful/GestionContrats/DetailsTabs/Sinistre.js","menutakaful/GestionContrats/DetailsContrat.js","menutakaful/GestionContrats/ContratsAPI.js","menutakaful/GestionContrats/Avenant/ChangementAdresse.js","menutakaful/GestionContrats/Avenant/ChangementCapitaleEtDuree.js","menutakaful/GestionContrats/ConsultDecesContrat.js","menutakaful/Parametrage/partenaire/PartenaireAPI.js","menutakaful/GestionContrats/DetailsTabs/Reglement.js","menutakaful/MRB/DetailsTab/ContratMrb.js","menutakaful/MRB/DetailsTab/General.js","menutakaful/MRB/DetailsTab/ProduitMrb.js","menutakaful/MRB/ProduitMrb/ProduitMRBAPI.js","menutakaful/MRB/DetailsTab/SinistreMrb.js","menutakaful/MRB/DetailsContratMrb.js","menutakaful/MRB/ConsultationsContratsMrb.js","menutakaful/MRB/MultirisqueBatiment.js","menutakaful/MRB/ProduitMrb/ProduitMRBDetails.js","menutakaful/MRB/ProduitMrb/ProduitMRB.js","menutakaful/Parametrage/avenant/CreateTypeAvenant.js","menutakaful/Parametrage/avenant/TypeAvenant.js","menutakaful/Parametrage/partenaire/CreatePartenaire.js","menutakaful/Parametrage/partenaire/Partenaire.js","menutakaful/Parametrage/pointvente/CreatePointVente.js","menutakaful/Parametrage/pointvente/PointVente.js","menutakaful/Production Prestations/GestionAcceptation/AcceptationsAPI.js","menutakaful/Production Prestations/GestionAcceptation/GestionAcceptation.js","menutakaful/Production Prestations/Honoraire/AjoutePrestationHonoraire.js","menutakaful/Production Prestations/Honoraire/HonoraireTable.js","menutakaful/Production Prestations/Honoraire/PrestationTestsMedicalTable.js","menutakaful/Production Prestations/Honoraire/RecherchPrestationHonoraire.js","menutakaful/Production Prestations/Honoraire/Honoraire.js","menutakaful/Production Prestations/Souscription/StepFour/StepFour.js","menutakaful/Production Prestations/Souscription/StepOne/StepOne.js","menutakaful/Production Prestations/Souscription/StepThree/StepThree.js","menutakaful/Production Prestations/Souscription/StepTwo/StepTwo.js","menutakaful/Production Prestations/Souscription/Souscription.js","menutakaful/TableauBord/CotisationAPI.js","menutakaful/TableauBord/Cotisation.js","menutakaful/TableauBord/DetailsCotisation.js","menutakaful/TableauBord/Comptabilite.js","menutakaful/TableauBord/GestionImpayes.js","menutakaful/TableauBord/CotisationRetraite.js","menutakaful/TableauBord/DetailsCotisationRetraite.js","menutakaful/TableauBord/ComptabiliteRetraite.js","menutakaful/TableauBord/Global.js","menutakaful/Utilitaire/AgendaAPI.js","menutakaful/Utilitaire/Agenda.js","menutakaful/GestionContrats/RetraiteContrat/DetailsTabs/Avenants.js","menutakaful/GestionContrats/RetraiteContrat/DetailsTabs/Contrats.js","menutakaful/GestionContrats/RetraiteContrat/DetailsTabs/General.js","menutakaful/GestionContrats/RetraiteContrat/DetailsTabs/Produits.js","menutakaful/GestionContrats/RetraiteContrat/DetailsTabs/Sinistre.js","menutakaful/GestionContrats/RetraiteContrat/DetailsTabs/Prestation.js","menutakaful/GestionContrats/RetraiteContrat/ConsultRetraiteContrat/DetailsRetraiteContrat.js","menutakaful/GestionContrats/RetraiteContrat/ConsultRetraiteContrat/ConsultRetraiteContrat.js","menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/StepOne/AddPerMorale/AddPerMorale.js","menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/StepOne/AddPerPhysique/AddSouscripteur.js","menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/StepOne/StepOne.js","menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/StepThree/beneficiare/DynamicFields.js","menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/StepThree/beneficiare/Beneficiaire.js","menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/StepThree/StepThree.js","menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/StepTwo/StepTwo.js","util/Helpers.js","menutakaful/Parametrage/ProduitRetraite/ProduitRetraiteAPI.js","menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/SouscriptionRetraiteContrat.js","menutakaful/EchangeFichiersInformatiques/Fichiers Emis/FichiersEmis.js","menutakaful/EchangeFichiersInformatiques/FichiersRecus/FichiersRecus.js","menutakaful/EchangeFichiersInformatiques/IntegrationManuelle/IntegrationManuelle.js","menutakaful/EchangeFichiersInformatiques/EchangeFichiers.js","menutakaful/MenuGauche.js","menutakaful/MenuTakaful.js","user/login/Login.js","common/ServerError.js","util/Colors.js","user/profile/Profile.js","menutakaful/Administration/roles and permissions/AddPermission/AddPermission.js","menutakaful/Administration/roles and permissions/AddRole/AddRole.js","menutakaful/Administration/roles and permissions/EditRole/EditRole.js","menutakaful/Administration/roles and permissions/SearchTree/SearchTree.js","menutakaful/Administration/roles and permissions/RolesAndPermission.js","menutakaful/Parametrage/ProduitDeces/Steps/StepFive.js","menutakaful/Parametrage/ProduitDeces/Steps/StepFour.js","menutakaful/Parametrage/ProduitDeces/Steps/StepOne.js","menutakaful/Parametrage/ProduitDeces/Steps/StepTarification.js","menutakaful/Parametrage/ProduitDeces/Steps/StepThree.js","menutakaful/Parametrage/ProduitDeces/Steps/StepTwo.js","menutakaful/Parametrage/ProduitDeces/Steps/StepZero.js","menutakaful/Parametrage/ProduitDeces/ProduitDeces.js","menutakaful/Parametrage/ProduitRetraite/Steps/StepsServices/next.js","menutakaful/Parametrage/ProduitRetraite/Steps/StepsServices/prev.js","menutakaful/Parametrage/ProduitRetraite/Steps/StepModalite.js","menutakaful/Parametrage/ProduitRetraite/Steps/StepOne.js","menutakaful/Parametrage/ProduitRetraite/Steps/StepTwo.js","menutakaful/Parametrage/ProduitRetraite/Steps/StepZero.js","menutakaful/Parametrage/ProduitRetraite/ProduitRetraite.js","menutakaful/Parametrage/ProduitDeces/Details.js","menutakaful/Parametrage/ProduitDeces/ConsultProduitDeces.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/ExamensComlementaire/ExamensComlementaireAjouter.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/ExamensComlementaire/ExamensComlementaireTable.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/ExamensComlementaire/ExamensComlementaire.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Examinateur/ExaminateurAjouter.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Examinateur/ExaminateurTable.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Examinateur/Examinateur.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/General.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Laboratoire/LaboratoireAjouter.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Laboratoire/LaboratoireTable.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Laboratoire/Laboratoire.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/MedecinConseil/MedecinConseilAjouter.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/MedecinConseil/MedecinConseilTable.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/MedecinConseil/MedecinConseil.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Reassurance/ReassuranceAjouter.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Reassurance/ReassuranceTable.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Reassurance/Reassurance.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Specialiste/SpecialisteAjouter.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Specialiste/SpecialisteTable.js","menutakaful/Production Prestations/GestionAcceptation/ModificationTabs/Specialiste/Specialiste.js","menutakaful/Production Prestations/GestionAcceptation/ModificationAcceptation.js","menutakaful/Production Prestations/GestionAcceptation/ConsultationTabs/ExamensComlementaire.js","menutakaful/Production Prestations/GestionAcceptation/ConsultationTabs/Examinateur.js","menutakaful/Production Prestations/GestionAcceptation/ConsultationTabs/Laboratoire.js","menutakaful/Production Prestations/GestionAcceptation/ConsultationTabs/MedecinConseil.js","menutakaful/Production Prestations/GestionAcceptation/ConsultationTabs/Reassurance.js","menutakaful/Production Prestations/GestionAcceptation/ConsultationTabs/Specialiste.js","menutakaful/Production Prestations/GestionAcceptation/ConsultationAcceptation.js","menutakaful/Parametrage/ProduitDeces/Modification/StepOne.js","menutakaful/Parametrage/ProduitDeces/Modification/NormeAjouter.js","menutakaful/Parametrage/ProduitDeces/Modification/NormeTable.js","menutakaful/Parametrage/ProduitDeces/Modification/StepThree.js","menutakaful/Parametrage/ProduitDeces/Modification/StepTwo.js","menutakaful/Parametrage/ProduitDeces/Modification/Modification.js","menutakaful/MRB/ProduitMrb/AjoutProduit.js","menutakaful/MRB/ProduitMrb/ModifieProduitMRB.js","menutakaful/Utilitaire/simulation/Simulation.js","menutakaful/Utilitaire/simulation/SimulationMrb.js","menutakaful/Parametrage/ProduitRetraite/Details/DetailsConstants.js","menutakaful/Parametrage/ProduitRetraite/Details/Details.js","menutakaful/Parametrage/ProduitRetraite/ConsultationRetraiteProduit.js","menutakaful/Parametrage/ProduitRetraite/Modification/StepOne.js","menutakaful/Parametrage/ProduitRetraite/Modification/StepThree.js","menutakaful/Parametrage/ProduitRetraite/Modification/StepTwo.js","menutakaful/Parametrage/ProduitRetraite/Modification/ModificationRetraiteProduit.js","app/App.js","registerServiceWorker.js","index.js","assets/adminstartioncon.webp","assets/paramicon.webp","assets/productionIcon.webp","assets/participantsIcon.webp","assets/takaLogoW.webp","assets/takaLogo.webp"],"names":["API_BASE_URL","process","REACT_APP_API_BASE_URL","ACCESS_TOKEN","UserID","NOM_ASSURE","CIN_ASSURE","NUM_CONTRAT","MEDECIN_EXAMINATEUR","MEDECIN_CONSEIL","LABORATOIRE","NAME_MIN_LENGTH","NUMERO_COMPTE_LENGTH","NAME_MAX_LENGTH","AVN_CHANGEMENT_CAPITAL_DURE","AVN_ADRESSE","REQUEST","options","aut","localStorage","getItem","defaults","headers","Content-Type","Authorization","Cache-Control","Object","assign","axios","AL_AKHDAR_Code","getAllRoles","request","url","method","Promise","reject","editRole","role","id","data","updateNotification","notification","Header","layout_default","a","SubMenu","AppHeader","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","count","handleMenuClick","bind","assertThisInitialized","_ref","key","onLogout","loadNotification","responce","content","forEach","element","read","setState","menuItems","_this2","currentUser","react_default","createElement","menu_default","mode","theme","selectedkeys","location","pathname","onClick","style","backgroundColor","Item","float","height","color","firstName","toUpperCase","lastName","icon_default","type","marginLeft","Divider","title","className","ItemGroup","email","dropdown_default","trigger","overlay","map","padding","card_default","readNotification","message","badge_default","input_default","placeholder","prefix","Link","to","Component","withRouter","LoadingIndicator","antIcon","fontSize","spin","spin_default","indicator","display","textAlign","marginTop","NotFound","button_default","size","Meta","colors","scaleOrdinal","schemeCategory10","range","dataLine","name","uv","female","male","getPath","x","y","width","concat","TriangleBar","fill","d","stroke","value","COLORS","RADIAN","Math","PI","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","radius","cos","sin","textAnchor","dominantBaseline","toFixed","Acceuil","row_default","gutter","col_default","span","align","bordered","es6","labelLine","label","dataKey","entry","index","length","margin","top","right","left","bottom","strokeDasharray","shape","Acceuil_TriangleBar","position","hoverable","borderTop","cover","src","img1","alt","avatar","avatar_default","description","img2","img3","img4","PureComponent","Title","ComponentTitle","level","fontFamily","fontWeight","divider_default","marginBottom","Option","AddUserForm","showDrawer","visible","onClose","handleSubmit","e","preventDefault","form","validateFieldsAndScroll","err","values","confirm","roles","Pointvente","push","pointVentes","signUpUser","handleConfirmBlur","target","confirmDirty","compareToFirstPassword","rule","callback","getFieldValue","validateToNextPassword","validateFields","force","Roles","createdUser","_","prevState","response","status","notification_default","success","_context","t0","error","getFieldDecorator","drawer_default","bodyStyle","paddingBottom","form_default","layout","hideRequiredMark","onSubmit","rules","required","hasFeedback","validator","Password","borderRadius","onBlur","select_default","optionLabelProp","libelle","background","marginRight","htmlType","Administration_Users_AddUserForm","create","getAllPointVente","getTypePointVente","getPointVenteByCodeInterne","code","getColumnSearchProps","dataIndex","nameToShow","context","filterDropdown","setSelectedKeys","selectedKeys","clearFilters","ref","node","searchInput","onChange","onPressEnter","handleSearch","icon","handleReset","filterIcon","filtered","undefined","onFilter","record","toString","toLowerCase","startsWith","onFilterDropdownVisibleChange","setTimeout","select","render","text","searchedColumn","main_default","highlightStyle","searchWords","searchText","autoEscape","textToHighlight","EditableContext","React","createContext","rolesUser","pointventes","pointventesdata","Users","updateUser","userData","userId","updatedUser","then","catch","rechercheUsers","newDataList","objectSpread","handleDelete","deleteTakafulUser","dataSource","toConsumableArray","filter","item","isEditing","editingKey","cancel","rolesloaded","rowSelection","columns","editable","tag","tag_default","Consumer","save","popconfirm_default","onConfirm","disabled","edit","pointvente","_context2","getRoles","row","newData","findIndex","helparray","splice","_this3","components","body","cell","EditableCell","col","onCell","inputType","editing","Title_ComponentTitle","Provider","table_default","rowClassName","pagination","defaultCurrent","defaultPageSize","getInput","_this4","handleChange","Users_Option","labelInValue","renderCell","_this4$props","children","restProps","objectWithoutProperties","initialValue","Administration_Users_Users","getCauseRes","getRestitutions","ajoutRestitution","restitutionRequest","AjoutRestitution","ajouterRestitution","handleInputChange","isFormInvalid","event","validationFun","inputName","inputValue","defineProperty","validateStatus","window","reload","Parametrage_Restitutions_AjoutRestitution","Restitutions","updateRestitutions","restitutionsData","restitutionId","updatedRestitution","rechercheRestitutions","Restitutions_EditableContext","href","Parametrage_Restitutions_Restitutions","getallPersonMorale","getAllSecteurActivite","getAllTypePersonneMorales","createPersonnePhysique","souscripteur","getSexe","getSetuation","getProfession","getallperson","createPersonneMorale","getVois","lettreOrientation","lettre","responseType","getNormeByCapitalAndAge","age","capital","decesProduit","getCinIfExist","cin","conditionParticulier","condition","getRibIfExist","rib","updateDecesContratOrientation","orientation","getAllVille","AddSouscripteur","dateNaissance","format","adressVille","disabledDate","current","startDate","moment","add","onChangeVille","console","log","ville","adresscomplet","vois","complement","numero","pays","onChangeCin","PersonneCinIfExist","onChangePays","onChangeVois","onChangeNumero","onChangeComplement","onChangeRib","PersonneRibIfExist","handleChangeNomPrenom","handleDateNaissance","diff","villes","nationaliteList","Tiers","responseVille","helpArray","object","model","personCreation","getAllVilles","setFieldsValue","adressComplete","_context3","_context4","prefixSelector","AddSouscripteur_Option","titre","borderColor","valuePropName","radio_default","Group","buttonStyle","defaultValue","Button","addonBefore","date_picker_default","professions","setuation","sexe","auto_complete_default","allowClear","filterOption","option","indexOf","pattern","RegExp","input_number_default","AddPerPhysique_AddSouscripteur","Participant","handlePersonphyCreationAssure","deleteParticipant","updatePer","perData","perId","updatedPer","keyRecord","visibled","setuations","users","rolesandprivileges","parametrage","dataloaded","gander","profrssionResponse","getproprties","listpersons","person","isProspect","prospect","prenom","nom","matricule","profession","situationFamiliale","nationalite","nombreEnfants","numeroDeTelephone","numTiers","adressPays","adressCodePostal","adressComplement","adressNumero","adressVois","Participant_Option","connectedUserContext","Participants_Participant","AddPerMorale","typePersonneMorale","secteurActivite","typePersonneMoral","AddPerMorale_Option","onSelect","StepOne_AddPerMorale_AddPerMorale","ParticipantMoral","handlePersonMoraleCreationSousctipteur","SecteurActivite","ParticipantMoral_EditableContext","typePersonneMoraleResponse","secteurActiviteResponse","Participants_ParticipantMoral","tabListNoTitle","tab","contentListNoTitle","personnephysique","personnemoral","AllParticipant","noTitleKey","onTabChange","tabList","activeTabKey","getAuxiliaires","ajoutAuxiliaire","getTypeAuxiliaire","getAuxiliairesByType","AjouterAuxiliaire","ajouterAux","auxiliaire","getTypeAux","auxiliaireResponse","AjouterAuxiliaire_Option","Parametrage_Auxiliaires_AjouterAuxiliaire","Auxiliaires","updateAux","handleSelectChange","adresse","faxe","ir","patente","raisonSociale","registreCommerce","specialite","tel","typePersonne","typeAuxiliaireId","typeAuxiliaire","identifiantFiscal","getAuxiliaire","auxiliaireId","updatedAuxiliaire","auxiliaires_Option","auxiliaires","getHonoraire","AjouterHonoraire","ajouterHon","honoraireRequest","AjouterHonoraire_Option","Parametrage_Honoraires_AjouterHonoraire","Honoraires","rechercheHonoraire","updateHon","montantHonoraire","typeAuxiliaireHon","honoraireId","updatedHonoraire","Honoraires_Option","Parametrage_Honoraires_Honoraires","getTypePrestation","updatePrestationSinistre","updatedSinistre","getPrestationSearch","produit","nomParticipant","contrat","setPrestationStatut","statut","getDecesProduit","updateDecesProduct","productId","updatedProduct","getTarification","duree","differe","typeProduit","getRisque","getCategorie","AjoutTypePrestation","familles","ajouterPrestation","getAllFamille","prestationRequest","AjoutTypePrestation_Option","Parametrage_TypePrestation_AjoutTypePrestation","TypePrestation","updatePrestation","prestationData","prestationId","updatedPrestation","recherchePrestation","TypePrestation_EditableContext","Parametrage_TypePrestation_TypePrestation","AjoutCauseRes","ajouterCauseRestitution","causeResRequest","Parametrage_CauseRestitution_AjoutCauseRes","CauseRestitution","updateCauseRes","causeResData","causeResId","updatedCauseRes","rechercheCauseRes","CauseRestitution_EditableContext","Parametrage_CauseRestitution_CauseRestitution","addAvenant","updatedContrat","addAvenantRetrait","getAvenant","contratId","getTypeAvenant","getCodeTypeAvenantById","ajouterAvenant","avenant","typeContart","Panel","Avenants","getAvenants","idContrat","expandIconPosition","MyContext","Fragment","collapse_default","defaultActiveKey","header","Contrats","Contrats_Panel","extra","numeroContrat","offset","dateEffet","dateEcheance","dureeContrat","montantCotisation","periodicite","montantFrais","datePrelevement","capitalAssure","tauxInteret","tauxSurprime","General","General_Panel","assure","Produits","Produits_Panel","fraisAcquisition","risque","categorie","dureeMin","numeroCompte","delaiResiliation","delaiPreavis","delaiDeclaration","seuilExaminateur","seuilConseil","dureeMax","differeMax","differeMin","ageMax","ageMin","getSinistre","deleteSinistre","setStatut","requestModel","ajoutReglement","requested","addFlux","modelRequest","downloadFlux","getPieceJoint","getExclusion","famille","jasperFile","devis","TextArea","id_sinistre","beneficiaire","Sinistre","onChanged","agenceBancaire","handleChangeed","setStatuts","motif","handleOk","handleSubmited","handleCancel","getSinistres","remplie","handleRecord","dateDeclaration","Date","dateDeclarationSinistre","dateSurvenance","dateApres","creationDate","dureeDeclaration","getTime","dureeSurvenance","dateCreation","numeroSinistre","commentaire","crd","montantRegler","typeSinistre","natureSinistre","nbrEcheanceImpayees","nbrEcheanceImpaye","reglementPartiel","tauxInvalidite","modeReglement","exclusionNom","exclusion","beneficiaireAgenceBancaire","pointVente","causeSinistre","updatePrestationSinistres","deletePrestationSinistre","exclusions","pieceJointe","Sinistre_Option","columns1","getAllPiece","getAllExclusion","id_prestation","idSinistre","statuts","exclusionFamille","idPrestation","formItemLayout","labelCol","wrapperCol","_this$state","modal_default","onOk","onCancel","footer","rows","checkbox_default","autoSize","minRows","maxRows","GestionContrats_DetailsTabs_Sinistre","DetailsContrat","general","DetailsTabs_General","DetailsTabs_Contrats","DetailsTabs_Produits","DetailsTabs_Avenants","sinistre","createContratDeces","createContratRetrait","getDecesContrat","page","limit","sort","direction","getDecesContratsByPartenaire","getRetraiteContrat","searchContrat","searchby","searchfor","searchRetraitContrat","updateDecesContratStatus","updatedStatus","updateRetraiteContratStatus","searchContratMrb","getPeriodicite","getBeneficiaireById","updateContartDeces","changementCapitaleDureeUpdateModel","ChangementAdresse","now","btn","handleConfirm","close","info","descriptions_default","duration","keyn","saveRequest","voisResponce","ChangementAdresse_Option","Avenant_ChangementAdresse","ChangementCapitaleEtDuree","tarification","tauxTaxe","taxe","montantTaxe","tauxReduction","prorata","montantSurprime","onChangeDiffere","onChangeCapital","onChangeDuree","onChangeTauxS","onChangeTauxReduction","effetMonth","effet","getTariffication","montantC","taux","montantS","cotisationTotale","forfait","produitType","Avenant_ChangementCapitaleEtDuree","Search","dateCP","ConsultDecesContrat","conditionGenerale","getConditionGenerale","conditionParticuliere","requestCP","agence","partenaire","raisonSocial","organisme","typePartenaire","partenairepv","siegeSocial","intermediaire","numeroAgrement","numeroHomologation","dateAgrement","dateHomologation","adresseInter","participant","telephone","adresseSouscripteur","compteBancaire","cinAssure","adresseAssure","telephoneAssure","compteAssure","compteTakaful","numeroContratFinancement","dureeMois","garantiePaiment","renouvellement","garantieInvalidite","date","montantTTC","ageLimiteCouverture","ageEcheance","ageLimitSouscription","ageMaxEligibilite","montantAugmentation","remuneration","fraisGestion","contributionAnnulle","seuilVisite","suspensionActivite","suspendreAtiviteDeuxDernierAnneePourquiEtTemps","maladieInvalidite","quelleMaladieOuInvalidite","maladieOuOperation","maladiesOuOperationChirurgicale","getConditionParticuliere","Canceled","modelShow","showModal","handleChanged","restitution","TypeAvenant","AdressVois","Complement","avenantUpdateModel","typeAvenantId","updateDecesContratCapitaleDureeChangementAdresse","selectedType","typesAvenant","Avenantchoisi","handleChangePrestation","onPaginationChange","pagenumber","pagesize","searchContrats","selectBefore","ConsultDecesContrat_Option","search","handleClose","avenants","show","view","handleClosed","showed","handleCanceled","typePrestation","avenantCapital","avenantContrat","nouveauStatus","updatedContratStatus","dateSurvenanceSinistre","requestmodel","sinistreRequest","warn","history","AdressChangementVisibilty","selectedRowKeys","selectedFile","contrats","totalItems","GestionContrats_DetailsContrat","file","Blob","fileURL","URL","createObjectURL","open","getTypeAvenants","contratsResponse","totalElements","contratResponse","numberOfElements","sm","xs","onSearch","enterButton","pageSize","total","afterClose","GestionContrats_ConsultDecesContrat","getAllPartenaire","getPartenaireByCode","codePartenaire","id_reglement","Reglement","updatePrestationStatut","handlePartnerChange","list","produits","produitPartenaire","onClickSearch","reglementType","dateStatut","nature","ajouterReglementHonoraire","ajouterReglement","getAllReglement","partenaires","disable","reglement","Reglement_Option","getpropreties","produitResponse","reglementId","tailFormItemLayout","Reglement_Title","underline","md","lg","ReglementForm","ContratMrb","ConsultationsContratsMrb_MyContext","ContratMrb_Panel","numeroDossierFinancement","numeroSimulation","numeroTitreFoncier","reduction","situationRisque","superficie","valeurContenu","typeBatiment","primeNette","primeEvcat","primeHT","primeTTC","prorataTTC","DetailsTab_General_Panel","ProduitMrb","ProduitMrb_Panel","produitMrb","tvaFraisGestion","delaiPrescription","delaiPrescriptionSansSouscription","natureAssure","natureBienAssure","montantMaximumGarantie","natureParticipant","getAllProductMrb","updateProductMrb","getTarificationMrb","valeur","SinistreMrb","getSinistresMrb","dataSinistre","sinistreDeclare","documentDeclaration","documentConstatation","numeroDocumentConstatation","circonstance","entiteReception","referenceIntermediaire","villeSurvenance","province","commune","cause","lieuSinistre","dateReceptionDoc","onChangeDateRecDocument","sinistreInfo","SinistreMrb_Option","sinistreMrb","garanties","contratMrb","codeCaps","codeSite","codeInterne","typePointVente","contratGarantie","ganranties","franchise","garantieMrb","dataRecuperee1","nomVictime","prenomVictime","dateNaissanceVictime","cinVictime","numSocietaire","cinSociataire","villeSocietaire","telephoneSocietaire","police","referenceIntermedaire","descriptionCauseCirconstance","recupereDataOfSinistreMrb","formItemLayout1","SinistreMrb_TextArea","DetailsTab_SinistreMrb","DetailsContratMrb","DetailsTab_General","DetailsTab_ContratMrb","DetailsTab_ProduitMrb","ConsultationsContratsMrb","ConsultationsContratsMrb_Option","message_default","warning","searchContratsMrb","MRB_DetailsContratMrb","getAllContrat","ConsultationsContratsMrb_Search","onSelectChange","MRB_ConsultationsContratsMrb","currentDate","MultirisqueBatiment","searchPersonnemorale","personMoraleList","searchPersonnePhysique","personlist","onChangeSelect","assurePresent","handlePersonphyCreationSousctipteur","perphysique","permorale","handlechange","radio","souscripteurIsAssure","disableSouscripteuretAssure","clearAutocompleteFields","checked","keyMrb","masseSalarialeAnnuelle","handleEffetDateChange","echeanceDate","nombreMois","addRealMonth","parseInt","disabledDateEcheance","endOf","handleEcheanceDateChange","effetDate","onChangeValeurBatiment","valeurBatiment","onChangeNatureBatiment","natureBatiment","exclus","adresseBatiment","selectedCinSouscripteur","exclusionsMrb","domestique","FESC","fsec","ajouterContratMrb","typeAvenant","exclusionMrb","personlistForAuto","selectedPatente","selectedCinAsuree","personMoraleListForAuto","dataSimulation","handleChangeCinSouscripteur","getProduitMrb","getAllExclusionsMrb","getPeriodicites","cpModel","personslist","personsMoraleListResponse","helpArraymorale","requestMrb","numeroSouscription","prenomSouscripteur","nomSouscripteur","cinSouscripteur","villeSouscripteur","ribSouscripteur","prenomAssure","nomAssure","villeAssure","ribAssure","numTitreFoncier","caracteristique","taciteReconduction","conditionParticuliereMrb","_context5","prevProps","tauxContribution","prime_Evcat","prime_HT","parseFloat","FSEC","Prorata","prime_TTC","taxeAuProrata","Prorata_TTC","border","page_header_default","subTitle","MultirisqueBatiment_Option","minHeight","defaultActiveFirstOption","column","empty_default","abb","ice","addonAfter","accordion","MultirisqueBatiment_Panel","defaultChecked","MRB_MultirisqueBatiment","ProduitMRBDetails","ProduitMRB_MyContext","assureDiffParticipant","franchiseIncendie","franchiseBrisGlace","franchiseDegatEaux","franchiseCatastropheNaturelles","handleReload","ProduitMRB","handleClick","isEdited","tarificationMrb","getProductMrb","idproduct","ProduitMrb_ProduitMRBDetails","ProduitMrb_ProduitMRB","FormItem","CreateTypeAvenant","_Component","validateTest","abreviation","errorMsg","validationStatus","inherits","createClass","_ajouterTypeAvenant","asyncToGenerator","regenerator_default","mark","_callee","wrap","prev","next","sent","stop","_x","apply","arguments","createTypeAvenantRequest","ajouterTypeAvenant","autoComplete","updateAvenants","updatedAvenant","avenantId","updateAvenant","rechercheAvenants","TypeAvenant_EditableContext","Parametrage_avenant_CreateTypeAvenant","avenant_TypeAvenant","CreatePartenaire","handleBranchetypeChange","brancheType","abbreviation","validateTestNumero","TVA","_ajouterPartenaire","createPartenaireRequest","tva","ajouterPartenaire","CreatePartenaire_FormItem","CreatePartenaire_Option","Parametrage_partenaire_CreatePartenaire","Partenaire","updatePartenaires","partenaireData","partenaireId","updatedPartenaire","recherchePartenaire","Partenaire_EditableContext","CreatePartenaire_CreatePartenaire","partenaire_Partenaire","CreatePointVente","handleChangeSecteurActivite","handleChangeTypePointVente","codeResponsable","logo","nomResponsable","secteurActiviteId","partenaireTB","secteurActiviteTB","typePointVenteTB","getPartenaire","getsecteurActiviteId","getTypePointVenteId","_getsecteurActiviteId","_getPartenaire","_callee2","_getTypePointVenteId","_callee3","_ajouterPointVente","_callee4","createPointVenteRequest","partenairepvId","typePointVenteId","ajouterPointVente","_getVois2","_callee5","action","authorization","CreatePointVente_FormItem","upload_default","CreatePointVente_Option","Parametrage_pointvente_CreatePointVente","PointVente","recherchePointVente","andleSearch","updatePointV","handleChangePartenaire","_updatePointV","PointVenteId","PointVenteToUpdate","_x2","rowKey","PointVente_Option","handleChangePointVente","pointvente_PointVente","ajouterAcceptationEtape","eventRequest","getAcceptationlaboByAcceptation","getAcceptationExaminateurByAcceptation","getAcceptationConseilByAcceptation","getAcceptationExamnsByAcceptation","getAcceptationSpecialisteByAcceptation","getAcceptationReassuranceByAcceptation","getAcceptationlaboByAcceptationsLaboratoire","acceptation","acceptationLabo","getAcceptationTestByAcceptationsExaminateur","getAcceptationTestByAcceptationsConseil","getAcceptationTestMedicalByAcceptationExamensComplementaire","acceptationExaman","ajouterAcceptationTestMedical","updateAcceptationTestMedical","Id","updatedTestMedical","getacceptationTestByAuxiliaire","lettreAcceptation","lettreacceptation","searchAcceptations","getAcceptationsByPagination","getVerdictByType","lettreRejet","lettrerejet","GestionAcceptation","searchAcceptation","GestionAcceptation_Option","acceptations","acceptationsResponse","GestionAcceptation_Search","AjoutePrestationHonoraire","_useState","useState","montantGlobale","slicedToArray","honoraires","elem","acceptationTestMedical","detailPrestationHonoraire","Ajouter","intituele","addition","elements","montant","HonoraireTable","_useState2","montantG","setMontantG","_useState3","_useState4","selectedTstRows","setSelectedTstRows","_useState5","tests","_useState6","dataList","setDataList","_useState7","_useState8","myRequestmodel","setMyRequestmodel","_useState9","_useState10","requestStatus","setRequestStatus","_useState11","_useState12","selectedRowsArray","setSelectedRowsArray","selectedRows","_createPrestation","prestationRequestModel","useEffect","listHelp","HonoraireTable_Title","hideOnSinglePage","Honoraire_AjoutePrestationHonoraire","createPrestation","PrestationTestsMedicalHonoraire","loading","RecherchPrestationHonoraire","onCellClick","detailPrestation","showDetailPrestation","_this$props","searchPrestation","numContrat","respence","RecherchPrestationHonoraire_Title","alert_default","PrestationTestsMedicalTable","Honoraire","handleTypeAuxiliaireChange","typeAuxiliaireSelectedValue","auxiliairesParType","getacceptationTestsByAuxiliaire","ShowRechercheHonoraireTable","onChangeProduit","onChangeStatus","onChangeNumContrat","onChangeNomParticipant","onChangeAuxiliaire","prestationStatus","ShowHonoraireTable","testsMedicalListByAuxiliaire","produitRespence","typeAuxiliareRespence","auxiliaresRespence","prestationStatusRespence","auxiiliaire","Honoraire_Option","Honoraire_HonoraireTable","Honoraire_RecherchPrestationHonoraire","HonoraireForm","StepFour","handleSabmit","onChangePeriodicite","showField","partnerChange","handleInvaliditeOuMaladiechange","invaliditeOuMaladieShowField","handleMaladiesOuOperationChirurgicaleChange","maladiesOuOperationChirurgicaleShowField","handlesuspendreAtiviteDeuxDernierAnneechange","suspendreAtiviteDeuxDernierAnneeShowField","invaliditeOuMaladie","suspendreAtiviteDeuxDernierAnnee","pensionIncapacite","Label","StepFour_TextArea","Souscription_StepFour_StepFour","onFieldsChange","changedFields","mapPropsToFields","maladiesOuOperationChirurgicaleQuandEtOu","createFormField","preiodicite","consumeDatas","StepOne","changePartenaire","partenaireRadio","partenaireCode","dossierFinnancementForAuto","selectedRefDossier","consumeReferenceDossier","isAdmin","saveSouscripteur","refDossierFinancement","check","refDossier","consumeData","responsecin","t1","Search_default","Souscription_StepOne_StepOne","StepThree","onChangeDatePrelevement","v","encours","cumul","onChangeOption","onChangemontantSurprime","onChangetauxSurprime","onChangeEncours","calculer","found","calculResultVisibilty","OptionsAssurance","tauxFrais","tauxGestion","tvaFrais","tvaGestion","fraisAcquisitionTTC","fraisGestionTTC","contributionPure","PrelevementSource","assureObj","selectedproduit","Differe","optionAssurance","tvaFraisAcquisition","taxeParaFiscale","montantTaxeParafiscale","montantAccessoire","cotisation","taxeProrata","ProrataTTC","hidden","Souscription_StepThree_StepThree","StepTwo","normes","booleen","periodicites","selectedProduct","onChangePointDeVente","pointsVentes","StepTwo_Option","m","fm","fmEnd","isSame","Souscription_StepTwo_StepTwo","NombreMensualitesEtalementLaPrimeUnique","Step","Souscription","examinateur","examens","listNorme","fields","requestLettreOrientation","nomPrenom","montantFinancement","montantEncours","montantCumul","norme","pointVenteVille","examinateurId","jasperLettre","updateDecesContrat","checkSelectedPers","souscripteurPresent","souscripteurObject","assureObject","allow","newStateSouscripteur","newStateAssure","newStateSouscripteurIsAssure","newStateAssurePresent","souscripteurObj","createDecesContrat","handleConf","montantParticipationHT","montantParticipationTTC","jasperFiles","handleFormChange","onChangeMedecin","allowSec","Partenaires","medecins","responsePartenaire","responsePereiodecite","responseProduit","responseNorme","getDroppDownData","AuxiliairesByType","requestDevis","requestLettre","conditions","respense","responseContrat","conditionsParticulier","numQuittance","myObject","fieldsToRequest","idPeriodicite","seuilReassurance","idProd","idPointVente","agee","normeCapitalAge","steps","okText","cancelText","Souscription_Option","steps_default","done","Production_Prestations_Souscription_Souscription","ajoutCotisation","cotisationRequest","ajoutEncaissement","encaissementRequest","getCotisationById","getEncaissementById","getCompteBancaire","getPrelevement","ids","Cotisation","montantTaxeParaFiscale","solde","cotisationId","emissionGlobale","reste","recordCotisation","getAllEncaissement","handleOK","handleOnClose","dateEncaissement","modeEncaissement","montantEncaissement","montantEncaisser","numReference","numerocompte","accessoire","montantQuittance","montantEmission","handleNumberChange","number","pourcentage","montantAccessoireEncaissement","montantTaxeEncaissement","montantTaxeParafiscaleEncaissement","part1","part2","montantEmissionEncaissement","onChangeMontantEncaisser","comptes","encaissement","fixed","etatCotisation","Cotisation_Option","getAllCotisations","getAllComptes","Comptabilite_MyContext","scroll","help","max","TableauBord_Cotisation","DetailsCotisation","Comptabilite","recherchePrelevement","onChangeMontantCotisation","Comptabilite_Option","TableauBord_DetailsCotisation","Comptabilite_Search","tableLayout","TableauBord_Comptabilite","GestionImpayes","TableauBord_GestionImpayes","CotisationRetraite","ComptabiliteRetraite_MyContext","CotisationRetraite_Option","TableauBord_CotisationRetraite","DetailsCotisationRetraite","ComptabiliteRetraite","montantContributionPeriodique","handleContributionTypeChange","natureDeLaCotisaion","montantContributionPeriodiqueToShow","ComptabiliteRetraite_Option","cotisationType","TableauBord_DetailsCotisationRetraite","ComptabiliteRetraite_Search","TableauBord_ComptabiliteRetraite","TabPane","Global","tabs_default","TableauBord_Global","deleteEventById","now1","user_id","require","color-1","color-2","color-3","color-4","color-5","dat","datas","datas1","Agenda","removeEvent","items","identify","_id","deleteEventId","registre","selected","set","cellHeight","locale","rowsPerHour","numberOfDays","handleRangeSelection","handleItemEdit","zoomIn","zoomOut","_openModal","_closeModal","addNewEvent","editEvent","changeView","handleCellSelection","_step","array","_iterator","_createForOfIteratorHelper","s","n","eventStartDate","eventEndDate","eventDescription","startDateTime","getFullYear","getMonth","getDate","getHours","getMinutes","endDateTime","classes","eventColor","f","last","openModal","num","endDate","showCtrl","stopPropagation","_deleteEventId","_addEvents","array1","_iterator2","_step2","now2","now3","_x3","test","newItems","addEvents","_updateEvents","eventId","updatedEvent","_x4","_x5","updateEvents","days","events","humanize","build","minDate","maxDate","startAtTime","endAtTime","headFormat","itemColors","helper","autoScale","fixedHeader","onRangeSelection","onChangeEvent","handleItemChange","onChangeDuration","handleItemSize","onItemEdit","onCellSelect","onItemRemove","onDateRangeChange","handleDateRangeChange","clickOutside","selectedCells","Addnew","contratID","ConsultRetraiteContrat_MyContext","Avenants_Panel","DetailsTabs_Contrats_Panel","montantContributionInitiale","natureFiscale","deductibiliteFiscale","contratType","DetailsTabs_General_Panel","beneficiaireEnDeces","DetailsTabs_Produits_Panel","dureeMinimalSouscription","natureConditionDisciplinaireTotale","natureConditionDisciplinairePartiel","valeurConditionDisciplinaireTotale","valeurConditionDisciplinairePartiel","poolInvestissment","revenuGlobal","montantMinContribution","tauxRendementAvantImposition","modeGestion","fraisFixeWakalabilIstithmar","surperformanceWakalabilIstithmar","profitMoudaraba","modeCalculCapitalConstitue","regimeFiscal","DetailsTabs_Sinistre_Option","Sinistre_TextArea","GestionContrats_RetraiteContrat_DetailsTabs_Sinistre","Prestation","updateData","result","contextType","DetailsRetraiteContrat","RetraiteContrat_DetailsTabs_General","RetraiteContrat_DetailsTabs_Contrats","RetraiteContrat_DetailsTabs_Produits","RetraiteContrat_DetailsTabs_Avenants","prestation","DetailsTabs_Prestation","ConsultRetraiteContrat","rachatTotal","rachatPartiel","liquidation","avance","handleChangeBenefAction","ajouterBenef","modifierBenef","supprimerBenef","beneficiareAModifier","beneficiareASupprimer","beneficiareAModifierId","beneficiareASupprimerId","nomBeneficiaire","prenomBeneficiaire","ribBeneficiaire","handleBenefeciairesToEditChange","cinBeneficiaire","addBeneficiaireImpl","_ref2","beneficiareResponseModel","handleBenefeciairesToDelete","_ref3","avenantOneShow","avenantOne","avenantTwoShow","avenantTwo","avenantFour","avenantFourShow","avenantFiveShow","avenantFive","nombrePeriodicite","nouveauMontantContributionPeriodique","nouveauDureeContrat","attributionIrrevocable","tauxRedubenificiareCasDecesction","benificiareCasDeces","contratPrestation","rachatTotalVisible","rachatPartielVisible","onChangeNombrePeriodicite","onChangeContributionPeriodique","onChangeDureeContrat","ConsultRetraiteContrat_Option","aSimuler","montantCotisationBrut","nouveauNombrePeriodicite","beneficiareToAdd","handleSimulation","_ref4","o","dateDepart","montantBrutRachatTotal","montantNetRachatTotal","ConsultRetraiteContrat_DetailsRetraiteContrat","typeAvenants","ConsultRetraiteContrat_Search","min","b","RetraiteContrat_ConsultRetraiteContrat_ConsultRetraiteContrat","createPersonMorale","AddPerMorale_AddPerMorale_Option","SouscriptionRetraiteContrat_StepOne_AddPerMorale_AddPerMorale","AddPerPhysique_AddSouscripteur_Option","StepOne_AddPerPhysique_AddSouscripteur","moraleOuPhysique","SouscriptionRetraiteContrat_StepOne_StepOne","DynamicFields","nextKeys","remove","k","_this$props2","keys","defaultValidation","validateTrigger","whitespace","addSingleField","_this$props3","obj","fieldCounter","validation","field","addMultipleFields","_this$props4","reduce","preResult","i","_this$props5","react","Array","isArray","Beneficiaire","stepThreeCallBack","beneficiare_DynamicFields","beneficiare_Beneficiaire","handleCallback","beneficiaireData","beneficiaireEnDecess","getBenefeciaireState","onChangeBeneficiaireCasDeces","beneficiaireCasDeces","onChangeApplicationAttributionIrrevocable","onChangeDeductibiliteFiscale","onChangePrenom","beneficiairesCasDeces","StepThree_Option","RetraiteContrat_SouscriptionRetraiteContrat_StepThree_StepThree","compteJoint","StepTwo_StepTwo_Option","SouscriptionRetraiteContrat_StepTwo_StepTwo","months","formatDateToFormatOne","day","month","year","hours","minutes","formatDateToFormatTwo","formItemLayoutResponsive","formItemInputWithAddons","addons","fieldDecorater","field1","whiteSpace","formItemInputWithoutAddons","getRetraiteProduit","getRetraiteProduitByCode","codeProduit","getRetraiteContratByNumeroContrat","getPoolInvestissment","SouscriptionRetraiteContrat","setBenefeciaire","valueBeneficiare","newBeneficiaireEnDeces","createRetraitContrat","benefecaireBD","benef","addBeneficiaires","toDate","souscriptionCallBack","SouscriptionRetraiteContrat_Step","FichiersEmis","downloadFile","rep","document","download","click","listFiles","listFilesNames","respo","FichiersRecus","selectedPartner","handleChangeProduit","handleChangeTypeFlux","selectedFluxType","handleChangeEtat","selectedEtat","handleDateChange","selectedDate","typeFlux","etat","dateTraitement","typeDeFlux","FichiersRecus_Option","EchangeFichiersInformatiques_FichiersRecus_FichiersRecus","IntegrationManuelle","fileTitleWorker","fileTitle","titleElements","_index","splitedFileContent","split","etatFlux","motifRejetFlux","slice","acceptedFilesNamed","getNumberOfLinesFile","filesContent","removeFileFromTable","fluxRequestModel","produitId","motifRejet","nombreLigneTotal","totalNumberLines","nombreLigneInvalide","nombreLigneValide","trim","readLines","validLines","onChangeUpload","addFileToTable","beforeUpload","reader","FileReader","onload","addContentToTable","readAsText","sbmitForm","IntegrationManuelle_createForOfIteratorHelper","finish","cotisationsListRequest","fluxListRequest","contratFound","agenceFound","contratObject","agenceObject","responseAgence","newFiles","newContent","lines","line","codeAgence","replaceAll","dateFormated","reverse","join","getRetraiteContratByNumero","getPointVenteByCode","requestCotisation","addCotisation","fileContent","stateProp","accept","EchangeFichiersInformatiques_IntegrationManuelle_IntegrationManuelle","EchangeFichiers","getAllProduits","EchangeFichiers_TabPane","Fichiers_Emis_FichiersEmis","EchangeFichiersInformatiques_EchangeFichiers","MenuGauche","rootSubmenuKeys","gestionAcceptation","souscription","simulation","deces","mrb","retraite","openKeys","onOpenChange","latestOpenKey","find","privilege","currentUserRoles","privileges","MenuGauche_SubMenu","onTitleClick","dashed","component","MenuTakaful","isAuthenticated","src_menutakaful_MenuGauche","Login","AntWrappedLoginForm","LoginForm","onLogin","loginRequest","login","setItem","userid","Login_FormItem","ServerError","getAvatarColor","substr","hash","charCodeAt","abs","Profile","user","isLoading","loadUserProfile","username","notFound","serverError","match","params","nextProps","src_common_NotFound","src_common_ServerError","dateString","monthIndex","formatDate","joinedAt","AddPermission","addPermission","roles_and_permissions_AddPermission_AddPermission","AddRole","addRole","AddRole_Option","roles_and_permissions_AddRole_AddRole","EditRole","requestValues","newroles","EditRole_Option","roles_and_permissions_EditRole_EditRole","TreeNode","getParentKey","tree","parentKey","SearchTree_createForOfIteratorHelper","some","SearchTree","onExpand","expandedKeys","autoExpandParent","self","searchValue","prepareDataJsonFormat","mynewDataHelper","childData","itemChild","generateList","SearchTree_Search","tree_default","loop","beforeStr","afterStr","RolesAndPermission","responseP","RolesAndPermission_Panel","roles_and_permissions_SearchTree_SearchTree","j","StepFive","removed","c","cleFieldValue","cle","p","removeOption","optFieldValue","opt","typeTar","ajout","nextCle","ajouter","nextOpt","references","codeCompte","libelleAgence","responsableProduction","responsablePrestation","commissionPartenaire","dateDebut","debut","commissions","data3","handleChangeTarrification","points","currentStep","getAllTypePrestation","getAllPointVentes","getAllOption","getAllPartenaires","_this$props$form","formItemLayoutWithOutLabel","formItems2","formItems1","onChangeDate","StepFive_Option","Steps_StepFive","cles","nextcles","_loop","capitalMax","capitalMin","normesSelection","_loop2","piece","idRestitution","idCauseRestitution","causeRes","pieceJointes","restitutions","JSON","parse","StepFour_createForOfIteratorHelper","data2","localNorme","localRestitution","honoraire","restitutionList","getAllRestitution","getAllCauseRes","getAllHonoraire","formItems","StepFour_Option","formItemsNorme","formItemsRestitution","Steps_StepFour","getAllPeriodicite","Steps_StepOne_Option","Steps_StepOne","tauxFor","tarrifications","currentPrev","flex","StepTarification_Option","StepTarification","Modalite","typePrestationId","delai","typePrestations","StepThree_createForOfIteratorHelper","data1","stringify","getAllTypePrestationFamille","idFamille","handleChangeSelect","Steps_StepThree_Option","Steps_StepThree","Steps_StepTwo_Option","Steps_StepTwo","echeanceImpayees","delaiEnAttente","delaiSansSouscription","visibilite","taxeParafiscale","StepZero","handleChangeRisque","risques","categories","sousCategories","getAllRisque","getAllCategorie","getAllSousCategorie","StepZero_Option","Steps_StepZero","sousCategorie","ProduitDeces","checkCurrent","compteur","checkCurrentZero","typeRisque","checkSelectedLists","arrayPrestation","arrayModalites","modalites","checkSelectedRest","arrayRestitution","arrayNormes","checkTarification","tarrificationList","tarrificationL","checkSelectedTar","dataCommission","dataReference","dataOption","reference","commission","familleProduit","champs","plafondFrais","restitutionPiece","tarrification","getFamilleProduit","periodicit","point","productRequest","libelleCompte","risqueId","categorieId","sousCategorieId","decesCauseRestitution","prestations","familleId","ajoutDecesProduit","removeItem","dataProp","ProduitDeces_Step","StepModalite","radioGroup","fieldToAdd","onChangeRachatTotal","onChangeRachatPartiel","onChangeNatureConditionDT","natureConditionDisciplinaireTotaleValue","onChangeNatureConditionDP","natureConditionDisciplinairePartielValue","conditionDisciplinairePartiel","conditionDisciplinaireTotale","StepModalite_Option","Steps_StepModalite","dureeMinimalSouscriptionAvantRachatTotal","maximumMontantRachatPartiel","nombreMaximumRachatPartiel","dureeMinimalSouscriptionAvantRachatPartiel","selectMultiple","toMap","selectField","ProduitRetraite_Steps_StepOne_Option","ProduitRetraite_Steps_StepOne","naturesFiscale","submit","onChangeNatureFiscale","onChangeAbattement","abattement","handleChangeModeGestion","modeGestionValue","handleChangeModeCalcul","modeCalculCapitalConstitueValue","getAllPoolInvestissment","poolInvestissments","renouvellementContratTaciteReconduction","ProduitRetraite_Steps_StepTwo_Option","ProduitRetraite_Steps_StepTwo","Steps_StepZero_Option","ProduitRetraite_Steps_StepZero","ProduitRetraite","productToSend","dateModification","ProduitRetraite_Step","Details","columns2","columns3","ConsultProduitDeces_MyContext","seuilPrestation","periodicts","ConsultProduitDeces","rechercheDecesProduit","isEdit","handleClicked","codeExoneration","exclu","period","pointV","updateproduct","_context6","ProduitDeces_Details","Parametrage_ProduitDeces_ConsultProduitDeces","LaboForm","ajouterExamens","dateAnalyse","dateReception","laboratoire","testsArray","acceptationExamens","responseTest","parentCallback","laboratoires","ExamensComlementaireAjouter_Option","ExamensComlementaireAjouter_TextArea","ExamensComlementaireAjouter","ExamensComlementaireTable_Option","ExamensComlementaireTable_TextArea","testsMedical","ExamensComlementaireTable_EditableContext","EditableTable","updateTestMedical","Data","acceptationExamensComplementaire","observations","myRow","Response","responseAcc","elementone","dataTable","ExamensComlementaireTable","ExamensComlementaire","ExamensComlementaire_ExamensComlementaireAjouter","ExamensComlementaire_ExamensComlementaireTable","listOnglets","ajouterLaboratoire","verdict","dateVisite","medecin","requestAcceptation","numeroAcceptation","montantMourabaha","jasperLettreAcceptation","acceptationExaminateur","etape","dateVerdict","responseEtape","onglet","ExaminateurAjouter_Option","ExaminateurAjouter_TextArea","verdicts","ExaminateurAjouter","ExaminateurTable_Option","ExaminateurTable_TextArea","observation","observationsVerdict","ExaminateurTable_EditableContext","acceptationsLabo","acceptationsExaminateur","ExaminateurTable","Examinateur","acctivatedOnglet","helpList","filtredList","MedecinHelp","reassuranceHelp","VerdictByType","Examinateur_ExaminateurAjouter","Examinateur_ExaminateurTable","General_createForOfIteratorHelper","numeroDeDossier","acceptationLaboratoire","LaboratoireAjouter_Option","LaboratoireAjouter_TextArea","Laboratoire","LaboratoireTable_Option","LaboratoireTable_TextArea","LaboratoireTable_EditableContext","LaboratoireTable","LaboratoireAjouter","Laboratoire_LaboratoireTable","requestLettreRejet","dateExpertise","tauxSurmoralite","requestRejet","jasperLettreRejet","acceptationConseil","MedecinConseilAjouter_Option","MedecinConseilAjouter_TextArea","MedecinConseilAjouter","MedecinConseilTable_Option","MedecinConseilTable_TextArea","MedecinConseilTable_EditableContext","verdic","acceptationsConseil","MedecinConseilTable","MedecinConseil","examensHelp","MedecinConseil_MedecinConseilAjouter","MedecinConseil_MedecinConseilTable","ajouterSpecialiste","dateReassurance","acceptationReassurance","ReassuranceAjouter_TextArea","ReassuranceAjouter_Option","ReassuranceAjouter","ReassuranceTable_Option","ReassuranceTable_TextArea","ReassuranceTable_EditableContext","updateSpecialiste","updatedspecialiste","dateConsultation","acceptationsSpecialiste","ReassuranceTable","Reassurance","Reassurance_ReassuranceAjouter","Reassurance_ReassuranceTable","specialiste","acceptationSpecialiste","specialistes","SpecialisteAjouter_Option","SpecialisteAjouter_TextArea","SpecialisteAjouter","SpecialisteTable_Option","SpecialisteTable_TextArea","SpecialisteTable_EditableContext","SpecialisteTable","Specialiste_SpecialisteAjouter","Specialiste_SpecialisteTable","ModificationAcceptation","examenseHelp","ModificationTabs_General","ModificationTabs_Laboratoire_Laboratoire","ModificationTabs_Examinateur_Examinateur","medecinConseil","ModificationTabs_MedecinConseil_MedecinConseil","Specialiste_Specialiste","ModificationTabs_ExamensComlementaire_ExamensComlementaire","reassurance","ModificationTabs_Reassurance_Reassurance","Specialiste","ConsultationAcceptation","ConsultationTabs_Laboratoire","ConsultationTabs_Examinateur","ConsultationTabs_MedecinConseil","ConsultationTabs_Specialiste","ConsultationTabs_ExamensComlementaire","ConsultationTabs_Reassurance","Modification_StepOne_Option","Modification_StepOne","NormeAjouter","Modification_NormeAjouter","NormeTable_Option","NormeTable_EditableContext","NormeTable","updateNormes","updatedNorme","updateNorme","rechercheNorme","getNormeById","honoraireList","Modification_NormeTable","ProduitDeces_Modification_StepThree","Modification_StepTwo_Option","Modification_StepTwo","Hon","Modification","Modification_Step","AjoutProduit","natureBien","valeurMax","valeurMin","natureSouscripteur","franchiseCatastrophesNaturelles","montantMaximum","exclusionsProduit","periodicitesMrb","tarificationsMrb","ajouterProduitMrb","tarifications","AjoutProduit_Option","ProduitMrb_AjoutProduit","ModifieProduitMRB","updatedProductMrb","ModifieProduitMRB_Option","ProduitMrb_ModifieProduitMRB","dateFormat","columnsSimulation","Simulation","sousc","onChangeDateNaissance","dateConvert","onChangeNom","fieldsValue","usedProducts","updated","Simulation_Title","Simulation_Option","simulation_Simulation","SimulationMrb","valeurC","jasperFilesMrb","devisMrb","SimulationMrb_Title","SimulationMrb_Option","simulation_SimulationMrb","formItemLayoutDetailsRetraiteProduit","initialState","commissionsColumns","Tag","libelles","ConsultationRetraiteProduit_MyContext","ConsultationRetraiteProduit","rechercheRetraiteProduit","_ref5","_ref6","_callee6","_x6","ProduitRetraite_Details_Details","Parametrage_ProduitRetraite_ConsultationRetraiteProduit","ProduitRetraite_Modification_StepOne_Option","ProduitRetraite_Modification_StepOne","onChangeModeGestion","onChangeRevenuGlobal","onChangeAbattementFiscal","abattementFiscal","naturesFiscales","modesGestions","modeCapitalReconstitue","Modification_StepThree_Option","ProduitRetraite_Modification_StepThree","onChangeApplicationConditionDisciplinairePartiel","onChangeApplicationConditionDisciplinaireTotale","onChangeNatureConditionDisciplinairePartiel","onChangeNatureConditionDisciplinaireTotale","conditionsDisciplinaires","ProduitRetraite_Modification_StepTwo_Option","ProduitRetraite_Modification_StepTwo","ModificationRetraiteProduit","checkRachatPartiel","checkRachatTotal","checkMoudaraba","checkWakalaBilIstithmar","validityOfOtherFields","ModificationRetraiteProduit_Step","checkForm1Validity","checkForm2Validity","checkForm3Validity","Content","Footer","App","onCollapse","collapsed","handleLogout","loadCurrentUser","handleLogin","config","placement","redirectTo","notificationType","acceuilM","App_createForOfIteratorHelper","start","startEvent","floor","Sider_default","collapsible","menutakaful_MenuTakaful","src_common_AppHeader","Switch","Route","exact","path","menutakaful_Acceuil_Acceuil","roles_and_permissions_RolesAndPermission","Parametrage_ProduitDeces_ProduitDeces","Parametrage_ProduitRetraite_ProduitRetraite","menutakaful_Utilitaire_Agenda","RetraiteContrat_SouscriptionRetraiteContrat_SouscriptionRetraiteContrat","Production_Prestations_GestionAcceptation_GestionAcceptation","GestionAcceptation_ModificationAcceptation","GestionAcceptation_ConsultationAcceptation","ProduitDeces_Modification_Modification","Modification_ModificationRetraiteProduit","Production_Prestations_Honoraire_Honoraire","user_profile_Profile","breadcrumbName","Participants_AllParticipant","DetailsTabs_Reglement","user_login_Login","Boolean","hostname","ReactDOM","BrowserRouter","basename","src_app_App","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","__webpack_require__"],"mappings":"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","file":"static/js/main.389738bc.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const API_BASE_URL =\r\n  process.env.REACT_APP_API_BASE_URL ||\r\n  \"https://ws44.mamda-mcma.ma:8443/takaful/api\";\r\n// process.env.REACT_APP_API_BASE_URL || \"http://localhost:8085/api\";\r\n\r\nexport const ACCESS_TOKEN = \"accessToken\";\r\nexport const UserID = \"userId\";\r\nexport const UserName = \"username\";\r\nexport const NOM_ASSURE = \"nom\";\r\nexport const CIN_ASSURE = \"cin\";\r\nexport const NUM_CONTRAT = \"numeroContrat\";\r\nexport const MEDECIN_EXAMINATEUR = \"MEDECIN EXAMINATEUR\";\r\nexport const MEDECIN_CONSEIL = \"MEDECIN CONSEIL\";\r\nexport const MEDECIN_SPECIALISTE = \"MEDECIN SPECIALISTE\";\r\nexport const LABORATOIRE = \"LABORATOIRE\";\r\n\r\nexport const VERDICT_EXAMINATEUR = \"examinateur\";\r\nexport const VERDICT_NON_EXAMINATEUR = \"nonexaminateur\";\r\nexport const POLL_LIST_SIZE = 30;\r\nexport const MAX_CHOICES = 6;\r\nexport const POLL_QUESTION_MAX_LENGTH = 140;\r\nexport const POLL_CHOICE_MAX_LENGTH = 40;\r\n\r\nexport const NAME_MIN_LENGTH = 4;\r\nexport const NUMERO_COMPTE_LENGTH = 24;\r\nexport const NAME_MAX_LENGTH = 40;\r\n\r\nexport const USERNAME_MIN_LENGTH = 3;\r\nexport const USERNAME_MAX_LENGTH = 15;\r\n\r\nexport const EMAIL_MAX_LENGTH = 40;\r\n\r\nexport const PASSWORD_MIN_LENGTH = 6;\r\nexport const PASSWORD_MAX_LENGTH = 20;\r\n\r\nexport const AVN_CHANGEMENT_CAPITAL_DURE = \"AVN01\";\r\nexport const AVN_PERIODICITE = \"AVN02\";\r\nexport const AVN_MONTANT_CONTRIBUTION = \"AVN03\";\r\nexport const AVN_BENEFICIAIRE = \"AVN04\";\r\nexport const AVN_DURE = \"AVN05\";\r\nexport const AVN_ADRESSE = \"AVN06\";\r\n\r\nexport const BRANCH_TYPE_DECES_ET_RETRAITE = \"DECES_ET_RETRAITE\";\r\nexport const BRANCH_TYPE_DECES = \"DECES\";\r\nexport const BRANCH_TYPE_RETRAITE = \"EPARGNE\";\r\n\r\nexport const STATUS_WAITING_ACCEPTATION = \"WAITING_ACCEPTATION\";\r\n\r\nexport const REQUEST = options => {\r\n  var aut = \"\";\r\n  if (localStorage.getItem(ACCESS_TOKEN)) {\r\n    aut = localStorage.getItem(ACCESS_TOKEN);\r\n  }\r\n  const headers = {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: aut,\r\n    \"Cache-Control\": \"no-store, no-cache\"\r\n  };\r\n  const defaults = { headers: headers };\r\n  options = Object.assign({}, defaults, options);\r\n\r\n  return axios(options);\r\n};\r\nexport const PERSONNE_PHYSIQUE = \"physique\";\r\nexport const PERSONNE_MORALE = \"morale\";\r\nexport const AL_AKHDAR_Code = \"ALAKHDAR\";\r\nexport const AL_YOUSR_Code = \"BKAY\";\r\nexport const ADMIN = \"ADMIN\";\r\n\r\n//Privileges\r\nexport const GESTION_ACCEPTATION = \"GESTION_ACCEPTATION\";\r\nexport const GESTION_PATAMETRAGE = \"GESTION_PATAMETRAGE\";\r\nexport const GESTION_ROLE_ET_PERMISSION = \"GESTION_ROLE_ET_PERMISSION\";\r\nexport const GESTION_UTILISATEURS = \"GESTION_UTILISATEURS\";\r\nexport const CREATION_CONTRAT = \"CREATION_CONTRAT\";\r\nexport const SIMULATION = \"SIMULATION\";\r\nexport const CONTRAT_DECES = \"CONTRAT_DECES\";\r\nexport const CONTRAT_MRB = \"CONTRAT_MRB\";\r\nexport const CONTRAT_RETRAITE = \"CONTRAT_RETRAITE\";\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../../constants/index\";\r\n\r\nexport function getUsers() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/user?page=0&sort=firstName&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function updateUser(userId, updatedUser) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/user/\" + userId,\r\n    data: updatedUser,\r\n    method: \"PUT\"\r\n  });\r\n}\r\n\r\nexport function deleteUser(userId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/user/delete/\" + userId,\r\n    method: \"DELETE\"\r\n  });\r\n}\r\nexport function getAllRoles() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/role?page=0&sort=name&direction=asc&limit=100\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getAllPrivileges() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/privilege\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function addNewRole(role) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/role\",\r\n    method: \"POST\",\r\n    data: role\r\n  });\r\n}\r\nexport function addNewPermission(name) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/privilege?privilege-name=\" + name,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function editRole(role, id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/role/\" + id,\r\n    method: \"PUT\",\r\n    data: role\r\n  });\r\n}\r\nexport function getUserNotifications() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/notifications?limit=5&page=0\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function updateNotification(id, notification) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/notification/\" + id,\r\n    method: \"PUT\",\r\n    data: notification\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"./AppHeader.css\";\r\n\r\nimport { Badge, Card, Dropdown, Icon, Input, Layout, Menu } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport {\r\n  getUserNotifications,\r\n  updateNotification\r\n} from \"../menutakaful/Administration/AdministartionAPI\";\r\n\r\nconst Header = Layout.Header;\r\nconst { SubMenu } = Menu;\r\n\r\nclass AppHeader extends Component {\r\n  state = {\r\n    notification: [],\r\n    count: 0\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleMenuClick = this.handleMenuClick.bind(this);\r\n  }\r\n\r\n  handleMenuClick({ key }) {\r\n    if (key === \"logout\") {\r\n      this.props.onLogout();\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadNotification();\r\n  }\r\n\r\n  async loadNotification() {\r\n    let responce = await getUserNotifications();\r\n    let count = 0;\r\n    responce.data.content.forEach(element => {\r\n      if (element.read === false) count++;\r\n    });\r\n\r\n    this.setState({ count, notification: responce.data.content });\r\n  }\r\n\r\n  async readNotification(id, notification) {\r\n    if (notification.read === false) {\r\n      notification.read = true;\r\n      delete notification.id;\r\n      await updateNotification(id, notification);\r\n      this.setState({ count: this.state.count - 1 });\r\n    }\r\n  }\r\n  render() {\r\n    let menuItems;\r\n    if (this.props.currentUser) {\r\n      menuItems = (\r\n        <Menu\r\n          mode=\"horizontal\"\r\n          theme=\"light\"\r\n          selectedkeys={[this.props.location.pathname]}\r\n          onClick={this.handleMenuClick}\r\n          style={{ backgroundColor: \"#fafafa\" }}\r\n        >\r\n          <Menu.Item\r\n            key=\"logout\"\r\n            style={{ float: \"right\", height: \"64px\", color: \"grey\" }}\r\n          >\r\n            Bonjour, {this.props.currentUser.firstName.toUpperCase()}{\" \"}\r\n            {this.props.currentUser.lastName.toUpperCase()}\r\n            <Icon type=\"logout\" style={{ marginLeft: \"10px\" }} />\r\n          </Menu.Item>\r\n\r\n          <Menu.Divider\r\n            type=\"vertical\"\r\n            style={{ float: \"right\", height: \"64px\" }}\r\n          />\r\n\r\n          <SubMenu\r\n            style={{ float: \"right\", height: \"64px\" }}\r\n            title={\r\n              <span className=\"submenu-title-wrapper\">\r\n                <Icon\r\n                  type=\"user\"\r\n                  style={{ marginLeft: \"10px\", color: \"rgba(0, 0, 0, 0.65)\" }}\r\n                />\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.ItemGroup title={this.props.currentUser.email}>\r\n              <Menu.Divider />\r\n              <Menu.Item key=\"profile\" style={{ color: \"rgba(0, 0, 0, 0.65)\" }}>\r\n                Profile\r\n              </Menu.Item>\r\n              <Menu.Item key=\"logout\" style={{ color: \"rgba(0, 0, 0, 0.65)\" }}>\r\n                Se déconnecter\r\n              </Menu.Item>\r\n            </Menu.ItemGroup>\r\n          </SubMenu>\r\n\r\n          <Menu.Divider\r\n            type=\"vertical\"\r\n            style={{ float: \"right\", height: \"64px\" }}\r\n          />\r\n\r\n          <Menu.Item style={{ float: \"right\", height: \"64px\" }}>\r\n            <Dropdown\r\n              style={{ float: \"right\", height: \"64px\" }}\r\n              trigger={[\"click\"]}\r\n              overlay={\r\n                <Menu>\r\n                  {\" \"}\r\n                  {this.state.notification.map(element => (\r\n                    <Menu.Item key={element.id} style={{ padding: \"0px  5px\" }}>\r\n                      {element.read === false ? (\r\n                        <Card\r\n                          onClick={() =>\r\n                            this.readNotification(element.id, element)\r\n                          }\r\n                          style={{ backgroundColor: \"#F0F8FF\" }}\r\n                        >\r\n                          <p>{element.message}</p>\r\n                        </Card>\r\n                      ) : (\r\n                        <Card\r\n                          onClick={() =>\r\n                            this.readNotification(element.id, element)\r\n                          }\r\n                          style={{ backgroundColor: \"#FFFFFF\" }}\r\n                        >\r\n                          <p>{element.message}</p>\r\n                        </Card>\r\n                      )}\r\n                    </Menu.Item>\r\n                  ))}\r\n                </Menu>\r\n              }\r\n            >\r\n              <Badge count={this.state.count}>\r\n                {\" \"}\r\n                <Icon type=\"notification\" />\r\n              </Badge>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n\r\n          <Menu.Divider\r\n            type=\"vertical\"\r\n            style={{ float: \"right\", height: \"64px\" }}\r\n          />\r\n\r\n          <Menu.Item style={{ float: \"left\", height: \"64px\" }}>\r\n            <Input\r\n              placeholder=\"   Recherche sur Atlas Takaful Système \"\r\n              className=\"search-header\"\r\n              prefix={\r\n                <Icon type=\"search\" style={{ color: \"rgba(0,0,0,.25)\" }} />\r\n              }\r\n              style={{ color: \"rgba(0,0,0,.25)\" }}\r\n            />\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n    } else {\r\n      menuItems = (\r\n        <Menu\r\n          style={{ height: \"64px\" }}\r\n          mode=\"horizontal\"\r\n          selectedkeys={[this.props.location.pathname]}\r\n        >\r\n          <Menu.Item key=\"/login\" style={{ float: \"right\", height: \"64px\" }}>\r\n            <Link to=\"/login\">Login</Link>\r\n          </Menu.Item>\r\n          <Menu.Item key=\"/signup\" style={{ float: \"right\", height: \"64px\" }}>\r\n            <Link to=\"/signup\">Signup</Link>\r\n          </Menu.Item>\r\n        </Menu>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Header style={{ padding: \"0px\", height: \"auto\" }}>{menuItems}</Header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(AppHeader);\r\n","import { Icon, Spin } from \"antd\";\r\nimport React from \"react\";\r\n\r\nexport default function LoadingIndicator(props) {\r\n  const antIcon = (\r\n    <Icon type=\"loading-3-quarters\" style={{ fontSize: 30 }} spin />\r\n  );\r\n  return (\r\n    <Spin\r\n      indicator={antIcon}\r\n      style={{ display: \"block\", textAlign: \"center\", marginTop: 30 }}\r\n    />\r\n  );\r\n}\r\n","import \"./NotFound.css\";\r\n\r\nimport { Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"page-not-found\">\r\n        <h1 className=\"title\">404</h1>\r\n        <div className=\"desc\">La page que vous recherchez est introuvable.</div>\r\n        <Link to=\"/\">\r\n          <Button className=\"go-back-btn\" type=\"primary\" size=\"large\">\r\n            Retourner\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import \"./acceuil.css\";\r\n\r\nimport { Avatar, Card, Col, Row } from \"antd\";\r\nimport { scaleOrdinal } from \"d3-scale\";\r\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { PureComponent } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Bar,\r\n  BarChart,\r\n  CartesianGrid,\r\n  Cell,\r\n  Pie,\r\n  PieChart,\r\n  XAxis,\r\n  YAxis\r\n} from \"recharts\";\r\n\r\nimport img1 from \"../../assets/adminstartioncon.webp\";\r\nimport img2 from \"../../assets/paramicon.webp\";\r\nimport img3 from \"../../assets/productionIcon.webp\";\r\nimport img4 from \"../../assets/participantsIcon.webp\";\r\n\r\nconst { Meta } = Card;\r\n\r\n//chartLine config\r\nconst colors = scaleOrdinal(schemeCategory10).range();\r\n\r\nconst dataLine = [\r\n  {\r\n    name: \"Produit A\",\r\n    uv: 4000,\r\n    female: 2400,\r\n    male: 2400\r\n  },\r\n  {\r\n    name: \"Produit B\",\r\n    uv: 3000,\r\n    female: 1398,\r\n    male: 2210\r\n  },\r\n  {\r\n    name: \"Produit C\",\r\n    uv: 2000,\r\n    female: 9800,\r\n    male: 2290\r\n  }\r\n];\r\n\r\nconst getPath = (x, y, width, height) => `M${x},${y + height}\r\n          C${x + width / 3},${y + height} ${x + width / 2},${y +\r\n  height / 3} ${x + width / 2}, ${y}\r\n          C${x + width / 2},${y + height / 3} ${x + (2 * width) / 3},${y +\r\n  height} ${x + width}, ${y + height}\r\n          Z`;\r\n\r\nconst TriangleBar = props => {\r\n  const { fill, x, y, width, height } = props;\r\n\r\n  return <path d={getPath(x, y, width, height)} stroke=\"none\" fill={fill} />;\r\n};\r\n\r\nTriangleBar.propTypes = {\r\n  fill: PropTypes.string,\r\n  x: PropTypes.number,\r\n  y: PropTypes.number,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number\r\n};\r\n\r\n//chart2 config\r\nconst data = [\r\n  { name: \"Group A\", value: 400 },\r\n  { name: \"Group B\", value: 300 },\r\n  { name: \"Group C\", value: 300 },\r\n  { name: \"Group D\", value: 200 }\r\n];\r\n\r\nconst COLORS = [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"];\r\n\r\nconst RADIAN = Math.PI / 180;\r\nconst renderCustomizedLabel = ({\r\n  cx,\r\n  cy,\r\n  midAngle,\r\n  innerRadius,\r\n  outerRadius,\r\n  percent\r\n}) => {\r\n  const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\r\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\r\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\r\n\r\n  return (\r\n    <text\r\n      x={x}\r\n      y={y}\r\n      fill=\"white\"\r\n      textAnchor={x > cx ? \"start\" : \"end\"}\r\n      dominantBaseline=\"central\"\r\n    >\r\n      {`${(percent * 100).toFixed(0)}%`}\r\n    </text>\r\n  );\r\n};\r\n\r\nclass Acceuil extends PureComponent {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Card\r\n              type=\"inner\"\r\n              align=\"center\"\r\n              title=\"Répartition du chiffre d'affaires par produit\"\r\n              bordered={true}\r\n            >\r\n              <PieChart width={500} height={300}>\r\n                <Pie\r\n                  data={data}\r\n                  cx={200}\r\n                  cy={150}\r\n                  labelLine={false}\r\n                  label={renderCustomizedLabel}\r\n                  outerRadius={150}\r\n                  fill=\"#8884d8\"\r\n                  dataKey=\"value\"\r\n                >\r\n                  {data.map((entry, index) => (\r\n                    <Cell\r\n                      key={`cell-${index}`}\r\n                      fill={COLORS[index % COLORS.length]}\r\n                    />\r\n                  ))}\r\n                </Pie>\r\n              </PieChart>\r\n            </Card>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Card\r\n              type=\"inner\"\r\n              title=\"Production Par produit\"\r\n              align=\"center\"\r\n              bordered={true}\r\n            >\r\n              <BarChart\r\n                margin={{\r\n                  top: 20,\r\n                  right: 30,\r\n                  left: 20,\r\n                  bottom: 5\r\n                }}\r\n                width={500}\r\n                height={300}\r\n                data={dataLine}\r\n              >\r\n                <CartesianGrid strokeDasharray=\"3 3\" />\r\n                <XAxis dataKey=\"name\" />\r\n                <YAxis />\r\n                <Bar\r\n                  dataKey=\"female\"\r\n                  fill=\"#8884d8\"\r\n                  shape={<TriangleBar />}\r\n                  label={{ position: \"top\" }}\r\n                >\r\n                  {dataLine.map((entry, index) => (\r\n                    <Cell key={`cell-${index}`} fill={colors[index % 20]} />\r\n                  ))}\r\n                </Bar>\r\n              </BarChart>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n        <Row gutter={23}>\r\n          <Col span={6}>\r\n            <Link to=\"/users\">\r\n              <Card\r\n                hoverable\r\n                style={{ borderTop: \"3px solid rgb(236 154 52)\" }}\r\n                cover={<img src={img1} alt=\"users\" />}\r\n              >\r\n                <Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}\r\n                    >\r\n                      A\r\n                    </Avatar>\r\n                  }\r\n                  title=\"Administration\"\r\n                  description=\"Gestion des utilisateurs\"\r\n                  style={{ width: 226, height: 93 }}\r\n                />\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Link to=\"/consultproduitdeces\">\r\n              <Card\r\n                hoverable\r\n                style={{ borderTop: \"3px solid rgb(138 155 247)\" }}\r\n                cover={<img src={img2} alt=\"consultproduitdeces\" />}\r\n              >\r\n                <Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}\r\n                    >\r\n                      G\r\n                    </Avatar>\r\n                  }\r\n                  title=\"Paramétrage\"\r\n                  description=\"Gestion des produits\"\r\n                  style={{ width: 226, height: 93 }}\r\n                />\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Link to=\"/souscription\">\r\n              <Card\r\n                hoverable\r\n                style={{ borderTop: \"3px solid rgb(146 206 222)\" }}\r\n                cover={<img src={img3} alt=\"souscription\" />}\r\n              >\r\n                <Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}\r\n                    >\r\n                      S\r\n                    </Avatar>\r\n                  }\r\n                  title=\"Production\"\r\n                  description=\"Nouvelle souscription\"\r\n                  style={{ width: 226, height: 93 }}\r\n                />\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n          <Col span={6}>\r\n            <Link to=\"/AllParticipant\">\r\n              <Card\r\n                hoverable\r\n                style={{ borderTop: \"3px solid rgb(255 59 59)\" }}\r\n                cover={<img src={img4} alt=\"AllParticipant\" />}\r\n              >\r\n                <Meta\r\n                  avatar={\r\n                    <Avatar\r\n                      style={{ color: \"#f56a00\", backgroundColor: \"#fde3cf\" }}\r\n                    >\r\n                      P\r\n                    </Avatar>\r\n                  }\r\n                  title=\"Participants\"\r\n                  description=\"Gestion des clients\"\r\n                  style={{ width: 226, height: 93 }}\r\n                />\r\n              </Card>\r\n            </Link>\r\n          </Col>\r\n        </Row>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Acceuil;\r\n","/* eslint-disable react/prop-types */\r\nimport { Divider, Typography } from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst ComponentTitle = props => {\r\n  return (\r\n    <div>\r\n      {\" \"}\r\n      <Title\r\n        level={props.level || 3}\r\n        style={{\r\n          fontFamily:\r\n            \"Calibri, Candara, Segoe, 'Segoe UI', Optima, Arial, sans-serif\",\r\n          color: \"rgba(0, 0, 0, 0.57)\",\r\n          fontSize: \"22px\",\r\n          fontWeight: \"normal\"\r\n        }}\r\n      >\r\n        {props.title}\r\n      </Title>\r\n      <Divider style={{ marginBottom: \"30px\", marginTop: \"10px\" }}></Divider>\r\n    </div>\r\n  );\r\n};\r\nexport default ComponentTitle;\r\n","/* eslint-disable react/prop-types */\r\nimport \"./AddUserForm.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport md5 from \"md5\";\r\nimport React, { Component } from \"react\";\r\n//import { auth, db } from \"../../Utilitaire/disccussion/services/firebase\";\r\nimport { signup } from \"../../../user/UserAPI\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddUserForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      roles: this.props.Roles,\r\n      createdUser: {}\r\n      //usersRef: db.ref(\"users\")\r\n    };\r\n  }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    // if (prevState.createdUser !== this.state.createdUser) {\r\n    //   auth()\r\n    //     .createUserWithEmailAndPassword(\r\n    //       this.state.createdUser.email,\r\n    //       this.state.createdUser.id\r\n    //     )\r\n    //     .then(createdUser => {\r\n    //       createdUser.user\r\n    //         .updateProfile({\r\n    //           displayName:\r\n    //             this.state.createdUser.firstName +\r\n    //             \" \" +\r\n    //             this.state.createdUser.lastName,\r\n    //           photoURL: `http://gravatar.com/avatar/${md5(\r\n    //             createdUser.user.email\r\n    //           )}?d=identicon`\r\n    //         })\r\n    //         .then(() => {\r\n    //           this.saveUser(createdUser).then(() => {\r\n    //             this.setState({ loading: false });\r\n    //           });\r\n    //         })\r\n    //         .catch(err => {\r\n    //           console.error(err);\r\n    //           this.setState({\r\n    //             errors: this.state.errors.concat(err),\r\n    //             loading: false\r\n    //           });\r\n    //         });\r\n    //       this.setState({ loading: false });\r\n    //     });\r\n    // }\r\n  }\r\n\r\n  async signUpUser(values) {\r\n    try {\r\n      let response = await signup(values);\r\n\r\n      if (response.status === 200) {\r\n        this.setState({ createdUser: response.data });\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"Utilisateur bien crier\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      this.onClose();\r\n\r\n      if (error.response.data.message === \"takaful user already exists\") {\r\n        notification.error({\r\n          message: \"Un utilisateur est déja inscrit par cette adress mail.\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message ||\r\n            \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        delete values.confirm;\r\n        let roles = [];\r\n        let Pointvente = [];\r\n        values.roles.forEach(element => {\r\n          roles.push({ name: element });\r\n        });\r\n        values.roles = [...roles];\r\n\r\n        values.pointVentes.forEach(element => {\r\n          Pointvente.push({ id: element });\r\n        });\r\n\r\n        values.pointVentes = [...Pointvente];\r\n\r\n        this.signUpUser(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  // saveUser = createdUser => {\r\n  //   return this.state.usersRef.child(createdUser.user.uid).set({\r\n  //     name: createdUser.user.displayName,\r\n  //     avatar: createdUser.user.photoURL\r\n  //   });\r\n  // };\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  compareToFirstPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && value !== form.getFieldValue(\"password\")) {\r\n      callback(\"Les mots de passe que vous avez saisi ne sont pas identique\");\r\n    } else {\r\n      callback();\r\n    }\r\n  };\r\n\r\n  validateToNextPassword = (rule, value, callback) => {\r\n    const { form } = this.props;\r\n    if (value && this.state.confirmDirty) {\r\n      form.validateFields([\"confirm\"], { force: true });\r\n    }\r\n    callback();\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"add-button nouveau-btn\"\r\n          onClick={this.showDrawer}\r\n        >\r\n          <Icon type=\"user-add\" /> Nouveau compte\r\n        </Button>\r\n        <Drawer\r\n          title=\"Création d'un nouveau utilisateur\"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prénom\">\r\n                  {getFieldDecorator(\"firstName\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le prénom d'utilisateur\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le prénom d'utilisateur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nom\">\r\n                  {getFieldDecorator(\"lastName\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le prénom d'utilisateur\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le nom d'utilisateur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"E-mail\">\r\n                  {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                      {\r\n                        type: \"email\",\r\n                        message: \"L'e-mail n'est pas valid\"\r\n                      },\r\n                      {\r\n                        required: true,\r\n                        message: \"Svp entré votre E-mail!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez l'email d'utilisateur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"mot de passe\" hasFeedback>\r\n                  {getFieldDecorator(\"password\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"entre votre mot de pass\"\r\n                      },\r\n                      {\r\n                        validator: this.validateToNextPassword\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input.Password\r\n                      style={{ width: \"100%\", borderRadius: \"0px\" }}\r\n                      placeholder=\"mot de pass\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item hasFeedback label=\"Confirmation\">\r\n                  {getFieldDecorator(\"confirm\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Merci de confirmer votre mot de passe\"\r\n                      },\r\n                      {\r\n                        validator: this.compareToFirstPassword\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input.Password\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"mot de pass\"\r\n                      onBlur={this.handleConfirmBlur}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Profil\">\r\n                  {getFieldDecorator(\"roles\")(\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"cliquez pour ajouter un profil\"\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.state.roles.map(element => {\r\n                        return (\r\n                          <Option\r\n                            value={element.name}\r\n                            label={element.name}\r\n                            key={element.name}\r\n                          >\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Points de vente\">\r\n                  {getFieldDecorator(\"pointVentes\")(\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"cliquez pour ajouter un point de vente\"\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.props.Pointvente.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.libelle}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                width: \"100%\",\r\n                borderTop: \"1px solid #e9e9e9\",\r\n                padding: \"10px 16px\",\r\n                background: \"#fff\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddUserForm);\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  UserID,\r\n  ACCESS_TOKEN\r\n} from \"../constants/index\";\r\n\r\nexport function login(loginRequest) {\r\n  return request({\r\n    url: API_BASE_URL + \"/public/login\",\r\n    method: \"POST\",\r\n    data: loginRequest\r\n  });\r\n}\r\n\r\nexport function signup(signupRequest) {\r\n  return request({\r\n    url: API_BASE_URL + \"/private/sign-up\",\r\n    method: \"POST\",\r\n    data: signupRequest\r\n  });\r\n}\r\nexport function getCurrentUser() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/user/\" + localStorage.getItem(UserID),\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getUserProfile(username) {\r\n  return request({\r\n    url: API_BASE_URL + \"/private/user/\" + localStorage.getItem(UserID),\r\n    method: \"GET\"\r\n  });\r\n}\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../../../constants/index\";\r\nexport function getAllPointVente() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/pointventes?direction=asc&limit=8&page=0&sort=abb\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function addPointVente(createPointVenteRequest) {\r\n  return request({\r\n    url: API_BASE_URL + \"/private/pointvente\",\r\n    method: \"POST\",\r\n    data: createPointVenteRequest\r\n  });\r\n}\r\nexport function getTypePointVente() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/typepointventes?direction=asc&limit=4&page=0&sort=id\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updatePointVente(PointVenteId, PointVenteToUpdate) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/pointvente/\" + PointVenteId,\r\n    method: \"PUT\",\r\n    data: PointVenteToUpdate\r\n  });\r\n}\r\nexport function getPointVenteByCodeInterne(code) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/pointventebycode/\" + code,\r\n    method: \"GET\"\r\n  });\r\n}\r\n","import { Button, Icon, Input } from \"antd\";\r\nimport React from \"react\";\r\nimport Highlighter from \"react-highlight-words\";\r\n\r\nexport const getColumnSearchProps = (dataIndex, nameToShow, context) => ({\r\n  filterDropdown: ({\r\n    setSelectedKeys,\r\n    selectedKeys,\r\n    confirm,\r\n    clearFilters,\r\n  }) => (\r\n    <div style={{ padding: 8 }}>\r\n      <Input\r\n        ref={(node) => {\r\n          context.searchInput = node;\r\n        }}\r\n        placeholder={`Recherche par ${nameToShow}`}\r\n        value={selectedKeys[0]}\r\n        onChange={(e) =>\r\n          setSelectedKeys(e.target.value ? [e.target.value] : [])\r\n        }\r\n        onPressEnter={() =>\r\n          context.handleSearch(selectedKeys, confirm, dataIndex)\r\n        }\r\n        style={{ width: 188, marginBottom: 8, display: \"block\" }}\r\n      />\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => context.handleSearch(selectedKeys, confirm, dataIndex)}\r\n        icon=\"search\"\r\n        size=\"small\"\r\n        style={{ width: 90, marginRight: 8 }}\r\n      >\r\n        Search\r\n      </Button>\r\n      <Button\r\n        onClick={() => context.handleReset(clearFilters)}\r\n        size=\"small\"\r\n        style={{ color: \"white\", width: 90, backgroundColor: \"#ffc069\" }}\r\n      >\r\n        Reset\r\n      </Button>\r\n    </div>\r\n  ),\r\n\r\n  filterIcon: (filtered) => (\r\n    <div>\r\n      <Icon type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />\r\n    </div>\r\n  ),\r\n\r\n  onFilter: (value, record) =>\r\n    record[dataIndex]\r\n      .toString()\r\n      .toLowerCase()\r\n      .startsWith(value.toLowerCase()),\r\n\r\n  onFilterDropdownVisibleChange: (visible) => {\r\n    if (visible) {\r\n      setTimeout(() => context.searchInput.select());\r\n    }\r\n  },\r\n\r\n  render: (text) =>\r\n    context.state.searchedColumn === dataIndex ? (\r\n      <Highlighter\r\n        highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\r\n        searchWords={[context.state.searchText]}\r\n        autoEscape\r\n        textToHighlight={text.toString()}\r\n      />\r\n    ) : (\r\n      text\r\n    ),\r\n});\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  Table,\r\n  Tag\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport AddUserForm from \"./AddUserForm\";\r\nimport {\r\n  getAllRoles,\r\n  deleteUser,\r\n  updateUser,\r\n  getUsers\r\n} from \"../AdministartionAPI\";\r\nimport { getAllPointVente } from \"../../Parametrage/pointvente/PointVenteAPI\";\r\nimport { getColumnSearchProps } from \"../../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nlet roles = [];\r\nlet rolesUser = [];\r\nlet pointventes = [];\r\nlet pointventesdata = [];\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      rolesloaded: false,\r\n      editingKey: \"\",\r\n      rowSelection: \"\",\r\n      searchText: \"\",\r\n      searchedColumn: \"\"\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Prénom\",\r\n        dataIndex: \"firstName\",\r\n        key: \"firstName\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"firstName\", \"LibfirstNameelle\", this)\r\n      },\r\n      {\r\n        title: \"Nom\",\r\n        dataIndex: \"lastName\",\r\n        key: \"lastName\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"lastName\", \"nom\", this)\r\n      },\r\n      {\r\n        title: \"Email\",\r\n        dataIndex: \"email\",\r\n        key: \"email\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"email\", \"email\", this)\r\n      },\r\n      {\r\n        title: \"Rôles\",\r\n        align: \"center\",\r\n        key: \"roles\",\r\n        dataIndex: \"roles\",\r\n        editable: true,\r\n        width: \"15%\",\r\n        render: roles => (\r\n          <span>\r\n            {roles.map(tag => {\r\n              let color = tag.name.length > 10 ? \"geekblue\" : \"green\";\r\n              if (tag.name === \"ADMIN\") {\r\n                color = \"volcano\";\r\n              }\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.name.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Agences\",\r\n        align: \"center\",\r\n        key: \"pointVentes\",\r\n        dataIndex: \"pointVentes\",\r\n        editable: true,\r\n        width: \"15%\",\r\n        render: pointVentes => (\r\n          <span>\r\n            {pointVentes.map(tag => {\r\n              let color = tag.libelle.length > 6 ? \"geekblue\" : \"green\";\r\n              if (tag.libelle.length > 15) color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        align: \"center\",\r\n        dataIndex: \"operation\",\r\n        width: \"15%\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"est ce que vous etes sur d'annuler l'operation ?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a>Annuler</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => {\r\n                  this.edit(record.key);\r\n                }}\r\n              >\r\n                <Icon\r\n                  type=\"edit\"\r\n                  style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n                />\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"est ce que vous etes sur de supprimer l'utilisateur?\"\r\n                onConfirm={() => this.handleDelete(record.key)}\r\n              >\r\n                <a disabled={editingKey !== \"\"} style={{ color: \"red\" }}>\r\n                  <Icon\r\n                    type=\"user-delete\"\r\n                    style={{ color: \"rgb(208, 62, 62)\", fontSize: \"25px\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n\r\n    this.rechercheUsers = this.rechercheUsers.bind();\r\n  }\r\n\r\n  async getRoles() {\r\n    let response = await getAllRoles();\r\n    let pointvente = await getAllPointVente();\r\n    pointventes = [...pointvente.data.content];\r\n    roles = [...response.data.content];\r\n    this.setState({ rolesloaded: true });\r\n  }\r\n\r\n  updateUser = (id, userData) => {\r\n    updateUser(id, userData)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"Utilisateur bien modifier !\"\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        if (error.response.data.message === \"user already exists\") {\r\n          notification.error({\r\n            message: \"Un utilisateur est déja inscrit par cette adress mail.\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message || \"Sorry! Something went wrong. Please try again!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  async deleteTakafulUser(id) {\r\n    try {\r\n      let response = await deleteUser(id);\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"Utilisateur bien supprimé !\"\r\n        });\r\n      }\r\n    } catch (err) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          err.message || \"Sorry! Something went wrong. Please try again!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  rechercheUsers = () => {\r\n    getUsers()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Your Username or Password is incorrect. Please try again!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message || \"Sorry! Something went wrong. Please try again!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.rechercheUsers();\r\n    this.getRoles();\r\n  }\r\n\r\n  handleDelete = key => {\r\n    this.deleteTakafulUser(key);\r\n    const dataSource = [...this.state.data];\r\n    this.setState({ data: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  isEditing = record => record.key === this.state.editingKey;\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        let helparray = { ...row };\r\n        helparray.roles = [];\r\n        helparray.pointVentes = [];\r\n        row.pointVentes.forEach(element => {\r\n          helparray.pointVentes.push({\r\n            id: element.key,\r\n            libelle: element.label\r\n          });\r\n        });\r\n        row.roles.forEach(element => {\r\n          helparray.roles.push({ name: element });\r\n        });\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...helparray\r\n        });\r\n        this.updateUser(item.id, helparray);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n    const newData = [...this.state.data];\r\n    const index = newData.findIndex(item => key === item.key);\r\n    if (index > -1) {\r\n      const item = newData[index];\r\n      rolesUser = [];\r\n      pointventesdata = [];\r\n      item.roles.forEach(element => {\r\n        rolesUser.push(element.name);\r\n      });\r\n      item.pointVentes.forEach(element => {\r\n        pointventesdata.push({ key: element.id, label: element.libelle });\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record)\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des utilisateurs\" />\r\n        <EditableContext.Provider value={this.props.form}>\r\n          {this.state.rolesloaded && (\r\n            <AddUserForm Roles={roles} Pointvente={pointventes} />\r\n          )}\r\n          <Table\r\n            bordered\r\n            rowClassName=\"editable-row\"\r\n            components={components}\r\n            columns={columns}\r\n            dataSource={this.state.data}\r\n            pagination={{\r\n              defaultCurrent: 1,\r\n              defaultPageSize: 5,\r\n              onChange: this.cancel\r\n            }}\r\n          />\r\n        </EditableContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst { Option } = Select;\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"roles\") {\r\n      return (\r\n        <Select\r\n          mode=\"multiple\"\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"cliquez pour ajouter un profile\"\r\n          onChange={this.handleChange}\r\n          optionLabelProp=\"label\"\r\n        >\r\n          {roles.map(element => {\r\n            return (\r\n              <Option\r\n                key={element.name}\r\n                value={element.name}\r\n                label={element.name}\r\n              >\r\n                {element.name}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (this.props.inputType === \"pointVentes\") {\r\n      return (\r\n        <Select\r\n          mode=\"multiple\"\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"cliquez pour ajouter une agence\"\r\n          labelInValue\r\n        >\r\n          {pointventes.map(element => {\r\n            return (\r\n              <Option\r\n                key={element.id}\r\n                value={element.id}\r\n                label={element.libelle}\r\n              >\r\n                {element.libelle}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    if (editing && dataIndex !== \"roles\" && dataIndex !== \"pointVentes\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex]\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && dataIndex === \"roles\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: rolesUser\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && dataIndex === \"pointVentes\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: pointventesdata\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else return <td {...restProps}>{children}</td>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Users);\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../../../constants/index\";\r\n\r\nexport function ajoutCauseRes(causeResRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/causerestitution\",\r\n    method: \"POST\",\r\n    data: causeResRequest\r\n  });\r\n}\r\nexport function getCauseRes() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/causerestitution/?page=0&sort=libelle&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updateCauseRes(causeResId, updatedCauseRes) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/causerestitution/\" + causeResId,\r\n    method: \"PUT\",\r\n    data: updatedCauseRes\r\n  });\r\n}\r\nexport function getRestitutions() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/restitutions?page=0&sort=libelle&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updateRestitutions(restitutionId, updatedRestitution) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/restitution/\" + restitutionId,\r\n    method: \"PUT\",\r\n    data: updatedRestitution\r\n  });\r\n}\r\nexport function ajoutRestitution(restitutionRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/restitution\",\r\n    method: \"POST\",\r\n    data: restitutionRequest\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"./AjoutRestitution.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  notification,\r\n  Row\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { ajoutRestitution } from \"./RestitutionAPI\";\r\n\r\nclass AjoutRestitution extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      libelle: {\r\n        value: \"\"\r\n      }\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.isFormInvalid = this.isFormInvalid.bind(this);\r\n  }\r\n  handleInputChange(event, validationFun) {\r\n    const target = event.target;\r\n    const inputName = target.name;\r\n    const inputValue = target.value;\r\n\r\n    this.setState({\r\n      [inputName]: {\r\n        value: inputValue,\r\n        ...validationFun(inputValue)\r\n      }\r\n    });\r\n  }\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const restitutionRequest = {\r\n      libelle: this.state.libelle.value\r\n    };\r\n    ajoutRestitution(restitutionRequest)\r\n      .then(response => {\r\n        notification.success({\r\n          message: \"TAKAFUL\",\r\n          description: \"Thank you! successful.\"\r\n        });\r\n      })\r\n      .catch(error => {\r\n        notification.error({\r\n          message: \"TAKAFUL\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      });\r\n  }\r\n  isFormInvalid() {\r\n    return this.state.libelle.validateStatus !== \"success\";\r\n  }\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleChange(value) {}\r\n\r\n  async ajouterRestitution(values) {\r\n    try {\r\n      let response = await ajoutRestitution(values);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"la creation de la restitution est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"restitution already exists\") {\r\n        notification.error({\r\n          message: \"cette restitution existe déja.\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterRestitution(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Button type=\"primary\" className=\"add-button\" onClick={this.showDrawer}>\r\n          <Icon type=\"plus\" /> Nouvelle restitution\r\n        </Button>\r\n        <Drawer\r\n          title=\"Creation d'un nouvelle restitution\"\r\n          onClose={this.onClose}\r\n          width=\"300\"\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Libelle :\">\r\n                  {getFieldDecorator(\"libelle\", {\r\n                    rules: [{ required: true, message: \"Tapez le libelle\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le libelle\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(AjoutRestitution);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, notification, Popconfirm, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport AjoutRestitution from \"./AjoutRestitution\";\r\nimport { updateRestitutions, getRestitutions } from \"./RestitutionAPI\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nclass Restitutions extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editingKey: \"\",\r\n      searchText: \"\",\r\n      searchedColumn: \"\"\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Libelle\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\",\r\n        width: \"40%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"libelle\", \"libelle\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"Sure to cancel?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Fermer</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => {\r\n                  this.edit(record.key);\r\n                }}\r\n              >\r\n                Modifier\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  updateRestitutions = (id, restitutionsData) => {\r\n    updateRestitutions(id, restitutionsData)\r\n      .then(response => {})\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrecte. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n  rechercheRestitutions = () => {\r\n    getRestitutions()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrecte. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.rechercheRestitutions();\r\n  }\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  isEditing = record => record.key === this.state.editingKey;\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row\r\n        });\r\n        this.updateRestitutions(item.id, row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === \"text\",\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record)\r\n        })\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des restitutions\" />\r\n        <EditableContext.Provider value={this.props.form}>\r\n          <AjoutRestitution />\r\n          <Table\r\n            rowClassName=\"editable-row\"\r\n            components={components}\r\n            columns={columns}\r\n            dataSource={this.state.data}\r\n            pagination={{\r\n              defaultCurrent: 1,\r\n              defaultPageSize: 5,\r\n              onChange: this.cancel\r\n            }}\r\n          />\r\n        </EditableContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    return <Input />;\r\n  };\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex]\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Restitutions);\r\n","import {\r\n  ACCESS_TOKEN,\r\n  API_BASE_URL,\r\n  REQUEST as request\r\n} from \"../../constants/index\";\r\n\r\nexport function getAllPersonnePhysique() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/personne-physique?direction=asc&limit=2147483647&page=0&sort=nom\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getallPersonMorale() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/personne-morale?page=0&sort=creationDate&direction=desc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAllSecteur() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/secteur?direction=asc&limit=4&page=0&sort=id\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAllSecteurActivite() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/secteur?page=0&sort=libelle&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAllTypePersonneMorales() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  } else {\r\n    return request({\r\n      url: API_BASE_URL + \"/private/type-personne-morale\",\r\n      method: \"GET\"\r\n    });\r\n  }\r\n}\r\nexport function createPersonnePhysique(souscripteur) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personne-physique\",\r\n    data: souscripteur,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function getSexe() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/sexe\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getSetuation() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/situation\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getProfession() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/profession?page=0&sort=creationDate&direction=desc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function ajoutProfession(profession) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addProfession\",\r\n    method: \"POST\",\r\n    data: profession\r\n  });\r\n}\r\nexport function getallperson() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/personne-physique?page=0&sort=creationDate&direction=desc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function createPersonneMorale(souscripteur) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personne-morale\",\r\n    data: souscripteur,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function getVois() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/vois\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getByCinIfExist(cin) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personne-physique/\" + cin,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function addBeneficiaireEnDeces(model) {\r\n  return request({\r\n    url: API_BASE_URL + \"/private/beneficiaireendeces\",\r\n    method: \"POST\",\r\n    data: model\r\n  });\r\n}\r\n\r\nexport function updatePersonnePhysique(perId, updatedPer) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personne-physique/\" + perId,\r\n    data: updatedPer,\r\n    method: \"PUT\"\r\n  });\r\n}\r\n\r\nexport function updatePersonneMorale(perId, updatedPer) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personne-morale/\" + perId,\r\n    data: updatedPer,\r\n    method: \"PUT\"\r\n  });\r\n}\r\n\r\nexport function getByPatent(patente) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personne-morale/\" + patente,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function deletePerMrale(userId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personne-morale/delete/\" + userId,\r\n    method: \"DELETE\"\r\n  });\r\n}\r\n\r\nexport function deletePerPhysique(userId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personne-physique/delete/\" + userId,\r\n    method: \"DELETE\"\r\n  });\r\n}\r\n","import {\r\n  ACCESS_TOKEN,\r\n  API_BASE_URL,\r\n  REQUEST as request\r\n} from \"../../../constants/index\";\r\n\r\nexport function lettreOrientation(lettre) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/lettreOrientation/pdf\",\r\n    method: \"POST\",\r\n    data: lettre,\r\n    responseType: \"blob\"\r\n  });\r\n}\r\n\r\nexport function getNormeByCapitalAndAge(age, capital, decesProduit) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/normeSelection/select?age=\" +\r\n      age +\r\n      \"&capitale=\" +\r\n      capital +\r\n      \"&deceProduit=\" +\r\n      decesProduit,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getCinIfExist(cin) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personnePhysique/\" + cin,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function conditionParticulier(condition) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/conditionParticuliere/pdf\",\r\n    method: \"POST\",\r\n    data: condition,\r\n    responseType: \"blob\"\r\n  });\r\n}\r\nexport function getRibIfExist(rib) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/personnePhysique/rib/\" + rib,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getContratById(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/contratId/\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updateDecesContratOrientation(id, orientation) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/decescontratOrientation/\" +\r\n      id +\r\n      \"/\" +\r\n      orientation,\r\n    method: \"PUT\"\r\n  });\r\n}\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../constants/index\";\r\n\r\nexport function getAllVille() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/villes\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  InputNumber,\r\n  notification,\r\n  Radio,\r\n  Row,\r\n  Select,\r\n  AutoComplete\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport { createPersonnePhysique } from \"../../../../Participants/ParticipantAPI\";\r\nimport { getCinIfExist, getRibIfExist } from \"../../SouscriptionAPI\";\r\nimport { getAllVille } from \"../../../../../util/VillesAPI\";\r\n\r\nconst { Option } = Select;\r\nconst dateFormatList = \"DD/MM/YYYY\";\r\n\r\nclass AddSouscripteur extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      villes: [],\r\n      visible: false,\r\n      nationaliteList: [\"MAROCAINE \", \"FRANÇAISE\", \"BELGE\", \"...\"],\r\n      Tiers: [0, 1, 2, 3, 4, 5],\r\n      ville: \"\",\r\n      vois: \"\",\r\n      numero: \"\",\r\n      pays: \"\",\r\n      complement: \"\",\r\n      adresscomplet: \"\"\r\n    };\r\n  }\r\n  async getAllVilles() {\r\n    let responseVille = await getAllVille();\r\n    let helpArray = [];\r\n    responseVille.data.forEach(element => {\r\n      const object = element.name;\r\n      helpArray.push(object);\r\n    });\r\n    this.setState({ villes: helpArray });\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      debugger;\r\n      if (!err) {\r\n        values.dateNaissance = values.dateNaissance.format(\"DD-MM-YYYY\");\r\n        values.adressVille = values.adressVille.label;\r\n        this.createPersonnePhysique(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  async createPersonnePhysique(model) {\r\n    try {\r\n      let response = await createPersonnePhysique(model);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"CONTRIBUANT INSERE\"\r\n        });\r\n        this.props.personCreation(response.data);\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"400 souscripteur already exists\") {\r\n        this.onClose();\r\n\r\n        notification.error({\r\n          message: \"une personne et deja inscrit avec le meme cin .\"\r\n        });\r\n      } else {\r\n        this.onClose();\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description: \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    this.getAllVilles();\r\n  }\r\n  componentDidUpdate(_, prevState) {\r\n    if (prevState.adresscomplet !== this.state.adresscomplet) {\r\n      this.props.form.setFieldsValue({\r\n        adressComplete: this.state.adresscomplet\r\n      });\r\n    }\r\n  }\r\n\r\n  async PersonneCinIfExist(cin) {\r\n    try {\r\n      let response = await getCinIfExist(cin);\r\n    } catch (error) {\r\n      if (error.response.data.status === 500) {\r\n        notification.error({\r\n          message: \"une personne est déja inscrit avec le même cin .\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n  async PersonneRibIfExist(rib) {\r\n    try {\r\n      let response = await getRibIfExist(rib);\r\n    } catch (error) {\r\n      if ((error.response.data.status = \"500\")) {\r\n        notification.error({\r\n          message: \"une personne est déja inscrit avec le même rib .\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n  disabledDate = current => {\r\n    let startDate = moment(moment().format(\"YYYY-MM-DD\"), \"YYYY-MM-DD\").add(\r\n      -18,\r\n      \"years\"\r\n    );\r\n    let curentOrEndDtae = startDate < current;\r\n    return current && curentOrEndDtae;\r\n  };\r\n  onChangeVille = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      ville: value.label,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        value.label +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n  onChangeCin = e => {\r\n    this.PersonneCinIfExist(e.target.value);\r\n  };\r\n\r\n  onChangePays = e => {\r\n    console.log(e.target.value);\r\n    this.setState({\r\n      pays: e.target.value,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        e.target.value\r\n    });\r\n  };\r\n  onChangeVois = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      vois: value,\r\n      adresscomplet:\r\n        value +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n  onChangeNumero = e => {\r\n    this.setState({\r\n      numero: e.target.value,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        e.target.value +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n  onChangeComplement = e => {\r\n    this.setState({\r\n      complement: e.target.value,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        e.target.value +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n\r\n  onChangeRib = e => {\r\n    this.PersonneRibIfExist(e.target.value);\r\n  };\r\n  handleChangeNomPrenom = e => {\r\n    e.target.value = e.target.value.toUpperCase();\r\n  };\r\n  handleDateNaissance = value => {\r\n    const age = moment().diff(moment(value), \"years\");\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const prefixSelector = getFieldDecorator(\"prefix\", {\r\n      initialValue: \"CIN\"\r\n    })(\r\n      <Select style={{ width: 100 }}>\r\n        <Option value=\"CIN\">CIN</Option>\r\n        <Option value=\"Passport\">Passport</Option>\r\n        <Option value=\"Numresidence\">N° carte de residence</Option>\r\n      </Select>\r\n    );\r\n    return (\r\n      <div>\r\n        {this.props.titre === \"Création d'un nouveau Participant\" ? (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.showDrawer}\r\n            style={{ borderRadius: \"0px\", marginBottom: \"10px\" }}\r\n            className=\"nouveau-btn\"\r\n          >\r\n            <Icon type=\"user-add\" /> Nouveau participant\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"#77cc6d\", borderColor: \"#77cc6d\" }}\r\n            shape=\"circle\"\r\n            icon=\"plus\"\r\n            onClick={this.showDrawer}\r\n          />\r\n        )}\r\n\r\n        <Drawer\r\n          title={this.props.titre}\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prospect\">\r\n                  {getFieldDecorator(\"isProspect\", {\r\n                    valuePropName: \"checked\",\r\n                    initialValue: true\r\n                  })(\r\n                    <Radio.Group buttonStyle=\"solid\" defaultValue={true}>\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prénom\">\r\n                  {getFieldDecorator(\"prenom\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le prénom de souscripteur\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le prénom de souscripteur\"\r\n                      onChange={this.handleChangeNomPrenom}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nom\">\r\n                  {getFieldDecorator(\"nom\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le prénom de souscripteur\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le nom de souscripteur\"\r\n                      onChange={this.handleChangeNomPrenom}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Identifiant\">\r\n                  {getFieldDecorator(\"cin\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      addonBefore={prefixSelector}\r\n                      onChange={this.onChangeCin}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Date de naissance\" hasFeedback>\r\n                  {getFieldDecorator(\"dateNaissance\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"entre la date de naissance\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <DatePicker\r\n                      format={dateFormatList}\r\n                      disabledDate={this.disabledDate}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Matricule\">\r\n                  {getFieldDecorator(\"matricule\", {\r\n                    rules: [{ required: false }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le matricule de souscripteur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Profession\">\r\n                  {getFieldDecorator(\"profession\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez une profession\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Profession\">\r\n                      {this.props.professions.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.libelle}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Situation familiale \">\r\n                  {getFieldDecorator(\"situationFamiliale\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez une Situation familiale\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Situation familiale\">\r\n                      {this.props.setuation.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sexe\">\r\n                  {getFieldDecorator(\"sexe\", {\r\n                    rules: [{ required: true, message: \"Sélectionnez le sexe\" }]\r\n                  })(\r\n                    <Select placeholder=\"Sélectionnez le sexe\">\r\n                      {this.props.sexe.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nationalité\">\r\n                  {getFieldDecorator(\"nationalite\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez une Nationalité\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <AutoComplete\r\n                      size=\"default\"\r\n                      dataSource={this.state.nationaliteList}\r\n                      allowClear={true}\r\n                      placeholder=\"Nationalité\"\r\n                      filterOption={(inputValue, option) =>\r\n                        option.props.children\r\n                          .toUpperCase()\r\n                          .indexOf(inputValue.toUpperCase()) !== -1\r\n                      }\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nombre d'enfants\">\r\n                  {getFieldDecorator(\"nombreEnfants\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le nombre d'enfants\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"RIB\">\r\n                  {getFieldDecorator(\"rib\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"RIB\"\r\n                      onChange={this.onChangeRib}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Téléphone\">\r\n                  {getFieldDecorator(\"numeroDeTelephone\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(\"^[0][5-7]{1}[0-9]{8}$\"),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Numero de telephone\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N° Tiers\">\r\n                  {getFieldDecorator(\"numTiers\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"° Tiers\">\r\n                      {this.state.Tiers.map(element => {\r\n                        return (\r\n                          <Option key={element} value={element}>\r\n                            {element}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <h4>Adresse :</h4>\r\n                <Divider></Divider>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Pays\">\r\n                  {getFieldDecorator(\"adressPays\", {\r\n                    rules: [{ required: true, message: \"selecte un pays\" }]\r\n                  })(<Input placeholder=\"pays\" onBlur={this.onChangePays} />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Ville\">\r\n                  {getFieldDecorator(\"adressVille\", {\r\n                    rules: [{ required: true, message: \"selecte une ville\" }]\r\n                  })(\r\n                    <AutoComplete\r\n                      size=\"default\"\r\n                      dataSource={this.state.villes}\r\n                      onChange={this.onChangeVille}\r\n                      allowClear={false}\r\n                      labelInValue\r\n                      placeholder=\"ajouter une ville\"\r\n                      filterOption={(inputValue, option) =>\r\n                        option.props.children\r\n                          .toUpperCase()\r\n                          .indexOf(inputValue.toUpperCase()) !== -1\r\n                      }\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Voie\">\r\n                  {getFieldDecorator(\"adressVois\", {\r\n                    rules: [{ required: true, message: \"selecte une vois\" }]\r\n                  })(\r\n                    <Select placeholder=\"Voie\" onChange={this.onChangeVois}>\r\n                      {this.props.vois.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Postal\">\r\n                  {getFieldDecorator(\"adressCodePostal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Code Postal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Numéro\">\r\n                  {getFieldDecorator(\"adressNumero\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      onBlur={this.onChangeNumero}\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Numero\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Complément d'adresse\">\r\n                  {getFieldDecorator(\"adressComplement\")(\r\n                    <Input\r\n                      onBlur={this.onChangeComplement}\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le un complément\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Adresse Complete\">\r\n                  {getFieldDecorator(\"adressComplete\", {\r\n                    value: this.state.adresscomplet\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      value={this.state.adresscomplet}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                width: \"100%\",\r\n                borderTop: \"1px solid #e9e9e9\",\r\n                padding: \"10px 16px\",\r\n                background: \"#fff\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Annuler\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Enregistrer\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddSouscripteur);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Drawer,\r\n  notification,\r\n  Popconfirm,\r\n  Table,\r\n  Input,\r\n  Row,\r\n  Button,\r\n  Col,\r\n  Select,\r\n  AutoComplete,\r\n  Radio,\r\n  DatePicker,\r\n  InputNumber\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport AddSouscripteur from \"../Production Prestations/Souscription/StepOne/AddPerPhysique/AddSouscripteur\";\r\nimport {\r\n  getAllPersonnePhysique,\r\n  getProfession,\r\n  getSetuation,\r\n  getSexe,\r\n  getVois,\r\n  deletePerPhysique,\r\n  updatePersonnePhysique\r\n} from \"./ParticipantAPI\";\r\nimport { connectedUserContext } from \"../../app/App\";\r\nimport moment from \"moment\";\r\nimport { getColumnSearchProps } from \"../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nconst { Option } = Select;\r\nconst dateFormatList = \"DD/MM/YYYY\";\r\nclass Participant extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visibled: \"\",\r\n      rowSelection: \"\",\r\n      keyRecord: \"\",\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      sexe: [],\r\n      setuations: [],\r\n      professions: [],\r\n      users: \"\",\r\n      rolesandprivileges: false,\r\n      parametrage: false,\r\n      vois: [],\r\n      dataloaded: false,\r\n      nationaliteList: [\"MAROCAINE \", \"FRANÇAISE\", \"BELGE\", \"...\"],\r\n      Tiers: [0, 1, 2, 3, 4, 5]\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Nom\",\r\n        dataIndex: \"nom\",\r\n        key: \"nom\",\r\n        width: \"25%\",\r\n        ...getColumnSearchProps(\"nom\", \"nom\", this)\r\n      },\r\n      {\r\n        title: \"Prénom\",\r\n        dataIndex: \"prenom\",\r\n        key: \"prenom\",\r\n        width: \"25%\",\r\n        ...getColumnSearchProps(\"prenom\", \"prenom\", this)\r\n      },\r\n      {\r\n        title: \"Cin\",\r\n        dataIndex: \"cin\",\r\n        key: \"cin\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"cin\", \"cin\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        align: \"center\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                onClick={() => {\r\n                  this.edit(record);\r\n                }}\r\n              >\r\n                <Icon\r\n                  type=\"edit\"\r\n                  style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n                />\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"Sure to delete?\"\r\n                onConfirm={() => this.handleDelete(record.key)}\r\n              >\r\n                <a href=\"#top\" style={{ color: \"red\" }}>\r\n                  <Icon\r\n                    type=\"user-delete\"\r\n                    style={{ color: \"rgb(208, 62, 62)\", fontSize: \"25px\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  async getproprties() {\r\n    let gander = await getSexe();\r\n    let setuation = await getSetuation();\r\n    let profrssionResponse = await getProfession();\r\n    let vois = await getVois();\r\n    this.setState({\r\n      sexe: [...gander.data],\r\n      setuations: [...setuation.data],\r\n      dataloaded: true,\r\n      professions: [...profrssionResponse.data.content],\r\n      vois: [...vois.data]\r\n    });\r\n  }\r\n\r\n  handlePersonphyCreationAssure = data => {};\r\n\r\n  componentDidMount() {\r\n    this.getproprties();\r\n    let listpersons = [];\r\n\r\n    getAllPersonnePhysique().then(response => {\r\n      response.data.content.forEach(element => {\r\n        let person = { ...element, ...{ key: element.id } };\r\n        listpersons.push(person);\r\n      });\r\n    });\r\n\r\n    this.setState({\r\n      data: listpersons\r\n    });\r\n  }\r\n  handleDelete = key => {\r\n    this.deleteParticipant(key);\r\n    const dataSource = [...this.state.data];\r\n    this.setState({ data: dataSource.filter(item => item.key !== key) });\r\n  };\r\n  async deleteParticipant(id) {\r\n    try {\r\n      let response = await deletePerPhysique(id);\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"participant bien supprimé !\"\r\n        });\r\n      }\r\n    } catch (err) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          err.message || \"Sorry! Something went wrong. Please try again!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  isEditing = record => record.key === this.state.editingKey;\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n  updatePer = (id, perData) => {\r\n    updatePersonnePhysique(id, perData)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"participant bien modifier !\"\r\n          });\r\n          window.location.reload();\r\n        }\r\n      })\r\n      .catch(error => {\r\n        if (error.response.data.message === \"souscripteur already exists\") {\r\n          notification.error({\r\n            message: \"Un participant deja exist.\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message || \"Sorry! Something went wrong. Please try again!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n  handleChangeNomPrenom = e => {\r\n    e.target.value = e.target.value.toUpperCase();\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        values.dateNaissance = values.dateNaissance.format(\"DD-MM-YYYY\");\r\n        this.updatePer(this.state.keyRecord, values);\r\n      }\r\n    });\r\n    this.setState({ visibled: false });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visibled: false\r\n    });\r\n  };\r\n\r\n  edit(value) {\r\n    this.setState({ visibled: true, keyRecord: value.id });\r\n\r\n    this.props.form.setFieldsValue({\r\n      isProspect: value.prospect,\r\n      prenom: value.prenom,\r\n      nom: value.nom,\r\n      cin: value.cin,\r\n      dateNaissance: moment(value.dateNaissance, dateFormatList),\r\n      matricule: value.matricule,\r\n      profession: value.profession,\r\n      sexe: value.sexe,\r\n      situationFamiliale: value.situationFamiliale,\r\n      nationalite: value.nationalite,\r\n      nombreEnfants: value.nombreEnfants,\r\n      rib: value.rib,\r\n      numeroDeTelephone: value.numeroDeTelephone,\r\n      numTiers: value.numTiers,\r\n      adressPays: value.adressPays,\r\n      adressCodePostal: value.adressCodePostal,\r\n      adressComplement: value.adressComplement,\r\n      adressComplete: value.adressComplete,\r\n      adressNumero: value.adressNumero,\r\n      adressVille: value.adressVille,\r\n      adressVois: value.adressVois\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const prefixSelector = getFieldDecorator(\"prefix\", {\r\n      initialValue: \"CIN\"\r\n    })(\r\n      <Select style={{ width: 100 }}>\r\n        <Option value=\"CIN\">CIN</Option>\r\n        <Option value=\"Passport\">Passport</Option>\r\n        <Option value=\"Numresidence\">N° carte de residence</Option>\r\n      </Select>\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <connectedUserContext.Consumer>\r\n          {value =>\r\n            // eslint-disable-next-line react/no-direct-mutation-state\r\n            value.roles.forEach(element => (this.state.users = element.name))\r\n          }\r\n        </connectedUserContext.Consumer>\r\n\r\n        <Drawer\r\n          title=\"Modification du sociétaire\"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visibled}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prospect\">\r\n                  {getFieldDecorator(\"isProspect\", {\r\n                    valuePropName: \"checked\",\r\n                    initialValue: true\r\n                  })(\r\n                    <Radio.Group buttonStyle=\"solid\" defaultValue={true}>\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prénom\">\r\n                  {getFieldDecorator(\"prenom\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le prénom de souscripteur\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le prénom de souscripteur\"\r\n                      onChange={this.handleChangeNomPrenom}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nom\">\r\n                  {getFieldDecorator(\"nom\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le prénom de souscripteur\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le nom de souscripteur\"\r\n                      onChange={this.handleChangeNomPrenom}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                {this.state.users === \"ADMIN\" ? (\r\n                  <Form.Item label=\"Identifiant\">\r\n                    {getFieldDecorator(\"cin\")(\r\n                      <Input\r\n                        className=\"not-rounded\"\r\n                        style={{ width: \"100%\" }}\r\n                        addonBefore={prefixSelector}\r\n                        onChange={this.onChangeCin}\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                ) : (\r\n                  <Form.Item label=\"Identifiant\">\r\n                    {getFieldDecorator(\"cin\")(\r\n                      <Input\r\n                        className=\"not-rounded\"\r\n                        style={{ width: \"100%\" }}\r\n                        addonBefore={prefixSelector}\r\n                        onChange={this.onChangeCin}\r\n                        disabled\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                )}\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Date de naissance\" hasFeedback>\r\n                  {getFieldDecorator(\"dateNaissance\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"entre la date de naissance\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <DatePicker\r\n                      format={dateFormatList}\r\n                      disabledDate={this.disabledDate}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Matricule\">\r\n                  {getFieldDecorator(\"matricule\", {\r\n                    rules: [{ required: false }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le matricule de souscripteur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Profession\">\r\n                  {getFieldDecorator(\"profession\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez une profession\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Profession\">\r\n                      {this.state.professions.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.libelle}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Situation familiale \">\r\n                  {getFieldDecorator(\"situationFamiliale\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez une Situation familiale\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Situation familiale\">\r\n                      {this.state.setuations.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sexe\">\r\n                  {getFieldDecorator(\"sexe\", {\r\n                    rules: [{ required: true, message: \"Sélectionnez le sexe\" }]\r\n                  })(\r\n                    <Select placeholder=\"Sélectionnez le sexe\">\r\n                      {this.state.sexe.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nationalité\">\r\n                  {getFieldDecorator(\"nationalite\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez une Nationalité\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <AutoComplete\r\n                      size=\"default\"\r\n                      dataSource={this.state.nationaliteList}\r\n                      allowClear={true}\r\n                      placeholder=\"Nationalité\"\r\n                      filterOption={(inputValue, option) =>\r\n                        option.props.children\r\n                          .toUpperCase()\r\n                          .indexOf(inputValue.toUpperCase()) !== -1\r\n                      }\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nombre d'enfants\">\r\n                  {getFieldDecorator(\"nombreEnfants\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le nombre d'enfants\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                {this.state.users === \"ADMIN\" ? (\r\n                  <Form.Item label=\"RIB\">\r\n                    {getFieldDecorator(\"rib\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Format invalide !\"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Input\r\n                        className=\"not-rounded\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"RIB\"\r\n                        onChange={this.onChangeRib}\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                ) : (\r\n                  <Form.Item label=\"RIB\">\r\n                    {getFieldDecorator(\"rib\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Format invalide !\"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Input\r\n                        className=\"not-rounded\"\r\n                        style={{ width: \"100%\" }}\r\n                        placeholder=\"RIB\"\r\n                        onChange={this.onChangeRib}\r\n                        disabled\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                )}\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Téléphone\">\r\n                  {getFieldDecorator(\"numeroDeTelephone\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(\"^[0][5-7]{1}[0-9]{8}$\"),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Numero de telephone\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N° Tiers\">\r\n                  {getFieldDecorator(\"numTiers\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"° Tiers\">\r\n                      {this.state.Tiers.map(element => {\r\n                        return (\r\n                          <Option key={element} value={element}>\r\n                            {element}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <h4>Adresse :</h4>\r\n                <Divider></Divider>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Pays\">\r\n                  {getFieldDecorator(\"adressPays\", {\r\n                    rules: [{ required: true, message: \"selecte un pays\" }]\r\n                  })(<Input placeholder=\"pays\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Ville\">\r\n                  {getFieldDecorator(\"adressVille\", {\r\n                    rules: [{ required: true, message: \"selecte une ville\" }]\r\n                  })(<Input placeholder=\"ville\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Voie\">\r\n                  {getFieldDecorator(\"adressVois\", {\r\n                    rules: [{ required: true, message: \"selecte une vois\" }]\r\n                  })(\r\n                    <Select placeholder=\"Voie\">\r\n                      {this.state.vois.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Postal\">\r\n                  {getFieldDecorator(\"adressCodePostal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Code Postal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Numéro\">\r\n                  {getFieldDecorator(\"adressNumero\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Numero\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Complément d'adresse\">\r\n                  {getFieldDecorator(\"adressComplement\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le un complément\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Adresse Complete\">\r\n                  {getFieldDecorator(\"adressComplete\")(\r\n                    <Input className=\"not-rounded\" style={{ width: \"100%\" }} />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                width: \"100%\",\r\n                borderTop: \"1px solid #e9e9e9\",\r\n                padding: \"10px 16px\",\r\n                background: \"#fff\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Annuler\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Enregistrer\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n        {this.state.dataloaded && (\r\n          <AddSouscripteur\r\n            titre=\"Création d'un nouveau Participant\"\r\n            professions={this.state.professions}\r\n            sexe={this.state.sexe}\r\n            setuation={this.state.setuations}\r\n            vois={this.state.vois}\r\n            personCreation={this.handlePersonphyCreationAssure}\r\n          />\r\n        )}\r\n        <Table\r\n          bordered\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.data}\r\n          pagination={{\r\n            defaultCurrent: 1,\r\n            defaultPageSize: 5,\r\n            onChange: this.cancel\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(Participant);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  AutoComplete,\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  InputNumber,\r\n  notification,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { createPersonneMorale } from \"../../../../Participants/ParticipantAPI\";\r\nimport { getAllVille } from \"../../../../../util/VillesAPI\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddPerMorale extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visible: false,\r\n      villes: [],\r\n      ville: \"\",\r\n      vois: \"\",\r\n      numero: \"\",\r\n      pays: \"\",\r\n      complement: \"\",\r\n      adresscomplet: \"\"\r\n    };\r\n  }\r\n\r\n  async getAllVilles() {\r\n    let responseVille = await getAllVille();\r\n    let helpArray = [];\r\n    responseVille.data.forEach(element => {\r\n      const object = element.name;\r\n      helpArray.push(object);\r\n    });\r\n    this.setState({ villes: helpArray });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllVilles();\r\n  }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        values.typePersonneMorale = { id: values.typePersonneMorale };\r\n        values.secteurActivite = { id: values.secteurActivite };\r\n        values.adressVille = values.adressVille.label;\r\n        this.createPersonneMorale(values);\r\n      }\r\n    });\r\n  };\r\n  async createPersonneMorale(model) {\r\n    try {\r\n      let response = await createPersonneMorale(model);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"personne bien ajoute\"\r\n        });\r\n        // this.props.personCreation(response.data);\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"400 souscripteur already exists\") {\r\n        this.onClose();\r\n        notification.error({\r\n          message: \"une personne et deja inscrit avec la meme patente .\"\r\n        });\r\n      } else {\r\n        this.onClose();\r\n\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n  componentDidUpdate(_, prevState) {\r\n    if (prevState.adresscomplet !== this.state.adresscomplet) {\r\n      this.props.form.setFieldsValue({\r\n        adressComplete: this.state.adresscomplet\r\n      });\r\n    }\r\n  }\r\n  onChangeVille = value => {\r\n    this.setState({\r\n      ville: value.label,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        value.label +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n\r\n  onChangePays = e => {\r\n    this.setState({\r\n      pays: e.target.value,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        e.target.value\r\n    });\r\n  };\r\n  onChangeVois = value => {\r\n    this.setState({\r\n      vois: value,\r\n      adresscomplet:\r\n        value +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n  onChangeNumero = e => {\r\n    this.setState({\r\n      numero: e.target.value,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        e.target.value +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n  onChangeComplement = e => {\r\n    this.setState({\r\n      complement: e.target.value,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        e.target.value +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        {this.props.titre === \"Création d'un nouveau Participant\" ? (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.showDrawer}\r\n            style={{ borderRadius: \"0px\", marginBottom: \"10px\" }}\r\n            className=\"nouveau-btn\"\r\n          >\r\n            <Icon type=\"user-add\" /> Nouveau participant\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"#77cc6d\", borderColor: \"#77cc6d\" }}\r\n            shape=\"circle\"\r\n            icon=\"plus\"\r\n            onClick={this.showDrawer}\r\n          />\r\n        )}\r\n        <Drawer\r\n          title={this.props.titre}\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Raison sociale\">\r\n                  {getFieldDecorator(\"raisonSociale\", {\r\n                    rules: [\r\n                      { required: true, message: \"Tapez la Raison Sociale\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez la Raison Sociale\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Abréviation\">\r\n                  {getFieldDecorator(\"abb\", {\r\n                    rules: [{ required: true, message: \"Tapez l abb\" }]\r\n                  })(\r\n                    <Input className=\"not-rounded\" placeholder=\"Tapez l abb\" />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Siège social\">\r\n                  {getFieldDecorator(\"Siegesociale\", {\r\n                    rules: [\r\n                      { required: true, message: \"Tapez le siège social\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le siège social\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°de Patente\">\r\n                  {getFieldDecorator(\"patente\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Svp entré patente\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez patente\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°ice\">\r\n                  {getFieldDecorator(\"ice\", {\r\n                    rules: [{ required: true, message: \"Tapez le N°ice\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le N°ice\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code\">\r\n                  {getFieldDecorator(\"code\", {\r\n                    rules: [{ required: true, message: \"Tapez le code\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le code\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type personne morale\">\r\n                  {getFieldDecorator(\"typePersonneMorale\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez un type personne morale\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Type personne morale\">\r\n                      {this.props.typePersonneMoral.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.id}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Secteur d'activité\">\r\n                  {getFieldDecorator(\"secteurActivite\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez le secteur d'activité\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Sélectionnez le secteur d'activité\">\r\n                      {this.props.secteurActivite.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.id}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Téléphone\">\r\n                  {getFieldDecorator(\"numeroDeTelephone\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(\"^[0][5-7]{1}[0-9]{8}$\"),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Numero de telephone\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <h4>Adresse :</h4>\r\n                <Divider></Divider>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Pays\">\r\n                  {getFieldDecorator(\"adressPays\", {\r\n                    rules: [{ required: true, message: \"selecte un pays\" }]\r\n                  })(<Input onBlur={this.onChangePays} />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Ville\">\r\n                  {getFieldDecorator(\"adressVille\", {\r\n                    rules: [{ required: true, message: \"selecte une ville\" }]\r\n                  })(\r\n                    <AutoComplete\r\n                      size=\"default\"\r\n                      dataSource={this.state.villes}\r\n                      onSelect={this.onChangeVille}\r\n                      allowClear={false}\r\n                      labelInValue\r\n                      placeholder=\"ajouter une ville\"\r\n                      filterOption={(inputValue, option) =>\r\n                        option.props.children\r\n                          .toUpperCase()\r\n                          .indexOf(inputValue.toUpperCase()) !== -1\r\n                      }\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Voie\">\r\n                  {getFieldDecorator(\"adressVois\", {\r\n                    rules: [{ required: true, message: \"selecte une vois\" }]\r\n                  })(\r\n                    <Select placeholder=\"Vois\" onChange={this.onChangeVois}>\r\n                      {this.props.vois.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Postal\">\r\n                  {getFieldDecorator(\"adressCodePostal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Code Postal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Numéro\">\r\n                  {getFieldDecorator(\"adressNumero\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      onBlur={this.onChangeNumero}\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Numero\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Complement d'adresse\">\r\n                  {getFieldDecorator(\"adressComplement\")(\r\n                    <Input\r\n                      onBlur={this.onChangeComplement}\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le un complement\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Adresse Complete\">\r\n                  {getFieldDecorator(\"adressComplete\")(\r\n                    <Input\r\n                      value={this.state.adresscomplet}\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                width: \"100%\",\r\n                borderTop: \"1px solid #e9e9e9\",\r\n                padding: \"10px 16px\",\r\n                background: \"#fff\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Annuler\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Enregistrer\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(AddPerMorale);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  InputNumber,\r\n  notification,\r\n  Popconfirm,\r\n  Table\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport AddPerMorale from \"../Production Prestations/Souscription/StepOne/AddPerMorale/AddPerMorale\";\r\nimport {\r\n  getallPersonMorale,\r\n  getAllSecteurActivite,\r\n  getVois,\r\n  getAllTypePersonneMorales,\r\n  getProfession,\r\n  getSetuation,\r\n  getSexe,\r\n  deletePerMrale,\r\n  updatePersonneMorale\r\n} from \"./ParticipantAPI\";\r\nimport { getColumnSearchProps } from \"../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nclass ParticipantMoral extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editingKey: \"\",\r\n      rowSelection: \"\",\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      sexe: [],\r\n      setuations: [],\r\n      professions: [],\r\n      SecteurActivite: [],\r\n      typePersonneMoral: [],\r\n      dataloaded: false,\r\n      vois: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Abréviation\",\r\n        dataIndex: \"abb\",\r\n        key: \"abb\",\r\n        width: \"25%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"abb\", \"abb\", this)\r\n      },\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        width: \"25%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"code\", \"code\", this)\r\n      },\r\n      {\r\n        title: \"Raison Sociale\",\r\n        dataIndex: \"raisonSociale\",\r\n        key: \"raisonSociale\",\r\n        width: \"20%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"raisonSociale\", \"raisonSociale\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        align: \"center\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"Sure to cancel?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Fermer</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => {\r\n                  this.edit(record.key);\r\n                }}\r\n              >\r\n                <Icon\r\n                  type=\"edit\"\r\n                  style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n                />\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              <Popconfirm\r\n                title=\"Sure to delete?\"\r\n                onConfirm={() => this.handleDelete(record.key)}\r\n              >\r\n                <a href=\"#top\" style={{ color: \"red\" }}>\r\n                  <Icon\r\n                    type=\"user-delete\"\r\n                    style={{ color: \"rgb(208, 62, 62)\", fontSize: \"25px\" }}\r\n                  />\r\n                </a>\r\n              </Popconfirm>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  async getproprties() {\r\n    let gander = await getSexe();\r\n    let setuation = await getSetuation();\r\n    let profrssionResponse = await getProfession();\r\n    let vois = await getVois();\r\n    let typePersonneMoraleResponse = await getAllTypePersonneMorales();\r\n    let secteurActiviteResponse = await getAllSecteurActivite();\r\n    this.setState({\r\n      sexe: [...gander.data],\r\n      setuations: [...setuation.data],\r\n      dataloaded: true,\r\n      professions: [...profrssionResponse.data.content],\r\n      typePersonneMoral: [...typePersonneMoraleResponse.data],\r\n      secteurActivite: [...secteurActiviteResponse.data.content],\r\n      vois: [...vois.data]\r\n    });\r\n  }\r\n  handlePersonMoraleCreationSousctipteur = data => {};\r\n  componentDidMount() {\r\n    this.getproprties();\r\n    let listpersons = [];\r\n    getallPersonMorale().then(response => {\r\n      response.data.content.forEach(element => {\r\n        let person = { ...element, ...{ key: element.id } };\r\n        listpersons.push(person);\r\n      });\r\n    });\r\n    this.setState({\r\n      data: listpersons\r\n    });\r\n  }\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  handleDelete = key => {\r\n    this.deleteParticipant(key);\r\n    const dataSource = [...this.state.data];\r\n    this.setState({ data: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  isEditing = record => record.key === this.state.editingKey;\r\n\r\n  handlePersonphyCreationAssure = data => {};\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n  async deleteParticipant(id) {\r\n    try {\r\n      let response = await deletePerMrale(id);\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"participant bien supprimé !\"\r\n        });\r\n      }\r\n    } catch (err) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          err.message || \"Sorry! Something went wrong. Please try again!\"\r\n      });\r\n    }\r\n  }\r\n  updatePer = (id, perData) => {\r\n    updatePersonneMorale(id, perData)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"participant bien modifier !\"\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      });\r\n  };\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row\r\n        });\r\n        this.updatePer(item.id, { ...item, ...row });\r\n\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === \"age\" ? \"number\" : \"text\",\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record)\r\n        })\r\n      };\r\n    });\r\n    return (\r\n      <div>\r\n        <EditableContext.Provider value={this.props.form}>\r\n          {this.state.dataloaded && (\r\n            <AddPerMorale\r\n              titre=\"Création d'un nouveau Participant\"\r\n              typePersonneMoral={this.state.typePersonneMoral}\r\n              secteurActivite={this.state.secteurActivite}\r\n              vois={this.state.vois}\r\n              personCreation={this.handlePersonMoraleCreationSousctipteur}\r\n            />\r\n          )}\r\n          <Table\r\n            bordered\r\n            rowClassName=\"editable-row\"\r\n            components={components}\r\n            columns={columns}\r\n            dataSource={this.state.data}\r\n            pagination={{\r\n              defaultCurrent: 1,\r\n              defaultPageSize: 5,\r\n              onChange: this.cancel\r\n            }}\r\n          />\r\n        </EditableContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"number\") {\r\n      return <InputNumber />;\r\n    }\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex]\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(ParticipantMoral);\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Card } from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport Participant from \"./Participant\";\r\nimport ParticipantMoral from \"./ParticipantMoral\";\r\n\r\nconst tabListNoTitle = [\r\n  {\r\n    key: \"personnephysique\",\r\n    tab: \"Personne physique\"\r\n  },\r\n  {\r\n    key: \"personnemoral\",\r\n    tab: \"Personne Morale\"\r\n  }\r\n];\r\n\r\nconst contentListNoTitle = {\r\n  personnephysique: <Participant />,\r\n  personnemoral: <ParticipantMoral />\r\n};\r\n\r\nclass AllParticipant extends React.Component {\r\n  state = {\r\n    key: \"personnephysique\",\r\n    noTitleKey: \"personnephysique\"\r\n  };\r\n\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <Card\r\n          style={{ width: \"100%\" }}\r\n          tabList={tabListNoTitle}\r\n          activeTabKey={this.state.noTitleKey}\r\n          onTabChange={key => {\r\n            this.onTabChange(key, \"noTitleKey\");\r\n          }}\r\n        >\r\n          {contentListNoTitle[this.state.noTitleKey]}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllParticipant;\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../../../constants/index\";\r\n\r\nexport function getAuxiliaires() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/auxiliaire?page=0&sort=nom&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function updateAuxiliaire(auxiliaireId, updatedAuxiliaire) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/auxiliaire/\" + auxiliaireId,\r\n    method: \"PUT\",\r\n    data: updatedAuxiliaire\r\n  });\r\n}\r\n\r\nexport function ajoutAuxiliaire(values) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/auxiliaire/add\",\r\n    method: \"POST\",\r\n    data: values\r\n  });\r\n}\r\nexport function getTypeAuxiliaire() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/Typeauxiliaire?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAuxiliairesByType(type) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/auxiliairebytype?type=\" + type,\r\n    method: \"GET\"\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"./AjouterAuxiliaire.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Divider,\r\n  InputNumber\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getTypeAuxiliaire, ajoutAuxiliaire } from \"./AuxiliaireAPI\";\r\nimport { getVois } from \"../../Participants/ParticipantAPI\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass AjouterAuxiliaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false, auxiliaire: [], vois: [] };\r\n  }\r\n  componentDidMount() {\r\n    this.getTypeAux();\r\n    this.getVois();\r\n  }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  async getTypeAux() {\r\n    let auxiliaireResponse = await getTypeAuxiliaire();\r\n\r\n    this.setState({\r\n      auxiliaire: auxiliaireResponse.data.content\r\n    });\r\n  }\r\n\r\n  async getVois() {\r\n    let vois = await getVois();\r\n\r\n    this.setState({\r\n      vois: [...vois.data]\r\n    });\r\n  }\r\n  async ajouterAux(values) {\r\n    try {\r\n      let response = await ajoutAuxiliaire(values);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"la création d'auxiliaire est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"auxiliaire already exists\") {\r\n        notification.error({\r\n          message: \"cet auxiliaire existe déjà.\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message ||\r\n            \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      console.log(\"values:\", values);\r\n      if (!err) {\r\n        this.ajouterAux(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Button type=\"primary\" className=\"add-button\" onClick={this.showDrawer}>\r\n          <Icon type=\"plus\" /> Nouvel auxiliaire\r\n        </Button>\r\n        <Drawer\r\n          title=\"Création Nouvel auxiliaire \"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type auxiliaire\">\r\n                  {getFieldDecorator(\"typeAuxiliaireId\")(\r\n                    <Select\r\n                      placeholder=\"cliquez pour ajouter un profile\"\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.state.auxiliaire.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.libelle}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Raison sociale\">\r\n                  {getFieldDecorator(\"raisonSociale\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le raison sociale d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nom\">\r\n                  {getFieldDecorator(\"nom\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le nom d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prénom\">\r\n                  {getFieldDecorator(\"prenom\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le prenom d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Adresse éléctronique\">\r\n                  {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                      {\r\n                        type: \"email\",\r\n                        message: \"L'e-mail n'est pas valid\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez l'email d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"RIB\">\r\n                  {getFieldDecorator(\"rib\", {\r\n                    rules: [\r\n                      {\r\n                        message: \"Le rib n'est pas valid\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le rib d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Téléphone\">\r\n                  {getFieldDecorator(\"tel\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(\"^[0][5-7]{1}[0-9]{8}\"),\r\n                        message: \"Wrong format!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le télépone d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Faxe\">\r\n                  {getFieldDecorator(\"faxe\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(\"^[0][5]{1}[0-9]{8}\"),\r\n                        message: \"Wrong format!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le faxe d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Patente\">\r\n                  {getFieldDecorator(\"patente\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez la patente d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Registre commerce\">\r\n                  {getFieldDecorator(\"registreCommerce\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le registre commerce d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°Identifiant fiscal\">\r\n                  {getFieldDecorator(\"identifiantFiscal\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez l'identifiant fiscal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Cin\">\r\n                  {getFieldDecorator(\"cin\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le cin d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Spécialité\">\r\n                  {getFieldDecorator(\"specialite\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez la spécialité d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type \">\r\n                  {getFieldDecorator(\"typePersonne\")(\r\n                    <Select placeholder=\"Choisissez le type de personne\">\r\n                      <Option value=\"Physique\">Physique</Option>\r\n                      <Option value=\"Morale\">Morale</Option>\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <h4>Adresse :</h4>\r\n                <Divider></Divider>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Pays\">\r\n                  {getFieldDecorator(\"adressPays\", {\r\n                    rules: [{ required: true, message: \"selecte un pays\" }]\r\n                  })(<Input placeholder=\"pays\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Ville\">\r\n                  {getFieldDecorator(\"adressVille\", {\r\n                    rules: [{ required: true, message: \"selecte une ville\" }]\r\n                  })(<Input placeholder=\"ville\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Voie\">\r\n                  {getFieldDecorator(\"adressVois\", {\r\n                    rules: [{ required: true, message: \"selecte une vois\" }]\r\n                  })(\r\n                    <Select placeholder=\"Voie\">\r\n                      {this.state.vois.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Postal\">\r\n                  {getFieldDecorator(\"adressCodePostal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Code Postal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Numéro\">\r\n                  {getFieldDecorator(\"adressNumero\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Numero\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Complément d'adresse\">\r\n                  {getFieldDecorator(\"adressComplement\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le un complément\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Adresse Complete\">\r\n                  {getFieldDecorator(\"adressComplete\")(\r\n                    <Input className=\"not-rounded\" style={{ width: \"100%\" }} />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AjouterAuxiliaire);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport AjouterAuxiliaire from \"./AjouterAuxiliaire\";\r\nimport {\r\n  getTypeAuxiliaire,\r\n  getAuxiliaires,\r\n  updateAuxiliaire\r\n} from \"./AuxiliaireAPI\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\n\r\nconst { Option } = Select;\r\nclass Auxiliaires extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      record: {},\r\n      value: \"\",\r\n      keyRecord: \"\",\r\n      auxiliaire: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Nom\",\r\n        dataIndex: \"nom\",\r\n        key: \"nom\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"nom\", \"Nom\", this)\r\n      },\r\n      {\r\n        title: \"Prénom\",\r\n        dataIndex: \"prenom\",\r\n        key: \"prenom\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"prenom\", \"Prénom\", this)\r\n      },\r\n      {\r\n        title: \"Raison Sociale\",\r\n        dataIndex: \"raisonSociale\",\r\n        key: \"raison_sociale\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"raisonSociale\", \"Raison Sociale\", this)\r\n      },\r\n      {\r\n        title: \"Type auxiliaire \",\r\n        dataIndex: \"typeAuxiliaire.libelle\",\r\n        key: \"typeAuxiliaire\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"typeAuxiliaire\", \"typeAuxiliaire\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleSelectChange(record)}\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                Modifier\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  async getTypeAux() {\r\n    this.setState({\r\n      auxiliaire: await getTypeAuxiliaire().data.content\r\n    });\r\n  }\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getAuxiliaire();\r\n    this.getTypeAux();\r\n  }\r\n  async getAuxiliaire() {\r\n    let auxiliaireResponse = await getAuxiliaires();\r\n\r\n    this.setState({\r\n      data: auxiliaireResponse.data.content\r\n    });\r\n  }\r\n  async getTypeAux() {\r\n    let auxiliaireResponse = await getTypeAuxiliaire();\r\n\r\n    this.setState({\r\n      auxiliaire: auxiliaireResponse.data.content\r\n    });\r\n  }\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  async updateAux(id, body) {\r\n    try {\r\n      let response = await updateAuxiliaire(id, body);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"la modification est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message ||\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.updateAux(this.state.keyRecord, values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({ visible: true, keyRecord: value.id });\r\n    this.props.form.setFieldsValue({\r\n      adresse: value.adresse,\r\n      email: value.email,\r\n      faxe: value.faxe,\r\n      ir: value.ir,\r\n      nom: value.nom,\r\n      patente: value.patente,\r\n      prenom: value.prenom,\r\n      raisonSociale: value.raisonSociale,\r\n      registreCommerce: value.registreCommerce,\r\n      specialite: value.specialite,\r\n      tel: value.tel,\r\n      typePersonne: value.typePersonne,\r\n      typeAuxiliaireId: value.typeAuxiliaire.id,\r\n      cin: value.cin,\r\n      identifiantFiscal: value.identifiantFiscal,\r\n      rib: value.rib\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des auxiliaires\" />\r\n        <AjouterAuxiliaire />\r\n        <Table\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.data}\r\n          pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n        />\r\n        <Drawer\r\n          title=\"Modification d'auxiliaire\"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type auxiliaire\">\r\n                  {getFieldDecorator(\"typeAuxiliaireId\")(\r\n                    <Select\r\n                      placeholder=\"cliquez pour ajouter un profile\"\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.state.auxiliaire.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.libelle}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Raison sociale\">\r\n                  {getFieldDecorator(\"raisonSociale\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le raison sociale d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Adresse Postal\">\r\n                  {getFieldDecorator(\"adresse\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez l'adresse d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Adresse éléctronique\">\r\n                  {getFieldDecorator(\"email\", {\r\n                    rules: [\r\n                      {\r\n                        type: \"email\",\r\n                        message: \"L'e-mail n'est pas valid\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez l'email d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Téléphone\">\r\n                  {getFieldDecorator(\"tel\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(\"^[0][5-7]{1}[0-9]{8}\"),\r\n                        message: \"Wrong format!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le télépone d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Faxe\">\r\n                  {getFieldDecorator(\"faxe\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(\"^[0][5]{1}[0-9]{8}\"),\r\n                        message: \"Wrong format!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le faxe d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Patente\">\r\n                  {getFieldDecorator(\"patente\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez la patente d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Registre commerce\">\r\n                  {getFieldDecorator(\"registreCommerce\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le registre commerce d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°Identifiant fiscal\">\r\n                  {getFieldDecorator(\"identifiantFiscal\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez l'identifiant fiscal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Cin\">\r\n                  {getFieldDecorator(\"cin\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le cin d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nom\">\r\n                  {getFieldDecorator(\"nom\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le nom d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prénom\">\r\n                  {getFieldDecorator(\"prenom\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le prenom d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Spécialité\">\r\n                  {getFieldDecorator(\"specialite\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez la spécialité d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type \">\r\n                  {getFieldDecorator(\"typePersonne\")(\r\n                    <Select placeholder=\"Choisissez le type de personne\">\r\n                      <Option value=\"Physique\">Physique</Option>\r\n                      <Option value=\"Morale\">Morale</Option>\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"RIB\">\r\n                  {getFieldDecorator(\"rib\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le rib d'auxiliaire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Modifier\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Auxiliaires);\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../../../constants/index\";\r\n\r\nexport function createPrestationHonoraire(prestationRequestModel) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/prestation-honoraire\",\r\n    data: prestationRequestModel,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function getHonoraire() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/honoraires/?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updateHonoraire(honoraireId, updatedHonoraire) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/honoraire/\" + honoraireId,\r\n    method: \"PUT\",\r\n    data: updatedHonoraire\r\n  });\r\n}\r\nexport function ajoutHonoraire(honoraireRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/honoraire/add\",\r\n    method: \"POST\",\r\n    data: honoraireRequest\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"./AjouterHonoraire.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getTypeAuxiliaire } from \"../Auxiliaires/AuxiliaireAPI\";\r\nimport { ajoutHonoraire } from \"./HonorairesAPI\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass AjouterHonoraire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false, auxiliaire: [] };\r\n  }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  async getTypeAux() {\r\n    let auxiliaireResponse = await getTypeAuxiliaire();\r\n\r\n    this.setState({\r\n      auxiliaire: auxiliaireResponse.data.content\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getTypeAux();\r\n  }\r\n  async ajouterHon(values) {\r\n    try {\r\n      let response = await ajoutHonoraire(values);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"la creation d'honoraire est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"honoraire already exists\") {\r\n        notification.error({\r\n          message: \"ce honoraire existe déja.\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message ||\r\n            \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterHon(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Button type=\"primary\" className=\"add-button\" onClick={this.showDrawer}>\r\n          <Icon type=\"plus\" /> Nouvel honoraire\r\n        </Button>\r\n        <Drawer\r\n          title=\"Création d'un nouvel honoraire\"\r\n          width={320}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Code :\">\r\n                  {getFieldDecorator(\"code\", {\r\n                    rules: [{ required: true, message: \"Tapez le code\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le code d'honoraire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col>\r\n                <Form.Item label=\"Libelle :\">\r\n                  {getFieldDecorator(\"libelle\", {\r\n                    rules: [{ required: true, message: \"Tapez le libelle\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le libelle d'honoraire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Montant :\">\r\n                  {getFieldDecorator(\"montantHonoraire\", {\r\n                    rules: [{ required: true, message: \"Tapez le montant\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le montant d'honoraire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col>\r\n                <Form.Item label=\"Type auxiliaire :\">\r\n                  {getFieldDecorator(\"typeAuxiliaireId\")(\r\n                    <Select\r\n                      placeholder=\"cliquez pour choisir un type\"\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.state.auxiliaire.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.code}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AjouterHonoraire);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport AjouterHonoraire from \"./AjouterHonoraire\";\r\nimport { getTypeAuxiliaire } from \"../Auxiliaires/AuxiliaireAPI\";\r\nimport { getHonoraire, updateHonoraire } from \"./HonorairesAPI\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\n\r\nconst { Option } = Select;\r\nclass Honoraires extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      record: {},\r\n      value: \"\",\r\n      keyRecord: \"\",\r\n      auxiliaire: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        width: \"20%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"code\", \"code\", this)\r\n      },\r\n      {\r\n        title: \"Libelle\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\",\r\n        width: \"20%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"libelle\", \"libelle\", this)\r\n      },\r\n      {\r\n        title: \"Montant\",\r\n        dataIndex: \"montantHonoraire\",\r\n        key: \"montant\",\r\n        width: \"20%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"montant\", \"montant\", this)\r\n      },\r\n      {\r\n        title: \"Type auxiliaire\",\r\n        dataIndex: \"typeAuxiliaireHon.code\",\r\n        key: \"type\",\r\n        width: \"20%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"type\", \"type\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleSelectChange(record)}\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                Modifier\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    this.getTypeAux = this.getTypeAux.bind();\r\n  }\r\n\r\n  async getTypeAux() {\r\n    this.setState({\r\n      auxiliaire: await getTypeAuxiliaire().data.content\r\n    });\r\n  }\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  rechercheHonoraire = () => {\r\n    getHonoraire()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Your Username or Password is incorrect. Please try again!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message || \"Sorry! Something went wrong. Please try again!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.rechercheHonoraire();\r\n  }\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  async updateHon(id, body) {\r\n    try {\r\n      let response = await updateHonoraire(id, body);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"la modification est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message ||\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.updateHon(this.state.keyRecord, values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({ visible: true, keyRecord: value.id });\r\n    this.props.form.setFieldsValue({\r\n      code: value.code,\r\n      libelle: value.libelle,\r\n      montantHonoraire: value.montantHonoraire,\r\n      typeAuxiliaireId: value.typeAuxiliaireHon.id\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des honoraires\" />\r\n        <AjouterHonoraire />\r\n        <Table\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.data}\r\n          pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n        />\r\n        <Drawer\r\n          title=\"Création d'un nouvel honoraire\"\r\n          width={320}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Code :\">\r\n                  {getFieldDecorator(\"code\", {\r\n                    rules: [{ required: true, message: \"Tapez le code\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le code d'honoraire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col>\r\n                <Form.Item label=\"Libelle :\">\r\n                  {getFieldDecorator(\"libelle\", {\r\n                    rules: [{ required: true, message: \"Tapez le libelle\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le libelle d'honoraire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Montant :\">\r\n                  {getFieldDecorator(\"montantHonoraire\", {\r\n                    rules: [{ required: true, message: \"Tapez le montant\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le montant d'honoraire\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col>\r\n                <Form.Item label=\"Type auxiliaire :\">\r\n                  {getFieldDecorator(\"typeAuxiliaireId\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Choisissez le type auxiliaire\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"cliquez pour ajouter un profile\"\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.state.auxiliaire.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.code}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Modifier\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Honoraires);\r\n","import {\r\n  API_BASE_URL,\r\n  ACCESS_TOKEN,\r\n  REQUEST as request\r\n} from \"../../../constants/index\";\r\nexport function getPrestation() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/typeprestation/?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updatePrestation(prestationId, updatedPrestation) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/typeprestation/\" + prestationId,\r\n    method: \"PUT\",\r\n    data: updatedPrestation\r\n  });\r\n}\r\nexport function ajoutPrestation(prestationRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/typeprestation\",\r\n    method: \"POST\",\r\n    data: prestationRequest\r\n  });\r\n}\r\nexport function getTypePrestation() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/typeprestation?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getTypePrestationFamille(famille) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/typeprestationFamille/\" + famille,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getPrestationStatus() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/prestation-status\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updatePrestationSinistre(updatedSinistre, id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/updateSinistre/\" + id,\r\n    method: \"PUT\",\r\n    data: updatedSinistre\r\n  });\r\n}\r\nexport function ajoutPrestationRachatTotal(requestModel) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addPrestationRachatTotal\",\r\n    data: requestModel,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function getPrestationRachatTotal(contratId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/getPrestationsRachatTotal/\" + contratId,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getPrestationSearch(\r\n  auxiliaire,\r\n  status,\r\n  produit,\r\n  typeAuxiliaire,\r\n  nomParticipant,\r\n  contrat\r\n) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/prestation-honoraire?auxiliaire=\" +\r\n      auxiliaire +\r\n      \"&status=\" +\r\n      status +\r\n      \"&produit=\" +\r\n      produit +\r\n      \"&type-auxiliaire=\" +\r\n      typeAuxiliaire +\r\n      \"&participant=\" +\r\n      nomParticipant +\r\n      \"&contrat=\" +\r\n      contrat,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function setPrestationStatut(id, statut) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/reglement/\" + id + \"/\" + statut,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function addPrestationHonoraire(id, statut, model) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/reglementHonoraire/\" + id + \"/\" + statut,\r\n    data: model,\r\n    method: \"POST\"\r\n  });\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../../../constants/index\";\r\nimport { Form, Select } from \"antd\";\r\nconst { Option } = Select;\r\nexport function getDecesProduit() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/decesproduit?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function ajoutDecesProduit(productRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/decesproduit\",\r\n    data: productRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function updateDecesProduct(productId, updatedProduct) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/decesproduit/\" + productId,\r\n    method: \"PUT\",\r\n    data: updatedProduct\r\n  });\r\n}\r\nexport function getTarification(\r\n  duree,\r\n  age,\r\n  capital,\r\n  differe,\r\n  typeProduit,\r\n  decesProduit\r\n) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/tarrification?age=\" +\r\n      age +\r\n      \"&duree=\" +\r\n      duree +\r\n      \"&differe=\" +\r\n      differe +\r\n      \"&capitale=\" +\r\n      capital +\r\n      \"&type=\" +\r\n      typeProduit +\r\n      \"&deceProduit=\" +\r\n      decesProduit,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getFamilleProduitByName(name) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/familleProduit/\" + name,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getRisque(theme) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/risque?page=0&sort=libelle&direction=asc&theme=\" +\r\n      theme,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getCategorie() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/categorie?page=0&sort=libelle&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getNormeById(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/normeSelection?id=\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function updateNorme(id, updatedNorme) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/normeSelection/\" + id,\r\n    method: \"PUT\",\r\n    data: updatedNorme\r\n  });\r\n}\r\nexport function getFamilleProduit() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/familleproduit?page=0&sort=name&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function selectStepZero(\r\n  label,\r\n  field,\r\n  fieldDecorater,\r\n  mappped,\r\n  change,\r\n  elementToReturn\r\n) {\r\n  let fieldSelect = field;\r\n  return (\r\n    <Form.Item label={label} hasFeedback>\r\n      {fieldDecorater(fieldSelect, {\r\n        rules: [\r\n          {\r\n            required: true,\r\n            message: \"Choisissez un element\"\r\n          }\r\n        ]\r\n      })(\r\n        <Select placeholder=\"-sélectionnez -\" onChange={change}>\r\n          {mappped.map(element => {\r\n            switch (elementToReturn) {\r\n              case \"risque\":\r\n                return (\r\n                  <Option value={element.id} label={element.name}>\r\n                    {element.name}\r\n                  </Option>\r\n                );\r\n              case \"categorie\":\r\n                return (\r\n                  <Option value={element.id} label={element.libelle}>\r\n                    {element.libelle}\r\n                  </Option>\r\n                );\r\n              case \"partenaire\":\r\n                return (\r\n                  <Option value={element.id} label={element.raisonSocial}>\r\n                    {element.raisonSocial}\r\n                  </Option>\r\n                );\r\n              default:\r\n                return null;\r\n            }\r\n          })}\r\n        </Select>\r\n      )}\r\n    </Form.Item>\r\n  );\r\n}\r\nexport function getSousCategorie() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/souscategorie?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n","import \"./AjoutTypePrestation.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { ajoutPrestation } from \"./PrestationAPI\";\r\nimport { getFamilleProduit } from \"../ProduitDeces/ProduitDecesAPI\";\r\nconst { Option } = Select;\r\nclass AjoutTypePrestation extends Component {\r\n  state = { visible: false, familles: [] };\r\n  componentDidMount() {\r\n    this.getAllFamille();\r\n  }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  async getAllFamille() {\r\n    let response = await getFamilleProduit();\r\n\r\n    this.setState({\r\n      familles: response.data.content,\r\n    });\r\n  }\r\n  async ajouterPrestation(values) {\r\n    try {\r\n      let response = await ajoutPrestation(values);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"La creation du type prestation est bien faite\",\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"Ce type prestation existe déja\") {\r\n        notification.error({\r\n          message: \"Ce type prestation existe déja.\",\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message ||\r\n            \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\",\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterPrestation(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = (e) => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Button type=\"primary\" className=\"add-button\" onClick={this.showDrawer}>\r\n          <Icon type=\"plus\" /> Nouveau type prestation\r\n        </Button>\r\n        <Drawer\r\n          title=\"Création d'un nouveau type prestation\"\r\n          onClose={this.onClose}\r\n          width=\"300\"\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Code\">\r\n                  {getFieldDecorator(\"code\", {\r\n                    rules: [{ required: true, message: \"Tapez le code\" }],\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le code\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col>\r\n                <Form.Item label=\"Libelle\">\r\n                  {getFieldDecorator(\"libelle\", {\r\n                    rules: [{ required: true, message: \"Tapez le libelle\" }],\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le libelle\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Nom\">\r\n                  {getFieldDecorator(\"name\", {\r\n                    rules: [{ required: true, message: \"Tapez le nom\" }],\r\n                  })(\r\n                    <Input className=\"not-rounded\" placeholder=\"Tapez le nom\" />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Famille\">\r\n                  {getFieldDecorator(\"familleId\", {\r\n                    rules: [\r\n                      { required: true, message: \"Choisissez la famille\" },\r\n                    ],\r\n                  })(\r\n                    <Select\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"cliquez pour choisir la famille\"\r\n                    >\r\n                      {this.state.familles.map((element) => {\r\n                        return (\r\n                          <Option value={element.id} label={element.name}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AjoutTypePrestation);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, notification, Popconfirm, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport AjoutTypePrestation from \"./AjoutTypePrestation\";\r\nimport { getPrestation, updatePrestation } from \"./PrestationAPI\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nconst EditableContext = React.createContext();\r\n\r\nclass TypePrestation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editingKey: \"\",\r\n      rowSelection: \"\",\r\n      searchText: \"\",\r\n      searchedColumn: \"\"\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        width: \"25%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"code\", \"code\", this)\r\n      },\r\n      {\r\n        title: \"Libelle\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\",\r\n        width: \"25%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"libelle\", \"libelle\", this)\r\n      },\r\n      {\r\n        title: \"Nom\",\r\n        dataIndex: \"name\",\r\n        key: \"name\",\r\n        width: \"25%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"name\", \"name\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"Sure to cancel?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Fermer</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => {\r\n                  this.edit(record.key);\r\n                }}\r\n              >\r\n                Modifier\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  updatePrestation = (id, prestationData) => {\r\n    updatePrestation(id, prestationData)\r\n      .then(response => {})\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrect. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n  recherchePrestation = () => {\r\n    getPrestation()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Your Username or Password is incorrect. Please try again!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message || \"Sorry! Something went wrong. Please try again!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.recherchePrestation();\r\n  }\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  isEditing = record => record.key === this.state.editingKey;\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row\r\n        });\r\n        this.updatePrestation(item.id, row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === \"text\",\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record)\r\n        })\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des prestations\" />\r\n        <AjoutTypePrestation />\r\n        <EditableContext.Provider value={this.props.form}>\r\n          <Table\r\n            rowClassName=\"editable-row\"\r\n            components={components}\r\n            columns={columns}\r\n            dataSource={this.state.data}\r\n            pagination={{\r\n              defaultCurrent: 1,\r\n              defaultPageSize: 5,\r\n              onChange: this.cancel\r\n            }}\r\n          />\r\n        </EditableContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    return <Input />;\r\n  };\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex]\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(TypePrestation);\r\n","/* eslint-disable react/prop-types */\r\nimport \"./AjoutCauseRes.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { ajoutCauseRes } from \"../Restitutions/RestitutionAPI\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  notification,\r\n  Row\r\n} from \"antd\";\r\nimport React from \"react\";\r\n\r\nclass AjoutCauseRes extends React.Component {\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  async ajouterCauseRestitution(values) {\r\n    try {\r\n      let response = await ajoutCauseRes(values);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"La création de la cause restitution est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"cause restitution already exists\") {\r\n        notification.error({\r\n          message: \"Cette restitution existe déja.\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterCauseRestitution(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Button type=\"primary\" className=\"add-button\" onClick={this.showDrawer}>\r\n          <Icon type=\"plus\" /> Nouvelle cause restitution\r\n        </Button>\r\n        <Drawer\r\n          title=\"Creation d'un nouvelle cause restitution\"\r\n          onClose={this.onClose}\r\n          width=\"300\"\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col>\r\n                <Form.Item label=\"Libelle :\">\r\n                  {getFieldDecorator(\"libelle\", {\r\n                    rules: [{ required: true, message: \"Tapez le libelle\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le libelle\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(AjoutCauseRes);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, notification, Popconfirm, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport AjoutCauseRes from \"./AjoutCauseRes\";\r\nimport { getCauseRes, updateCauseRes } from \"../Restitutions/RestitutionAPI\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nclass CauseRestitution extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editingKey: \"\",\r\n      searchText: \"\",\r\n      searchedColumn: \"\"\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Libelle\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\",\r\n        width: \"40%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"libelle\", \"libelle\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"Sure to cancel?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Fermer</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => {\r\n                  this.edit(record.key);\r\n                }}\r\n              >\r\n                Modifier\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  updateCauseRes = (id, causeResData) => {\r\n    updateCauseRes(id, causeResData)\r\n      .then(response => {})\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrect. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  rechercheCauseRes = () => {\r\n    getCauseRes()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrect. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.rechercheCauseRes();\r\n  }\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  isEditing = record => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row\r\n        });\r\n        this.updateCauseRes(item.id, row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === \"text\",\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record)\r\n        })\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des causes restitution\" />\r\n        <AjoutCauseRes />\r\n        <EditableContext.Provider value={this.props.form}>\r\n          <Table\r\n            rowClassName=\"editable-row\"\r\n            components={components}\r\n            columns={columns}\r\n            dataSource={this.state.data}\r\n            pagination={{\r\n              defaultCurrent: 1,\r\n              defaultPageSize: 5,\r\n              onChange: this.cancel\r\n            }}\r\n          />\r\n        </EditableContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex]\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(CauseRestitution);\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../../../constants/index\";\r\n\r\nexport function updateAvenant(avenantId, updatedAvenant) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/typeavenant/\" + avenantId,\r\n    method: \"PUT\",\r\n    data: updatedAvenant\r\n  });\r\n}\r\nexport function getAllAvenants() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/TypeAvenant?direction=asc&limit=4&page=0&sort=code\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function addTypeAvenant(createTypeAvenantRequest) {\r\n  return request({\r\n    url: API_BASE_URL + \"/private/TypeAvenant/add\",\r\n    method: \"POST\",\r\n    data: createTypeAvenantRequest\r\n  });\r\n}\r\nexport function addAvenant(id, updatedContrat) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/decescontrat/\" + id,\r\n    method: \"PUT\",\r\n    data: updatedContrat\r\n  });\r\n}\r\nexport function addAvenantRetrait(id, updatedContrat) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/retraitcontrat/\" + id,\r\n    method: \"PUT\",\r\n    data: updatedContrat\r\n  });\r\n}\r\nexport function getAvenant(contratId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/avenant/\" + contratId,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getTypeAvenant() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/TypeAvenant?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getCodeTypeAvenantById(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/TypeAvenant/\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function ajouterAvenant(avenant, typeContart) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/avenant/\" + typeContart,\r\n    method: \"POST\",\r\n    data: avenant\r\n  });\r\n}\r\n","import \"antd/dist/antd.css\";\r\nimport { Collapse, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getAvenant } from \"../../Parametrage/avenant/AvenantAPI.js\";\r\nimport { MyContext } from \"../ConsultDecesContrat\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nvar id = \"\";\r\nclass Avenants extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\",\r\n      data: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro d'avenant\",\r\n        dataIndex: \"numeroAvenant\",\r\n        key: \"numeroAvenant\"\r\n      },\r\n      {\r\n        title: \"Date d'effet\",\r\n        dataIndex: \"dateEffet\",\r\n        key: \"dateEffet\"\r\n      },\r\n      {\r\n        title: \"Type d'avenant\",\r\n        dataIndex: \"typeAvenant.libelle\",\r\n        key: \"typeAvenant\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAvenants(id);\r\n  }\r\n\r\n  getAvenants = idContrat => {\r\n    getAvenant(idContrat).then(response => {\r\n      let newDataList = [];\r\n      response.data.forEach(element => {\r\n        let key = { key: element.id };\r\n        element = { ...element, ...key };\r\n        newDataList.push(element);\r\n      });\r\n      this.setState({ data: newDataList });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          (id = context.state.id),\r\n          (\r\n            <React.Fragment>\r\n              <div>\r\n                <Collapse\r\n                  defaultActiveKey={[\"1\"]}\r\n                  expandIconPosition={expandIconPosition}\r\n                >\r\n                  <Panel header=\"Liste des Avenants\" key=\"1\">\r\n                    <div>\r\n                      <Table\r\n                        rowClassName=\"editable-row\"\r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}\r\n                        pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n                      />\r\n                    </div>\r\n                  </Panel>\r\n                </Collapse>\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Avenants;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"../ConsultDecesContrat\";\r\nconst { Panel } = Collapse;\r\n\r\nclass Contrats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Contrat\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      N° contrat : {context.state.numeroContrat}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - N° de compte bancaire\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>---</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Numéro du contrat\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.numeroContrat}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Date d&apos;effet\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.dateEffet}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Date d&apos;écheance\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.dateEcheance}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Durée (mois)</h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.dureeContrat}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Montant de la cotisation périodique\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.montantCotisation.toFixed(2)}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Périodicité</h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.periodicite.libelle}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Montant des frais d&apos;acquisition\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.montantFrais.toFixed(2)}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Date de prélèvement\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.datePrelevement}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Montant de financement\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.capitalAssure.toFixed(2)}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Taux de financement (%)\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.tauxInteret}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Taux surprime (%)\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.tauxSurprime}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contrats;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"../ConsultDecesContrat\";\r\n\r\nconst { Panel } = Collapse;\r\nclass General extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Souscripteur\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      CIN : {context.state.souscripteur.cin}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.nom}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prénom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.prenom}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- CIN</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.cin}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Date naissance</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.dateNaissance}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Situation familiale\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.situationFamiliale}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Profession</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.profession}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nationalité</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.nationalite}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Matricule</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.matricule}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n                <Panel\r\n                  header=\"Assuré\"\r\n                  key=\"2\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      CIN : {context.state.assure.cin}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.nom}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prénom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.prenom}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- CIN</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.cin}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Date naissance</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.dateNaissance}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Situation familiale\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.situationFamiliale}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Profession</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.profession}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nationalité</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.nationalite}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Matricule</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.matricule}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n                <Panel header=\"Bénéficiaire(s)\" key=\"3\">\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col>\r\n                        <p>Pas encore fais</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default General;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"../ConsultDecesContrat\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass Produits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Produit\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      Libelle : {context.state.produit.libelle}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Libelle</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.libelle}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Code</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.code}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Fraisd&aposacquisition\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.fraisAcquisition}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Risque</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.risque.libelle}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Catégorie</h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.categorie.libelle}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Durée min contrat (Mois)\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.dureeMin}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Numéro de compte\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.numeroCompte}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Délai résiliation\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.delaiResiliation}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Délai préavis</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.delaiPreavis}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Délai déclaration\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.delaiDeclaration}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Seuil examinateur\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.seuilExaminateur}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Seuil Conseil</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.seuilConseil}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Durée Max</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.dureeMax}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Durée Min</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.dureeMin}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Différé Max</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.differeMax}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Différé Min</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.differeMin}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Age Max</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.ageMax}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Age Min</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.ageMin}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Produits;\r\n","import {\r\n  ACCESS_TOKEN,\r\n  API_BASE_URL,\r\n  REQUEST as request\r\n} from \"../../../constants/index\";\r\n\r\nexport function getSinistre(contratId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/getSinistre/\" + contratId,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function deleteSinistre(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/Sinistre/delete/\" + id,\r\n    method: \"DELETE\"\r\n  });\r\n}\r\n\r\nexport function ajoutSinistre(sinistreRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addSinistre\",\r\n    data: sinistreRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function setStatut(id, statut, requestModel) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/sinistre/setStatus/\" +\r\n      id +\r\n      \"/\" +\r\n      statut +\r\n      \"?page=0\",\r\n    data: requestModel,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function ajoutReglement(id, type, requested) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/sinistre/\" + id + \"/\" + type,\r\n    data: requested,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function getReglements() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/reglements?page=0&sort=libelle&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n","import {\r\n  ACCESS_TOKEN,\r\n  API_BASE_URL,\r\n  REQUEST as request\r\n} from \"../../constants/index\";\r\n\r\nexport function searchFlux(modelRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/flux\",\r\n    data: modelRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function addFlux(modelRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addflux\",\r\n    data: modelRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function downloadFlux(title) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/downloadFlux/\" + title,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function listFiles() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/listFluxFiles\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getPieceJoint() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/piecejointe?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getOption() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/optionassurances?page=0&sort=libelle&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getExclusion(famille) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/exclusions/\" +\r\n      famille +\r\n      \"?page=0&sort=exclusion_nom&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function jasperFile(devis) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/jasper/pdf\",\r\n    method: \"POST\",\r\n    data: devis,\r\n    responseType: \"blob\"\r\n  });\r\n}\r\nexport function jasperFileMrb(devisMrb) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/devisMrb/pdf\",\r\n    method: \"POST\",\r\n    data: devisMrb,\r\n    responseType: \"blob\"\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"./Sinistre.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Modal,\r\n  notification,\r\n  Radio,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getSinistre, setStatut, deleteSinistre } from \"./SinistreAPI\";\r\nimport { updatePrestationSinistre } from \"../../Parametrage/TypePrestation/PrestationAPI\";\r\nimport {\r\n  getExclusion,\r\n  getPieceJoint\r\n} from \"../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nimport { MyContext } from \"../ConsultDecesContrat\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nvar id = \"\";\r\nvar id_sinistre = \"\";\r\nvar statut = \"\";\r\nvar beneficiaire = {};\r\nconst famille = \"Deces\";\r\nclass Sinistre extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\",\r\n      data: [],\r\n      add: false,\r\n      remplie: \"\",\r\n      visible: false,\r\n      visibled: false,\r\n      exclusions: [],\r\n      pieceJointe: [],\r\n      keyRecord: \"\",\r\n      agenceBancaire: true\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro de sinistre\",\r\n        dataIndex: \"numeroSinistre\",\r\n        key: \"numeroSinistre\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleChange(record)}\r\n                size=\"small\"\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                {text}\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Date de survenance\",\r\n        dataIndex: \"dateSurvenance\",\r\n        key: \"dateServenance\"\r\n      },\r\n      {\r\n        title: \"date déclaration sinistre\",\r\n        dataIndex: \"dateDeclarationSinistre\",\r\n        key: \"dateDeclarationSinistre\"\r\n      },\r\n      {\r\n        title: \"Statut\",\r\n        dataIndex: \"status\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Select\r\n                placeholder=\"Please select\"\r\n                onChange={this.handleChangeed}\r\n                style={{ width: \"100%\" }}\r\n                defaultValue={text}\r\n              >\r\n                <Option\r\n                  value=\"EN_COURS\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  EN COURS\r\n                </Option>\r\n                <Option\r\n                  value=\"A_signer\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  À SIGNER\r\n                </Option>\r\n                <Option\r\n                  value=\"ANNULER\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  ANNULER\r\n                </Option>\r\n                <Option\r\n                  value=\"REJ_CONTRAT_ECHU\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  REJ CONTRAT ECHU\r\n                </Option>\r\n              </Select>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    this.columns1 = [\r\n      {\r\n        title: \"Numéro de sinistre\",\r\n        dataIndex: \"numeroSinistre\",\r\n        key: \"numeroSinistre\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleChange(record)}\r\n                size=\"small\"\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                {text}\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Date de survenance\",\r\n        dataIndex: \"dateSurvenance\",\r\n        key: \"dateServenance\"\r\n      },\r\n      {\r\n        title: \"date déclaration sinistre\",\r\n        dataIndex: \"dateDeclarationSinistre\",\r\n        key: \"dateDeclarationSinistre\"\r\n      },\r\n      {\r\n        title: \"Statut\",\r\n        dataIndex: \"status\",\r\n        key: \"statut\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSinistres(id);\r\n    this.getAllPiece();\r\n    this.getAllExclusion(famille);\r\n  }\r\n\r\n  onChanged = e => {\r\n    this.setState({\r\n      agenceBancaire: e.target.value\r\n    });\r\n  };\r\n\r\n  handleChangeed = value => {\r\n    statut = value;\r\n    if (value === \"A_signer\") {\r\n      this.setState({\r\n        visible: true\r\n      });\r\n    } else if (value === \"EN_COURS\") {\r\n      let request = { motif: \"\" };\r\n      this.setStatuts(id_sinistre, value, request);\r\n    } else if (value === \"ANNULER\") {\r\n      this.setState({\r\n        visibled: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOk = () => {\r\n    let request = { motif: \"\" };\r\n    this.setStatuts(id_sinistre, statut, request);\r\n    this.setState({ visible: false });\r\n  };\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let request = { motif: values.motif };\r\n        this.setStatuts(id_sinistre, statut, request);\r\n        this.setState({ visibled: false });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  async updatePrestationSinistres(body, id_prestation) {\r\n    let response = await updatePrestationSinistre(body, id_prestation);\r\n    let dataSource = [];\r\n    dataSource.push(response.data);\r\n    this.setState({\r\n      data: dataSource\r\n    });\r\n  }\r\n\r\n  async setStatuts(idSinistre, statuts, model) {\r\n    await setStatut(idSinistre, statuts, model);\r\n  }\r\n  async getAllExclusion(exclusionFamille) {\r\n    let response = await getExclusion(exclusionFamille);\r\n    this.setState({\r\n      exclusions: response.data.content\r\n    });\r\n  }\r\n\r\n  getSinistres = idContrat => {\r\n    getSinistre(idContrat).then(response => {\r\n      let newDataList = [];\r\n      response.data.forEach(element => {\r\n        let key = { key: element.id };\r\n        element = { ...element, ...key };\r\n        newDataList.push(element);\r\n      });\r\n      this.setState({ data: newDataList });\r\n      if (this.state.data[0] !== undefined) {\r\n        this.setState({ remplie: this.state.data[0].status });\r\n      }\r\n    });\r\n  };\r\n\r\n  async deletePrestationSinistre(idPrestation) {\r\n    try {\r\n      let response = await deleteSinistre(idPrestation);\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"Sinistre annulé !\"\r\n        });\r\n      }\r\n    } catch (err) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          err.message || \"Désolé! Un problème est survenu. Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleRecord = value => {\r\n    id_sinistre = value.id;\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({ add: true, keyRecord: value.id }, () => {\r\n      var dateDeclaration = new Date(\r\n        moment(value.dateDeclarationSinistre, \"DD/MM/YYYY \")\r\n      );\r\n\r\n      var dateSurvenance = new Date(\r\n        moment(value.dateSurvenance, \"DD/MM/YYYY \")\r\n      );\r\n      var dateApres = new Date(moment(value.creationDate, \"DD/MM/YYYY \"));\r\n      var diffDeclaration = dateApres.getTime() - dateDeclaration.getTime();\r\n      var dureeDeclaration = (diffDeclaration / (1000 * 60 * 60 * 24)).toFixed(\r\n        0\r\n      );\r\n      var diffSurvenance = dateApres.getTime() - dateSurvenance.getTime();\r\n      var dureeSurvenance = (diffSurvenance / (1000 * 60 * 60 * 24)).toFixed(0);\r\n      this.props.form.setFieldsValue({\r\n        dateCreation: moment(value.creationDate, \"DD/MM/YYYY \"),\r\n        numeroSinistre: value.numeroSinistre,\r\n        dateDeclarationSinistre: moment(\r\n          value.dateDeclarationSinistre,\r\n          \"DD/MM/YYYY\"\r\n        ),\r\n        dateSurvenance: moment(value.dateSurvenance, \"DD/MM/YYYY\"),\r\n        dureeDeclaration: dureeDeclaration,\r\n        dureeSurvenance: dureeSurvenance,\r\n        commentaire: value.commentaire,\r\n        crd: value.crd,\r\n        montantRegler: value.montantRegler,\r\n        typeSinistre: value.natureSinistre,\r\n        nbrEcheanceImpayees: value.nbrEcheanceImpaye,\r\n        numeroCompte: value.numeroCompte,\r\n        reglementPartiel: value.reglementPartiel,\r\n        tauxInvalidite: value.tauxInvalidite,\r\n        modeReglement: value.modeReglement,\r\n        beneficiaire: beneficiaire.id\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let request = {\r\n          dateSurvenance: values.dateSurvenance,\r\n          dateDeclarationSinistre: values.dateDeclarationSinistre,\r\n          dureeDeclaration: values.dureeDeclaration,\r\n          dureeSurvenance: values.dureeSurvenance,\r\n          commentaire: values.commentaire,\r\n          crd: values.crd,\r\n          montantRegler: values.montantRegler,\r\n          natureSinistre: values.typeSinistre,\r\n          nbrEcheanceImpaye: values.nbrEcheanceImpayees,\r\n          numeroCompte: values.numeroCompte,\r\n          reglementPartiel: values.reglementPartiel,\r\n          tauxInvalidite: values.tauxInvalidite,\r\n          modeReglement: values.modeReglement,\r\n          exclusionNom: values.exclusion,\r\n          numeroSinistre: values.numeroSinistre,\r\n          beneficiaireAgenceBancaire: this.state.agenceBancaire,\r\n          pointVente: values.beneficiaire,\r\n          remplie: true,\r\n          causeSinistre: values.causeSinistre\r\n        };\r\n        this.updatePrestationSinistres(request, this.state.keyRecord);\r\n        this.setState({ remplie: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  async getAllPiece() {\r\n    let response = await getPieceJoint();\r\n    this.setState({\r\n      pieceJointe: response.data.content\r\n    });\r\n  }\r\n\r\n  handleDelete = key => {\r\n    this.deletePrestationSinistre(key);\r\n    const dataSource = [...this.state.data];\r\n    this.setState({ data: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 11\r\n      },\r\n      wrapperCol: {\r\n        span: 12\r\n      }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible, visibled } = this.state;\r\n\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          (id = context.state.id),\r\n          (beneficiaire = context.state.pointVente),\r\n          (\r\n            <React.Fragment>\r\n              <div>\r\n                <Modal\r\n                  visible={visible}\r\n                  title=\"Confirmation\"\r\n                  onOk={this.handleOk}\r\n                  onCancel={this.handleCancel}\r\n                  footer={[\r\n                    <Button key=\"back\" onClick={this.handleCancel}>\r\n                      Non\r\n                    </Button>,\r\n                    <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\r\n                      Oui\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                  <p>Étes-vous sûre de changer ce statut ?</p>\r\n                </Modal>\r\n                <Modal\r\n                  visible={visibled}\r\n                  title=\"Motif d'annulation\"\r\n                  onOk={this.handleSubmited}\r\n                  onCancel={this.handleCancel}\r\n                  width=\"600px\"\r\n                  footer={[\r\n                    <Button key=\"back\" onClick={this.handleCancel}>\r\n                      Fermer\r\n                    </Button>,\r\n                    <Button\r\n                      key=\"submit\"\r\n                      type=\"primary\"\r\n                      onClick={this.handleSubmited}\r\n                    >\r\n                      Valider\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                  <Form>\r\n                    <Form.Item label=\"Le motif \">\r\n                      {getFieldDecorator(\"motif\", {\r\n                        rules: [{ message: \"Champs Obligatoire!\" }]\r\n                      })(<TextArea rows={2} />)}\r\n                    </Form.Item>\r\n                  </Form>\r\n                </Modal>\r\n                {this.state.remplie === \"A_SIGNER\" ||\r\n                this.state.remplie === \"EN_COURS\" ? (\r\n                  <Table\r\n                    rowClassName=\"editable-row\"\r\n                    columns={this.columns}\r\n                    dataSource={this.state.data}\r\n                    pagination={false}\r\n                  />\r\n                ) : (\r\n                  <Table\r\n                    rowClassName=\"editable-row\"\r\n                    columns={this.columns1}\r\n                    dataSource={this.state.data}\r\n                    pagination={false}\r\n                  />\r\n                )}\r\n                {this.state.add ? (\r\n                  <div>\r\n                    <Col span={24}>\r\n                      <Divider orientation=\"left\">Données sinistre</Divider>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                      <Form onSubmit={this.handleSubmit}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"Date création\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"dateCreation\")(\r\n                              <DatePicker\r\n                                format=\"DD-MM-YYYY\"\r\n                                style={{ width: \"100%\" }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"N° de sinistre\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"numeroSinistre\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Date déclaration sinistre\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"dateDeclarationSinistre\")(\r\n                              <DatePicker\r\n                                format=\"DD-MM-YYYY\"\r\n                                style={{ width: \"100%\" }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Exclusion\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"exclusion\")(\r\n                              <Select placeholder=\"Selectionnez ...\">\r\n                                {this.state.exclusions.map(element => {\r\n                                  return (\r\n                                    <Option\r\n                                      key={element.id}\r\n                                      value={element.id}\r\n                                      label={element.exclusionNom}\r\n                                    >\r\n                                      {element.exclusionNom}\r\n                                    </Option>\r\n                                  );\r\n                                })}\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Durée avant survenance\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"dureeSurvenance\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Montant à régler\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"montantRegler\")(\r\n                              <Input\r\n                                placeholder=\"0.00 \"\r\n                                className=\"not-rounded\"\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Taux d'invalidité\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"tauxInvalidite\")(\r\n                              <Input\r\n                                placeholder=\"0.00 \"\r\n                                className=\"not-rounded\"\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Réglement partiel\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"reglementPartiel\", {\r\n                              initialValue: \"Non\"\r\n                            })(\r\n                              <Select placeholder=\"Séléctionnez \">\r\n                                <Option value=\"Oui\" label=\"oui\">\r\n                                  Oui\r\n                                </Option>\r\n                                <Option value=\"Non\" label=\"non\">\r\n                                  Non\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Bénéficiaire\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"beneficiaire\")(\r\n                              <Select placeholder=\"Selectionnez ...\">\r\n                                <Option\r\n                                  value={beneficiaire.id}\r\n                                  label={beneficiaire.libelle}\r\n                                >\r\n                                  {beneficiaire.libelle}\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item\r\n                            label=\"Type de sinistre\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"typeSinistre\", {\r\n                              initialValue: \"Décès\"\r\n                            })(\r\n                              <Select placeholder=\"Séléctionnez \">\r\n                                <Option value=\"Décès\" label=\"deces\">\r\n                                  Décès\r\n                                </Option>\r\n                                <Option\r\n                                  value=\"INVALIDITE TOTALE ET DEFINITIVE\"\r\n                                  label=\"ITD\"\r\n                                >\r\n                                  INVALIDITE TOTALE ET DEFINITIVE\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Date de survenanve sinistre\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"dateSurvenance\")(\r\n                              <DatePicker\r\n                                format=\"DD-MM-YYYY\"\r\n                                style={{ width: \"100%\" }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Cause sinistre\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"causeSinistre\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Durée avant déclaration\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"dureeDeclaration\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"CRD\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"crd\")(\r\n                              <Input\r\n                                placeholder=\"0.00 \"\r\n                                className=\"not-rounded\"\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Nombre d'écheances impayées\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"nbrEcheanceImpayees\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Mode de réglement\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"modeReglement\", {\r\n                              initialValue: \"Virement\"\r\n                            })(\r\n                              <Select placeholder=\"Séléctionnez \">\r\n                                <Option value=\"Virement\" label=\"virement\">\r\n                                  Virement\r\n                                </Option>\r\n                                <Option value=\"Chèque\" label=\"cheque\">\r\n                                  Chéque\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"N° Compte\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"numeroCompte\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Agence bancaire\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"agenceBancaire\", {\r\n                              valuePropName: \"unchecked\",\r\n                              initialValue: false\r\n                            })(\r\n                              <Radio.Group\r\n                                buttonStyle=\"solid\"\r\n                                defaultValue={true}\r\n                                onChange={this.onChanged}\r\n                              >\r\n                                <Radio.Button value={true}>Oui</Radio.Button>\r\n                                <Radio.Button value={false}>Non</Radio.Button>\r\n                              </Radio.Group>\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={24}>\r\n                          <Divider orientation=\"left\">\r\n                            Pièces justificatives\r\n                          </Divider>\r\n                        </Col>\r\n                        <table id=\"customers\">\r\n                          <tr>\r\n                            <th>Libelle</th>\r\n                            <th>A fournir</th>\r\n                            <th>O/F</th>\r\n                            <th>Reçu</th>\r\n                            <th>Date réception</th>\r\n                          </tr>\r\n                          {this.state.pieceJointe.map(element => {\r\n                            return (\r\n                              <tr key={element.id}>\r\n                                <td>\r\n                                  <Form.Item>\r\n                                    {\" \"}\r\n                                    {getFieldDecorator(\"libelle\")(\r\n                                      <label>{element.libelle}</label>\r\n                                    )}\r\n                                  </Form.Item>\r\n                                </td>\r\n                                <td>\r\n                                  <Form.Item>\r\n                                    {\" \"}\r\n                                    {getFieldDecorator(\"fournir\")(<Checkbox />)}\r\n                                  </Form.Item>\r\n                                </td>\r\n                                <td>\r\n                                  <Form.Item>\r\n                                    {\" \"}\r\n                                    {getFieldDecorator(\"o/f\")(<label></label>)}\r\n                                  </Form.Item>\r\n                                </td>\r\n                                <td>\r\n                                  <Form.Item>\r\n                                    {\" \"}\r\n                                    {getFieldDecorator(\"reçu\")(<Checkbox />)}\r\n                                  </Form.Item>\r\n                                </td>\r\n                                <td>\r\n                                  <Form.Item>\r\n                                    {\" \"}\r\n                                    {getFieldDecorator(\"dateReception\")(\r\n                                      <DatePicker\r\n                                        format=\"DD-MM-YYYY\"\r\n                                        style={{ width: \"100%\" }}\r\n                                      />\r\n                                    )}\r\n                                  </Form.Item>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </table>\r\n                        <Col span={14}>\r\n                          <Form.Item label=\"Commentaire\">\r\n                            {getFieldDecorator(\"commentaire\")(\r\n                              <TextArea\r\n                                placeholder=\"Commentaire\"\r\n                                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={4} offset={21}>\r\n                          <Form.Item>\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              className=\"not-rounded\"\r\n                            >\r\n                              <Icon type=\"save\" />\r\n                              Enregistrer\r\n                            </Button>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Form>\r\n                    </Col>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Sinistre);\r\n","import \"antd/dist/antd.css\";\r\nimport { Button, Card, Drawer } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"./ConsultDecesContrat\";\r\nimport Avenants from \"./DetailsTabs/Avenants\";\r\nimport Contrats from \"./DetailsTabs/Contrats\";\r\nimport General from \"./DetailsTabs/General\";\r\nimport Produits from \"./DetailsTabs/Produits\";\r\nimport Sinistre from \"./DetailsTabs/Sinistre\";\r\n\r\nconst tabListNoTitle = [\r\n  {\r\n    key: \"general\",\r\n    tab: \"Général\"\r\n  },\r\n  {\r\n    key: \"contrat\",\r\n    tab: \"Contrat\"\r\n  },\r\n  {\r\n    key: \"produit\",\r\n    tab: \"Produit\"\r\n  },\r\n  {\r\n    key: \"avenant\",\r\n    tab: \"Avenant(s)\"\r\n  },\r\n  {\r\n    key: \"sinistre\",\r\n    tab: \"Sinistre\"\r\n  }\r\n];\r\n\r\nclass DetailsContrat extends Component {\r\n  state = {\r\n    key: \"general\",\r\n    noTitleKey: \"general\",\r\n    visible: false\r\n  };\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n  contentListNoTitle = {\r\n    general: <General />,\r\n    contrat: <Contrats />,\r\n    produit: <Produits />,\r\n    avenant: <Avenants />,\r\n    sinistre: <Sinistre />\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Consumer>\r\n          {context => (\r\n            <React.Fragment>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon=\"edit\"\r\n                size=\"small\"\r\n                onClick={this.showDrawer}\r\n              >\r\n                {context.state.numeroContrat}\r\n              </a>\r\n              <Drawer\r\n                title={\r\n                  <div style={{ fontSize: \"18px\" }}>\r\n                    Détails du Contrat : {context.state.numeroContrat}\r\n                  </div>\r\n                }\r\n                width={1000}\r\n                onClose={this.onClose}\r\n                visible={this.state.visible}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n              >\r\n                <Card\r\n                  tabList={tabListNoTitle}\r\n                  activeTabKey={this.state.noTitleKey}\r\n                  onTabChange={key => {\r\n                    this.onTabChange(key, \"noTitleKey\");\r\n                  }}\r\n                >\r\n                  {this.contentListNoTitle[this.state.noTitleKey]}\r\n                </Card>\r\n                <div className=\"submit-cancel\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    className=\"not-rounded\"\r\n                    onClick={this.onClose}\r\n                  >\r\n                    Fermer\r\n                  </Button>\r\n                </div>\r\n              </Drawer>\r\n            </React.Fragment>\r\n          )}\r\n        </MyContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DetailsContrat;\r\n","import {\r\n  API_BASE_URL,\r\n  ACCESS_TOKEN,\r\n  REQUEST as request,\r\n  UserID\r\n} from \"../../constants/index\";\r\n\r\nexport function createContratDeces(body) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/decescontrat\",\r\n    data: body,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function createContratRetrait(body) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/retraitcontrat\",\r\n    data: body,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function getDecesContrat(status, page, limit, sort, direction) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/decescontrat/status/\" +\r\n      status +\r\n      \"?page=\" +\r\n      page +\r\n      \"&limit=\" +\r\n      limit +\r\n      \"&sort=\" +\r\n      sort +\r\n      \"&direction=\" +\r\n      direction,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getDecesContrats(page, limit, sort, direction) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/decescontrat/\" +\r\n      \"?page=\" +\r\n      page +\r\n      \"&limit=\" +\r\n      limit +\r\n      \"&sort=\" +\r\n      sort +\r\n      \"&direction=\" +\r\n      direction,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getDecesContratsByPartenaire(page, limit, sort, direction) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/decescontrats/\" +\r\n      \"?page=\" +\r\n      page +\r\n      \"&limit=\" +\r\n      limit +\r\n      \"&sort=\" +\r\n      sort +\r\n      \"&direction=\" +\r\n      direction,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getRetraiteContrat(status, page, limit) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/retraitcontrat?sort=id&direction=asc&page=\" +\r\n      page +\r\n      \"&limit=\" +\r\n      limit,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function searchContrat(page, limit, searchby, searchfor) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/contrat/search?page=\" +\r\n      page +\r\n      \"&limit=\" +\r\n      limit +\r\n      \"&by=\" +\r\n      searchby +\r\n      \"&for=\" +\r\n      searchfor,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function searchRetraitContrat(page, limit, searchby, searchfor) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/retraitcontrat/search?page=\" +\r\n      page +\r\n      \"&limit=\" +\r\n      limit +\r\n      \"&by=\" +\r\n      searchby +\r\n      \"&for=\" +\r\n      searchfor,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function addContratMrb(model) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/contratMrb\",\r\n    data: model,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function getAllContratMrb() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/contratMrbs?page=0&sort=numeroContrat&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updateDecesContratStatus(id, updatedStatus) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/decescontratStatus/\" + id,\r\n    data: updatedStatus,\r\n    method: \"PUT\"\r\n  });\r\n}\r\nexport function updateRetraiteContratStatus(id, updatedStatus) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  } else {\r\n    return request({\r\n      url: API_BASE_URL + \"/private/decescontratStatus/\" + id,\r\n      data: updatedStatus,\r\n      method: \"PUT\"\r\n    });\r\n  }\r\n}\r\nexport function searchContratMrb(page, limit, searchby, searchfor) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/contratMrb/search?page=\" +\r\n      page +\r\n      \"&limit=\" +\r\n      limit +\r\n      \"&by=\" +\r\n      searchby +\r\n      \"&for=\" +\r\n      searchfor,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getPeriodicite() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/periodicite?page=0&sort=libelle&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function addBeneficiaire(beneficiareResponseModel) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/beneficiaireendeces\",\r\n    data: beneficiareResponseModel,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function editBeneficiaire(id, beneficiareToUpdate) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/beneficiaireendeces/\" + id,\r\n    data: beneficiareToUpdate,\r\n    method: \"PUT\"\r\n  });\r\n}\r\nexport function getBeneficiaireById(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/beneficiaireendeces/\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function updateContartDeces(id, changementCapitaleDureeUpdateModel) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/decescontrat/\" + id,\r\n    method: \"PUT\",\r\n    data: changementCapitaleDureeUpdateModel\r\n  });\r\n}\r\nexport function getBConditionGenerale() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/conditionGeneral/pdf\",\r\n    method: \"GET\",\r\n    responseType: \"blob\"\r\n  });\r\n}\r\n\r\nexport function getConsumeDataByCodeClientOrRefDossier(refDossierOrCodeClient) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/consumeData/refDossier?ref=\" +\r\n      refDossierOrCodeClient,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getDataFromBankingWebService(partenaireCode, refDossier) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/getDataByPartenaire?partenaireCode=\" +\r\n      partenaireCode +\r\n      \"&referenceDossier=\" +\r\n      refDossier,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getProduitByCode(codeProduit) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/produitByCode?code=\" + codeProduit,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getTypePersonneMoraleByLibelle(libelle) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/typePersonneMoraleByLibelle?libelle=\" + libelle,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getSecteurActiviteByLibelle(libelle) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/secteurByLibelle?libelle=\" + libelle,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getTypePersonneMoralByLibelle(libelle) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/typePersonneMoraleByLibelle?libelle=\" + libelle,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getPeriodiciteByAbreviation(abbreviation) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/periodiciteByAbb?abreviation=\" + abbreviation,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function cpMrb(cpModel) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/cpMrb/pdf\",\r\n    method: \"POST\",\r\n    data: cpModel,\r\n    responseType: \"blob\"\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Select,\r\n  InputNumber,\r\n  Button,\r\n  Descriptions,\r\n  notification,\r\n  AutoComplete\r\n} from \"antd\";\r\nimport { getVois } from \"../../Participants/ParticipantAPI\";\r\nimport { getAllVille } from \"../../../util/VillesAPI\";\r\n\r\nconst { Option } = Select;\r\nclass ChangementAdresse extends Component {\r\n  state = {\r\n    vois: [],\r\n    villes: []\r\n  };\r\n  async componentDidMount() {\r\n    let voisResponce = await getVois();\r\n    this.getAllVilles();\r\n    this.setState({ vois: [...voisResponce.data] });\r\n  }\r\n\r\n  async getAllVilles() {\r\n    let responseVille = await getAllVille();\r\n    let helpArray = [];\r\n    responseVille.data.forEach(element => {\r\n      const object = element.name;\r\n      helpArray.push(object);\r\n    });\r\n    this.setState({ villes: helpArray });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log(values);\r\n      if (!err) {\r\n        const key = `open${Date.now()}`;\r\n        const btn = (\r\n          <div>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleConfirm(values, key)}\r\n              className=\"not-rounded\"\r\n            >\r\n              Confirmer\r\n            </Button>\r\n            <Button\r\n              onClick={() => notification.close(key)}\r\n              style={{ marginLeft: 8 }}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>\r\n          </div>\r\n        );\r\n        notification.info({\r\n          message: \"Confirmation\",\r\n          description: (\r\n            <div>\r\n              <Divider />\r\n              <Descriptions bordered>\r\n                <Descriptions.Item label=\"Pays\">\r\n                  {values.adressPays}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Ville\">\r\n                  {values.adressVille.label}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Voie\">\r\n                  {values.adressVois}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Code Postal\">\r\n                  {values.adressCodePostal}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Numéro\">\r\n                  {values.adressNumero}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Complément d'adresse\">\r\n                  {values.adressComplement}\r\n                </Descriptions.Item>\r\n              </Descriptions>\r\n            </div>\r\n          ),\r\n          btn,\r\n          key,\r\n          style: {\r\n            width: 880,\r\n            marginLeft: 335 - 1280\r\n          },\r\n          duration: 0\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirm = (values, keyn) => {\r\n    this.props.saveRequest(values);\r\n    notification.close(keyn);\r\n\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirm\r\n      </Button>\r\n    );\r\n    notification.info({\r\n      message: \"confirmation\",\r\n      description: \"l'avenant vien d'etre ajoute au contrat\",\r\n      btn,\r\n      duration: 0,\r\n      key\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const adresse = this.props.adresse;\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n        <Row gutter={16}>\r\n          <Col span={24}>\r\n            <h4>Adresse :</h4>\r\n            <Divider></Divider>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Pays\">\r\n              {getFieldDecorator(\"adressPays\", {\r\n                rules: [{ required: true, message: \"selecte un pays\" }]\r\n              })(<Input placeholder=\"pays\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Ville\">\r\n              {getFieldDecorator(\"adressVille\", {\r\n                rules: [{ required: true, message: \"selecte une ville\" }]\r\n              })(\r\n                <AutoComplete\r\n                  size=\"default\"\r\n                  dataSource={this.state.villes}\r\n                  onSelect={this.onChangeVille}\r\n                  allowClear={false}\r\n                  labelInValue\r\n                  placeholder=\"ajouter une ville\"\r\n                  filterOption={(inputValue, option) =>\r\n                    option.props.children\r\n                      .toUpperCase()\r\n                      .indexOf(inputValue.toUpperCase()) !== -1\r\n                  }\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Voie\">\r\n              {getFieldDecorator(\"adressVois\", {\r\n                rules: [{ required: true, message: \"selecte une vois\" }]\r\n              })(\r\n                <Select placeholder=\"Voie\">\r\n                  {this.state.vois.map(element => {\r\n                    return (\r\n                      <Option key={element.id} value={element.value}>\r\n                        {element.name}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Code Postal\">\r\n              {getFieldDecorator(\"adressCodePostal\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide !\"\r\n                  }\r\n                ]\r\n              })(\r\n                <InputNumber\r\n                  className=\"not-rounded\"\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"entrez le Code Postal\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={16}>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Numéro\">\r\n              {getFieldDecorator(\"adressNumero\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide !\"\r\n                  }\r\n                ]\r\n              })(\r\n                <InputNumber\r\n                  className=\"not-rounded\"\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"entrez le Numero\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={12}>\r\n            <Form.Item label=\"Complément d'adresse\">\r\n              {getFieldDecorator(\"adressComplement\")(\r\n                <Input\r\n                  className=\"not-rounded\"\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"entrez le un complément\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row gutter={16}>\r\n          <Col span={24}>\r\n            <Form.Item label=\"Adresse Complete\">\r\n              {getFieldDecorator(\"adressComplete\")(\r\n                <Input className=\"not-rounded\" style={{ width: \"100%\" }} />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Button\r\n          key=\"submit\"\r\n          type=\"primary\"\r\n          onClick={this.handleSubmit}\r\n          className=\"not-rounded\"\r\n        >\r\n          Ajouter\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(ChangementAdresse);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Select,\r\n  DatePicker,\r\n  InputNumber,\r\n  Button,\r\n  Descriptions,\r\n  notification\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { getTarification } from \"../../Parametrage/ProduitDeces/ProduitDecesAPI\";\r\n\r\nconst { Option } = Select;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nvar typeProduit = \"\";\r\n\r\nclass ChangementCapitaleEtDuree extends Component {\r\n  state = {\r\n    dateCreation: new Date(),\r\n    tarification: {},\r\n    tauxTaxe: this.props.record.produit.taxe,\r\n    montantTaxe: this.props.record.montantTaxe,\r\n    tauxSurprime: this.props.record.tauxSurprime,\r\n    tauxReduction: this.props.record.tauxReduction,\r\n    prorata: this.props.record.prorata,\r\n    differe: this.props.record.differe,\r\n    capital: this.props.record.capitalAssure,\r\n    duree: this.props.record.dureeContrat,\r\n    montantSurprime: this.props.record.montantSurprime,\r\n    montantCotisation: this.props.record.montantCotisation\r\n  };\r\n  async componentDidMount() {\r\n    this.props.form.setFieldsValue({\r\n      differe: this.props.record.differe,\r\n      capitalAssure: this.props.record.capitalAssure,\r\n      tauxReduction: this.props.record.tauxReduction,\r\n      tauxSurprime: this.props.record.tauxSurprime,\r\n      duree: this.props.record.dureeContrat,\r\n      montantCotisation: this.props.record.montantCotisation,\r\n      prorata: this.props.record.prorata,\r\n      montantTaxe: this.props.record.montantTaxe,\r\n      montantSurprime: this.props.record.montantSurprime\r\n    });\r\n  }\r\n  componentDidUpdate(_, prevState) {\r\n    const effetMonth = moment(this.props.record.dateEffet).format(\"M\");\r\n    const effet = moment(this.props.record.dateEffet).format(\"D\");\r\n    if (\r\n      prevState.differe !== this.state.differe ||\r\n      prevState.capital !== this.state.capital\r\n    ) {\r\n      if (\r\n        this.state.capital !== \"\" &&\r\n        this.state.differe !== \"\" &&\r\n        this.state.differe !== null &&\r\n        this.state.capital !== null\r\n      )\r\n        this.getTariffication(this.state.capital, this.state.differe);\r\n    }\r\n    if (\r\n      prevState.tarification !== this.state.tarification &&\r\n      typeProduit === \"taux\"\r\n    ) {\r\n      const capital = this.props.form.getFieldValue(\"capitalAssure\");\r\n      const montantC = (this.state.tarification.taux * capital) / 100;\r\n      this.setState({\r\n        montantCotisation: (this.state.tarification.taux * capital) / 100\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        montantCotisation: (this.state.tarification.taux * capital) / 100\r\n      });\r\n      const montantS = (this.state.tauxSurprime * montantC) / 100;\r\n      this.props.form.setFieldsValue({\r\n        montantSurprime: (this.state.tauxSurprime * montantC) / 100\r\n      });\r\n      this.setState({\r\n        montantSurprime: (this.state.tauxSurprime * montantC) / 100\r\n      });\r\n      if (\r\n        prevState.montantSurprime !== this.state.montantSurprime ||\r\n        this.state.montantCotisation !== prevState.montantCotisation\r\n      ) {\r\n        if (\r\n          this.state.montantSurprime !== null &&\r\n          this.state.montantCotisation !== null\r\n        ) {\r\n          this.props.form.setFieldsValue({\r\n            cotisationTotale: montantS + montantC\r\n          });\r\n          this.setState({\r\n            cotisationTotale: montantS + montantC\r\n          });\r\n        }\r\n      }\r\n    } else if (\r\n      prevState.tarification !== this.state.tarification &&\r\n      typeProduit === \"forfait\"\r\n    ) {\r\n      const montantC = this.state.tarification.forfait;\r\n      this.setState({ montantCotisation: this.state.tarification.forfait });\r\n      this.props.form.setFieldsValue({\r\n        montantCotisation: this.state.tarification.forfait\r\n      });\r\n      const montantS = (this.state.tauxSurprime * montantC) / 100;\r\n      this.props.form.setFieldsValue({\r\n        montantSurprime: (this.state.tauxSurprime * montantC) / 100\r\n      });\r\n      this.setState({\r\n        montantSurprime: (this.state.tauxSurprime * montantC) / 100\r\n      });\r\n      if (\r\n        prevState.montantSurprime !== this.state.montantSurprime ||\r\n        this.state.montantCotisation !== prevState.montantCotisation\r\n      ) {\r\n        if (\r\n          this.state.montantSurprime !== null &&\r\n          this.state.montantCotisation !== null\r\n        ) {\r\n          this.props.form.setFieldsValue({\r\n            cotisationTotale: montantS + montantC\r\n          });\r\n          this.setState({\r\n            cotisationTotale: montantS + montantC\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (prevState.cotisationTotale !== this.state.cotisationTotale) {\r\n      if (\r\n        this.state.cotisationTotale !== null &&\r\n        this.state.record.periodicite.libelle !== \"Unique\"\r\n      ) {\r\n        if (effet <= 15) {\r\n          this.props.form.setFieldsValue({\r\n            prorata: this.state.cotisationTotale * ((13 - effetMonth) / 12)\r\n          });\r\n          this.setState({\r\n            prorata: this.state.cotisationTotale * ((13 - effetMonth) / 12)\r\n          });\r\n        } else {\r\n          this.props.form.setFieldsValue({\r\n            prorata: this.state.cotisationTotale * ((12 - effetMonth) / 12)\r\n          });\r\n          this.setState({\r\n            prorata: this.state.cotisationTotale * ((12 - effetMonth) / 12)\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      prevState.prorata !== this.state.prorata &&\r\n      this.state.tauxTaxe !== null\r\n    ) {\r\n      this.props.form.setFieldsValue({\r\n        montantTaxe: (this.state.prorata * this.state.tauxTaxe) / 100\r\n      });\r\n      this.setState({\r\n        montantTaxe: (this.state.prorata * this.state.tauxTaxe) / 100\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTariffication(capital, differe) {\r\n    const age = moment().diff(\r\n      moment(this.props.record.assure.dateNaissance),\r\n      \"years\"\r\n    );\r\n    const duree = this.state.duree;\r\n    typeProduit = this.props.record.produit.produitType;\r\n    let response = await getTarification(\r\n      duree,\r\n      age,\r\n      capital,\r\n      differe,\r\n      typeProduit,\r\n      this.props.record.produit.id\r\n    );\r\n    this.setState({ tarification: response.data });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const key = `open${Date.now()}`;\r\n        const btn = (\r\n          <div>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => this.handleConfirm(this.state, key)}\r\n              className=\"not-rounded\"\r\n            >\r\n              Confirmer\r\n            </Button>\r\n            <Button\r\n              onClick={() => notification.close(key)}\r\n              style={{ marginLeft: 8 }}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>\r\n          </div>\r\n        );\r\n        notification.info({\r\n          message: \"Confirmation\",\r\n          description: (\r\n            <div>\r\n              <Divider />\r\n              <Descriptions bordered>\r\n                <Descriptions.Item label=\"Montant cotisation\">\r\n                  {this.state.montantCotisation}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Montant surprime\" span={2}>\r\n                  {this.state.montantSurprime}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Montant proratisé\">\r\n                  {this.state.prorata}\r\n                </Descriptions.Item>\r\n                <Descriptions.Item label=\"Montant taxe\" span={2}>\r\n                  {this.state.montantTaxe}\r\n                </Descriptions.Item>\r\n              </Descriptions>\r\n            </div>\r\n          ),\r\n          btn,\r\n          key,\r\n          style: {\r\n            width: 880,\r\n            marginLeft: 335 - 1280\r\n          },\r\n          duration: 0\r\n        });\r\n      }\r\n    });\r\n  };\r\n  handleConfirm = (values, keyn) => {\r\n    this.props.saveRequest(values);\r\n    notification.close(keyn);\r\n\r\n    const key = `open${Date.now()}`;\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => notification.close(key)}\r\n      >\r\n        Confirm\r\n      </Button>\r\n    );\r\n    notification.success({\r\n      message: \"confirmation\",\r\n      description: \"l'avenant vien d'etre ajoute au contrat\",\r\n      btn,\r\n      duration: 0,\r\n      key\r\n    });\r\n  };\r\n\r\n  onChangeDiffere = value => {\r\n    this.setState({ differe: value });\r\n  };\r\n\r\n  onChangeCapital = e => {\r\n    this.setState({ capital: e.target.value });\r\n  };\r\n\r\n  onChangeDuree = e => {\r\n    this.setState({ duree: e.target.value });\r\n  };\r\n\r\n  onChangeTauxS = e => {\r\n    this.setState({ tauxSurprime: e.target.value });\r\n  };\r\n\r\n  onChangeTauxReduction = e => {\r\n    this.setState({ tauxReduction: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Form>\r\n        <h3> Détail d&apos;avenant</h3>\r\n        <Divider />\r\n        <Row>\r\n          <Col span={11}>\r\n            <Form.Item label=\"Date création\">\r\n              {getFieldDecorator(\"dateCreation\", {\r\n                initialValue: moment(this.state.dateCreation, dateFormat)\r\n              })(<DatePicker format={dateFormat} disabled />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={11} offset={1}>\r\n            <Form.Item label=\"N° Avenant\">\r\n              {getFieldDecorator(\"numeroAvenant\")(\r\n                <Input className=\"not-rounded\" disabled />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={11}>\r\n            <Form.Item label=\"Différé\">\r\n              {getFieldDecorator(\"differe\")(\r\n                <InputNumber\r\n                  className=\"not-rounded\"\r\n                  onChange={this.onChangeDiffere}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={11} offset={1}>\r\n            <Form.Item label=\"Taux de réduction\">\r\n              {getFieldDecorator(\"tauxReduction\")(\r\n                <Input\r\n                  className=\"not-rounded\"\r\n                  onChange={this.onChangeTauxReduction}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={11}>\r\n            <Form.Item label=\"Capital assuré\">\r\n              {getFieldDecorator(\"capitalAssure\")(\r\n                <Input\r\n                  className=\"not-rounded\"\r\n                  onChange={this.onChangeCapital}\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={11} offset={1}>\r\n            <Form.Item label=\"Durée\">\r\n              {getFieldDecorator(\"duree\")(\r\n                <Input className=\"not-rounded\" onChange={this.onChangeDuree} />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={11}>\r\n            <Form.Item label=\"Date effet avenant\">\r\n              {getFieldDecorator(\"dateEffetAvenant\", {\r\n                initialValue: moment(this.state.dateCreation, dateFormat)\r\n              })(<DatePicker format={dateFormat} />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={11} offset={1}>\r\n            <Form.Item label=\"Taux de surprime\">\r\n              {getFieldDecorator(\"tauxSurprime\")(\r\n                <Input className=\"not-rounded\" onChange={this.onChangeTauxS} />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Button\r\n          key=\"submit\"\r\n          type=\"primary\"\r\n          onClick={this.handleSubmit}\r\n          className=\"not-rounded\"\r\n        >\r\n          Ajouter\r\n        </Button>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(ChangementCapitaleEtDuree);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Descriptions,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table,\r\n  Tag\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  NOM_ASSURE,\r\n  CIN_ASSURE,\r\n  NUM_CONTRAT,\r\n  AVN_PERIODICITE,\r\n  AVN_ADRESSE,\r\n  AVN_BENEFICIAIRE,\r\n  AVN_CHANGEMENT_CAPITAL_DURE\r\n} from \"../../constants/index\";\r\nimport DetailsContrat from \"./DetailsContrat\";\r\nimport ComponentTitle from \"../../util/Title/ComponentTitle\";\r\nimport { getTarification } from \"../Parametrage/ProduitDeces/ProduitDecesAPI\";\r\nimport {\r\n  addAvenant,\r\n  ajouterAvenant,\r\n  getTypeAvenant\r\n} from \"../Parametrage/avenant/AvenantAPI\";\r\nimport {\r\n  updatePersonnePhysique,\r\n  updatePersonneMorale\r\n} from \"../Participants/ParticipantAPI\";\r\nimport {\r\n  getDecesContratsByPartenaire,\r\n  getDecesContrats,\r\n  getDecesContrat,\r\n  searchContrat,\r\n  updateDecesContratStatus,\r\n  updateContartDeces,\r\n  getBConditionGenerale\r\n} from \"./ContratsAPI\";\r\n\r\nimport { conditionParticulier } from \"../Production Prestations/Souscription/SouscriptionAPI\";\r\nimport { getColumnSearchProps } from \"../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nimport { ajoutSinistre } from \"./DetailsTabs/SinistreAPI\";\r\n\r\nimport ChangementAdresse from \"./Avenant/ChangementAdresse\";\r\nimport ChangementCapitaleEtDuree from \"./Avenant/ChangementCapitaleEtDuree\";\r\n\r\nexport const MyContext = React.createContext();\r\nvar statuts = \"ACCEPTED\";\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nvar typeProduit = \"\";\r\nlet dateCP = new Date();\r\nclass ConsultDecesContrat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: [],\r\n      Avenantchoisi: \"\",\r\n      TypeAvenant: null,\r\n      AdressChangementVisibilty: false,\r\n      modelShow: false,\r\n      visible: false,\r\n      visibled: false,\r\n      show: false,\r\n      avenantCapital: false,\r\n      avenantContrat: false,\r\n      showed: false,\r\n      sinistre: false,\r\n      view: false,\r\n      restitution: false,\r\n      dateCreation: new Date(),\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      selectedRowKeys: [],\r\n      searchby: NUM_CONTRAT,\r\n      searchfor: \"\",\r\n      selectedFile: null,\r\n      record: {},\r\n      contrats: [],\r\n      totalItems: 0,\r\n      pagenumber: 1,\r\n      value: \"\",\r\n      differe: null,\r\n      dateEcheance: \"\",\r\n      duree: null,\r\n      keyRecord: \"\",\r\n      capital: null,\r\n      tauxSurprime: null,\r\n      tauxReduction: null,\r\n      tauxTaxe: null,\r\n      tarification: {},\r\n      montantSurprime: null,\r\n      montantCotisation: null,\r\n      cotisationTotale: null,\r\n      montantTaxe: null,\r\n      prorata: null,\r\n      typesAvenant: []\r\n    };\r\n\r\n    this.columns = [\r\n      {\r\n        title: \"N° de Contrat\",\r\n        dataIndex: NUM_CONTRAT,\r\n        key: \"idContrat\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <div>\r\n                <MyContext.Provider\r\n                  value={{\r\n                    state: record\r\n                  }}\r\n                >\r\n                  <DetailsContrat />\r\n                </MyContext.Provider>\r\n              </div>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Durée Contrat\",\r\n        dataIndex: \"dureeContrat\",\r\n        key: \"dureeContrat\",\r\n        ...getColumnSearchProps(\"dureeContrat\", \"Durée contrat\", this)\r\n      },\r\n      {\r\n        title: \"CIN assuré\",\r\n        dataIndex: \"assure.cin\",\r\n        key: \"cinAssure\"\r\n      },\r\n      {\r\n        title: \"Nom assuré\",\r\n        dataIndex: \"assure.nom\",\r\n        key: \"nomAssure\",\r\n        ...getColumnSearchProps(\"assure.nom\", \"Prénom assure\", this)\r\n      },\r\n      {\r\n        title: \"Prénom assuré\",\r\n        dataIndex: \"assure.prenom\",\r\n        key: \"prenomAssure\"\r\n      },\r\n      {\r\n        title: \"Nom souscripteur\",\r\n        dataIndex: \"souscripteur.nom\",\r\n        key: \"nomSouscripteur\",\r\n        ...getColumnSearchProps(\"souscripteur.nom\", \"Prénom assure\", this)\r\n      },\r\n      {\r\n        title: \"Prénom souscripteur\",\r\n        dataIndex: \"souscripteur.prenom\",\r\n        key: \"prenomSouscripteur\"\r\n      },\r\n\r\n      {\r\n        title: \"Date d'effet\",\r\n        dataIndex: \"dateEffet\",\r\n        width: \"10%\",\r\n        key: \"dateEffet\"\r\n      },\r\n      {\r\n        title: \"Date écheance\",\r\n        dataIndex: \"dateEcheance\",\r\n        width: \"10%\",\r\n        key: \"dateEcheance\"\r\n      },\r\n      {\r\n        title: \"Produit\",\r\n        dataIndex: \"produit.libelle\",\r\n        key: \"produit\"\r\n      },\r\n      {\r\n        title: \"Status\",\r\n        key: \"status\",\r\n        dataIndex: \"status\",\r\n        render: status => (\r\n          <span>\r\n            {status === \"ACCEPTED\" ? (\r\n              <Tag color=\"green\" key={status}>\r\n                ACCEPTE\r\n              </Tag>\r\n            ) : (\r\n              <Tag color=\"volcano\" key={status}>\r\n                {status}\r\n              </Tag>\r\n            )}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Montant de financement\",\r\n        dataIndex: \"capitalAssure\",\r\n        key: \"capitalAssure\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        width: \"10%\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleSelectChange(record)}\r\n                size=\"small\"\r\n                style={{\r\n                  borderRadius: \"0px\",\r\n                  width: \"105px\",\r\n                  backgroundColor: \"rgb(236 131 91)\",\r\n                  borderColor: \"rgb(236 131 91)\",\r\n                  textAlign: \"left\",\r\n                  marginBottom: \"2px\"\r\n                }}\r\n              >\r\n                <Icon type=\"plus-circle\" /> Avenant\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleChangePrestation(record)}\r\n                size=\"small\"\r\n                style={{\r\n                  borderRadius: \"0px\",\r\n                  width: \"105px\",\r\n                  backgroundColor: \"#4ee289\",\r\n                  borderColor: \"#4ee289\",\r\n                  textAlign: \"left\"\r\n                }}\r\n              >\r\n                <Icon type=\"plus-circle\" /> Prestation\r\n              </Button>\r\n              <Button\r\n                onClick={this.showModal}\r\n                size=\"small\"\r\n                style={{\r\n                  borderRadius: \"0px\",\r\n                  width: \"105px\",\r\n                  textAlign: \"left\"\r\n                }}\r\n              >\r\n                <Icon type=\"download\" />\r\n                Edition\r\n              </Button>\r\n              <Modal\r\n                visible={this.state.modelShow}\r\n                title=\"EDITION DU CONTRAT\"\r\n                onOk={this.handleOk}\r\n                onCancel={this.Canceled}\r\n                footer={[\r\n                  <Button key=\"back\" onClick={this.handleOk}>\r\n                    Fermer\r\n                  </Button>\r\n                ]}\r\n              >\r\n                <Button\r\n                  key=\"back\"\r\n                  onClick={this.conditionGenerale}\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    textAlign: \"center\",\r\n                    marginLeft: \"40px\",\r\n                    width: \"180px\"\r\n                  }}\r\n                >\r\n                  CONDITIONS GENERALES\r\n                </Button>\r\n\r\n                <Button\r\n                  key=\"submit\"\r\n                  type=\"primary\"\r\n                  onClick={() => this.conditionParticuliere(record)}\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    textAlign: \"center\",\r\n                    marginLeft: \"20px\",\r\n                    width: \"180px\"\r\n                  }}\r\n                >\r\n                  CONDITIONS PARTICULIERES\r\n                </Button>\r\n              </Modal>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  conditionGenerale = () => {\r\n    this.getConditionGenerale();\r\n  };\r\n\r\n  async ajouterUnAvenant(avenant) {\r\n    await ajouterAvenant(avenant);\r\n  }\r\n\r\n  conditionParticuliere = value => {\r\n    var montantTaxe =\r\n      (value.montantCotisation / 100) * value.produit.taxe.toFixed(2);\r\n    var cotisationTotale =\r\n      value.montantSurprime + value.montantCotisation + montantTaxe;\r\n\r\n    let requestCP = {\r\n      //numeroSouscription: value.numeroContrat,\r\n      //dateEffet: moment(value.dateEffet).format(\"DD-MM-YYYY\"),\r\n      //dateEcheance: moment(value.dateEcheance).format(\"DD-MM-YYYY\"),\r\n      //duree: value.dureeContrat,\r\n      agence: value.produit.partenaire.raisonSocial,\r\n      organisme: value.produit.partenaire.typePartenaire,\r\n      adresse: value.pointVente.partenairepv.siegeSocial,\r\n      intermediaire: value.produit.partenaire.typePartenaire,\r\n      numeroAgrement: value.produit.numeroHomologation,\r\n      dateAgrement: value.produit.dateHomologation,\r\n      adresseInter: value.produit.partenaire.siegeSocial,\r\n      participant: value.souscripteur.nom + \" \" + value.souscripteur.prenom,\r\n      telephone: value.souscripteur.numeroDeTelephone,\r\n      registreCommerce: value.souscripteur.cin,\r\n      adresseSouscripteur: value.souscripteur.adressComplete,\r\n      compteBancaire: value.souscripteur.rib,\r\n      assure: value.assure.nom + \" \" + value.assure.prenom,\r\n      cinAssure: value.assure.cin,\r\n      adresseAssure: value.assure.adressComplete,\r\n      telephoneAssure: value.assure.numeroDeTelephone,\r\n      compteAssure: value.assure.rib,\r\n      compteTakaful: value.produit.numeroCompte,\r\n\r\n      dureeContrat: value.dureeContrat,\r\n      //montantFinancement: value.capitalAssure,\r\n      numeroContratFinancement: value.numeroContrat,\r\n      numeroCompte: value.assure.rib,\r\n      dureeMois: value.dureeContrat,\r\n      garantiePaiment: \"true\",\r\n      renouvellement: \"true\",\r\n      garantieInvalidite: \"true\",\r\n      date: moment(dateCP).format(\"DD-MM-YYYY\"),\r\n      montantTTC: cotisationTotale.toFixed(2),\r\n      periodicite: value.periodicite.libelle,\r\n      ageLimiteCouverture: value.produit.ageEcheance,\r\n      ageLimitSouscription: value.produit.ageMaxEligibilite,\r\n      montantAugmentation: value.produit.seuilExaminateur,\r\n      remuneration: value.produit.fraisGestion,\r\n      contributionAnnulle: value.prorata.toFixed(2),\r\n      fraisAcquisition: value.produit.fraisAcquisition,\r\n      seuilVisite: value.produit.seuilExaminateur,\r\n      suspensionActivite: value.suspendreAtiviteDeuxDernierAnneePourquiEtTemps,\r\n      maladieInvalidite: value.quelleMaladieOuInvalidite,\r\n      maladieOuOperation: value.maladiesOuOperationChirurgicale\r\n    };\r\n    this.getConditionParticuliere(requestCP);\r\n  };\r\n\r\n  async getConditionGenerale() {\r\n    let response = await getBConditionGenerale();\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n      this.setState({ modelShow: false });\r\n    }\r\n  }\r\n\r\n  async getConditionParticuliere(body) {\r\n    let response = await conditionParticulier(body);\r\n\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n      this.setState({ modelShow: false });\r\n    }\r\n  }\r\n\r\n  Canceled = () => {\r\n    this.setState({ modelShow: false });\r\n  };\r\n\r\n  handleOk = () => {\r\n    this.setState({ modelShow: false });\r\n  };\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      modelShow: true\r\n    });\r\n  };\r\n\r\n  async getTariffication(capital, differe) {\r\n    const age = moment().diff(\r\n      moment(this.state.record.assure.dateNaissance),\r\n      \"years\"\r\n    );\r\n    const duree = this.state.duree;\r\n    typeProduit = this.state.record.produit.produitType;\r\n    let response = await getTarification(\r\n      duree,\r\n      age,\r\n      capital,\r\n      differe,\r\n      typeProduit,\r\n      this.state.record.produit.id\r\n    );\r\n    this.setState({ tarification: response.data });\r\n  }\r\n\r\n  handleChanged = value => {\r\n    if (value === \"Restitution\") {\r\n      this.setState({ restitution: true, sinistre: false });\r\n    } else if (value === \"Sinistre\") {\r\n      this.setState({ sinistre: true, restitution: false });\r\n    }\r\n  };\r\n\r\n  saveRequest = values => {\r\n    let contrat = this.state.record;\r\n\r\n    switch (this.state.TypeAvenant.code) {\r\n      case AVN_ADRESSE:\r\n        delete values.tarification;\r\n        delete values.dateCreation;\r\n        values.assure = contrat.assure;\r\n        values.assure.adressVille = values.adressVille.label;\r\n        values.assure.adressComplete = values.adressComplete;\r\n        values.assure.adressCodePostal = values.adressCodePostal;\r\n        values.assure.adressPays = values.adressPays;\r\n        values.assure.adressVois = values.AdressVois;\r\n        values.assure.adressComplement = values.Complement;\r\n        values.assure.adressNumero = values.adressNumero;\r\n        delete values.adressVille;\r\n        delete values.adressComplete;\r\n        delete values.adressCodePostal;\r\n        delete values.adressPays;\r\n        delete values.AdressVois;\r\n        delete values.Complement;\r\n        delete values.adressNumero;\r\n\r\n        const avenantUpdateModel = {\r\n          ...values,\r\n          typeAvenantId: this.state.TypeAvenant.id\r\n        };\r\n\r\n        this.updateDecesContratCapitaleDureeChangementAdresse(\r\n          contrat.id,\r\n          avenantUpdateModel\r\n        );\r\n        break;\r\n      case AVN_CHANGEMENT_CAPITAL_DURE:\r\n        delete values.tarification;\r\n        delete values.dateCreation;\r\n        const changementCapitaleDureeUpdateModel = {\r\n          ...values,\r\n          typeAvenantId: this.state.TypeAvenant.id\r\n        };\r\n\r\n        this.updateDecesContratCapitaleDureeChangementAdresse(\r\n          contrat.id,\r\n          changementCapitaleDureeUpdateModel\r\n        );\r\n        break;\r\n    }\r\n  };\r\n\r\n  async updateDecesContratCapitaleDureeChangementAdresse(\r\n    id,\r\n    changementCapitaleDureeUpdateModel\r\n  ) {\r\n    await updateContartDeces(id, changementCapitaleDureeUpdateModel);\r\n  }\r\n\r\n  handleChange = id => {\r\n    let selectedType;\r\n    this.state.typesAvenant.forEach(element => {\r\n      if (element.id === id) {\r\n        this.setState({ TypeAvenant: element });\r\n        selectedType = element.code;\r\n      }\r\n    });\r\n    console.log(selectedType);\r\n    switch (selectedType) {\r\n      case AVN_ADRESSE:\r\n        this.setState({\r\n          Avenantchoisi: <ChangementAdresse saveRequest={this.saveRequest} />\r\n        });\r\n        break;\r\n      case AVN_CHANGEMENT_CAPITAL_DURE:\r\n        this.setState({\r\n          Avenantchoisi: (\r\n            <ChangementCapitaleEtDuree\r\n              saveRequest={this.saveRequest}\r\n              record={this.state.record}\r\n            />\r\n          )\r\n        });\r\n        break;\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getproprties(\r\n      statuts,\r\n      this.state.pagenumber - 1,\r\n      5,\r\n      NUM_CONTRAT,\r\n      \"desc\"\r\n    );\r\n    this.getTypeAvenants();\r\n  }\r\n\r\n  async getproprties(statut, page, limit, sort, direction) {\r\n    let contratsResponse = await getDecesContratsByPartenaire(\r\n      page,\r\n      limit,\r\n      sort,\r\n      direction\r\n    );\r\n    //await getDecesContrats(page, limit, sort, direction);\r\n    //= await getDecesContrat(\r\n    //   statut,\r\n    //   page,\r\n    //   limit,\r\n    //   sort,\r\n    //   direction\r\n    // );\r\n    this.setState({\r\n      contrats: [...contratsResponse.data.content],\r\n      totalItems: contratsResponse.data.totalElements\r\n    });\r\n  }\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({\r\n      visible: true,\r\n      record: value\r\n    });\r\n  };\r\n\r\n  handleChangePrestation = value => {\r\n    this.setState({\r\n      visibled: true,\r\n      dateEcheance: value.dateEcheance,\r\n      keyRecord: value.id\r\n    });\r\n    this.setState({ visibled: true, dateEcheance: value.dateEcheance });\r\n  };\r\n\r\n  handleConfirm = (value, key) => {\r\n    notification.close(key);\r\n    this.updatedContrat(this.state.record.id, value);\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    const effetMonth = moment(this.state.record.dateEffet).format(\"M\");\r\n    const effet = moment(this.state.record.dateEffet).format(\"D\");\r\n    if (\r\n      prevState.differe !== this.state.differe ||\r\n      prevState.capital !== this.state.capital\r\n    ) {\r\n      if (\r\n        this.state.capital !== \"\" &&\r\n        this.state.differe !== \"\" &&\r\n        this.state.differe !== null &&\r\n        this.state.capital !== null\r\n      )\r\n        this.getTariffication(this.state.capital, this.state.differe);\r\n    }\r\n    if (\r\n      prevState.tarification !== this.state.tarification &&\r\n      typeProduit === \"taux\"\r\n    ) {\r\n      const capital = this.props.form.getFieldValue(\"capitalAssure\");\r\n      const montantC = (this.state.tarification.taux * capital) / 100;\r\n      this.setState({\r\n        montantCotisation: (this.state.tarification.taux * capital) / 100\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        montantCotisation: (this.state.tarification.taux * capital) / 100\r\n      });\r\n      const montantS = (this.state.tauxSurprime * montantC) / 100;\r\n      this.props.form.setFieldsValue({\r\n        montantSurprime: (this.state.tauxSurprime * montantC) / 100\r\n      });\r\n      this.setState({\r\n        montantSurprime: (this.state.tauxSurprime * montantC) / 100\r\n      });\r\n      if (\r\n        prevState.montantSurprime !== this.state.montantSurprime ||\r\n        this.state.montantCotisation !== prevState.montantCotisation\r\n      ) {\r\n        if (\r\n          this.state.montantSurprime !== null &&\r\n          this.state.montantCotisation !== null\r\n        ) {\r\n          this.props.form.setFieldsValue({\r\n            cotisationTotale: montantS + montantC\r\n          });\r\n          this.setState({\r\n            cotisationTotale: montantS + montantC\r\n          });\r\n        }\r\n      }\r\n    } else if (\r\n      prevState.tarification !== this.state.tarification &&\r\n      typeProduit === \"forfait\"\r\n    ) {\r\n      const montantC = this.state.tarification.forfait;\r\n      this.setState({ montantCotisation: this.state.tarification.forfait });\r\n      this.props.form.setFieldsValue({\r\n        montantCotisation: this.state.tarification.forfait\r\n      });\r\n      const montantS = (this.state.tauxSurprime * montantC) / 100;\r\n      this.props.form.setFieldsValue({\r\n        montantSurprime: (this.state.tauxSurprime * montantC) / 100\r\n      });\r\n      this.setState({\r\n        montantSurprime: (this.state.tauxSurprime * montantC) / 100\r\n      });\r\n      if (\r\n        prevState.montantSurprime !== this.state.montantSurprime ||\r\n        this.state.montantCotisation !== prevState.montantCotisation\r\n      ) {\r\n        if (\r\n          this.state.montantSurprime !== null &&\r\n          this.state.montantCotisation !== null\r\n        ) {\r\n          this.props.form.setFieldsValue({\r\n            cotisationTotale: montantS + montantC\r\n          });\r\n          this.setState({\r\n            cotisationTotale: montantS + montantC\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (prevState.cotisationTotale !== this.state.cotisationTotale) {\r\n      if (\r\n        this.state.cotisationTotale !== null &&\r\n        this.state.record.periodicite.libelle !== \"Unique\"\r\n      ) {\r\n        if (effet <= 15) {\r\n          this.props.form.setFieldsValue({\r\n            prorata: this.state.cotisationTotale * ((13 - effetMonth) / 12)\r\n          });\r\n          this.setState({\r\n            prorata: this.state.cotisationTotale * ((13 - effetMonth) / 12)\r\n          });\r\n        } else {\r\n          this.props.form.setFieldsValue({\r\n            prorata: this.state.cotisationTotale * ((12 - effetMonth) / 12)\r\n          });\r\n          this.setState({\r\n            prorata: this.state.cotisationTotale * ((12 - effetMonth) / 12)\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      prevState.prorata !== this.state.prorata &&\r\n      this.state.tauxTaxe !== null\r\n    ) {\r\n      this.props.form.setFieldsValue({\r\n        montantTaxe: (this.state.prorata * this.state.tauxTaxe) / 100\r\n      });\r\n      this.setState({\r\n        montantTaxe: (this.state.prorata * this.state.tauxTaxe) / 100\r\n      });\r\n    }\r\n  }\r\n\r\n  async searchContrats(page, limit, searchby, searchfor) {\r\n    let contratResponse = await searchContrat(page, limit, searchby, searchfor);\r\n    if (searchby === CIN_ASSURE || searchby === NOM_ASSURE) {\r\n      this.setState({\r\n        contrats: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.numberOfElements\r\n      });\r\n    } else if (searchby === NUM_CONTRAT) {\r\n      this.setState({\r\n        contrats: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.totalElements\r\n      });\r\n    }\r\n  }\r\n  async getTypeAvenants() {\r\n    let response = await getTypeAvenant();\r\n    this.setState({\r\n      typesAvenant: response.data.content\r\n    });\r\n  }\r\n\r\n  onChangeCapital = e => {\r\n    this.setState({ capital: e.target.value });\r\n  };\r\n\r\n  onChangeDuree = e => {\r\n    this.setState({ duree: e.target.value });\r\n  };\r\n\r\n  onChangeTauxS = e => {\r\n    this.setState({ tauxSurprime: e.target.value });\r\n  };\r\n\r\n  onChangeTauxReduction = e => {\r\n    this.setState({ tauxReduction: e.target.value });\r\n  };\r\n\r\n  onPaginationChange = (pagenumber, pagesize) => {\r\n    if (this.state.searchfor === \"\")\r\n      this.getproprties(statuts, pagenumber - 1, 5, NUM_CONTRAT, \"desc\");\r\n    else {\r\n      this.searchContrats(\r\n        pagenumber - 1,\r\n        5,\r\n        this.state.searchby,\r\n        this.state.searchfor\r\n      );\r\n    }\r\n  };\r\n\r\n  selectBefore = (\r\n    <Select\r\n      onChange={value => this.setState({ searchby: value })}\r\n      defaultValue={NUM_CONTRAT}\r\n      style={{ width: 150 }}\r\n    >\r\n      <Option value={NUM_CONTRAT}>N° de contrat</Option>\r\n      <Option value={CIN_ASSURE}>CIN</Option>\r\n      <Option value={NOM_ASSURE}>Nom Assuré</Option>\r\n    </Select>\r\n  );\r\n\r\n  search = value => {\r\n    this.setState({ pagenumber: 1, searchfor: value });\r\n    this.searchContrats(\r\n      this.state.pagenumber - 1,\r\n      2,\r\n      this.state.searchby,\r\n      value\r\n    );\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.form.setFieldsValue({\r\n      avenants: \"\"\r\n    });\r\n    this.setState({ show: false, view: false });\r\n  };\r\n\r\n  handleClosed = () => {\r\n    this.setState({ showed: false, sinistre: false, restitution: false });\r\n  };\r\n\r\n  handleCanceled = () => {\r\n    this.props.form.setFieldsValue({\r\n      typePrestation: \" Séléctionnez \"\r\n    });\r\n    this.setState({ visibled: false });\r\n  };\r\n\r\n  async updatedContrat(id, body) {\r\n    await addAvenant(id, body);\r\n  }\r\n  async updatedContratStatus(id, body) {\r\n    await updateDecesContratStatus(id, body);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if (this.state.avenantCapital) {\r\n          let request = {\r\n            capital: values.capitalAssure,\r\n            duree: values.duree,\r\n            differe: values.differe,\r\n            montantCotisation: values.montantCotisation,\r\n            montantSurprime: values.montantSurprime,\r\n            montantTaxe: values.montantTaxe,\r\n            prorata: values.prorata,\r\n            tauxReduction: values.tauxReduction,\r\n            tauxSurprime: values.tauxSurprime,\r\n            typeAvenantId: values.avenants\r\n          };\r\n          const key = `open${Date.now()}`;\r\n          const btn = (\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleConfirm(request, key)}\r\n                className=\"not-rounded\"\r\n              >\r\n                Confirmer\r\n              </Button>\r\n              <Button\r\n                onClick={() => notification.close(key)}\r\n                style={{ marginLeft: 8 }}\r\n                className=\"not-rounded\"\r\n              >\r\n                Fermer\r\n              </Button>\r\n            </div>\r\n          );\r\n          notification.info({\r\n            message: \"Confirmation\",\r\n            description: (\r\n              <div>\r\n                <Divider />\r\n                <Descriptions bordered>\r\n                  <Descriptions.Item label=\"Montant cotisation\">\r\n                    {values.montantCotisation}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Montant surprime\" span={2}>\r\n                    {values.montantSurprime}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Montant proratisé\">\r\n                    {values.prorata}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Montant taxe\" span={2}>\r\n                    {values.montantTaxe}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n              </div>\r\n            ),\r\n            btn,\r\n            key,\r\n            style: {\r\n              width: 880,\r\n              marginLeft: 335 - 1280\r\n            },\r\n            duration: 0\r\n          });\r\n        } else if (this.state.avenantContrat) {\r\n          let request = {\r\n            status: values.nouveauStatus,\r\n            typeAvenantId: values.avenants\r\n          };\r\n          this.updatedContratStatus(this.state.record.id, request);\r\n          this.setState({ visible: false });\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const dateEcheance = moment(this.state.dateEcheance);\r\n        const dateSurvenance = moment(values.dateSurvenanceSinistre);\r\n        let requestmodel = {\r\n          contratId: this.state.keyRecord,\r\n          dateDeclarationSinistre: values.dateDeclarationSinistre,\r\n          dateSurvenance: values.dateSurvenanceSinistre,\r\n          natureSinistre: values.natureSinistre,\r\n          typePrestation: values.typePrestation\r\n        };\r\n        // if (dateSurvenance <= dateEcheance) {\r\n        this.setState({ visibled: false });\r\n        ajoutSinistre(requestmodel)\r\n          .then(response => {\r\n            console.log(response);\r\n            if (response.data.status === \"REJ_CONTRAT_ECHU\") {\r\n              const key = `open${Date.now()}`;\r\n              const btn = (\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  onClick={() => notification.close(key)}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              );\r\n              notification.warn({\r\n                message: \"Demande de resiliation rejeté\",\r\n                description:\r\n                  \"CONTRAT NUMERO     : \\n\" +\r\n                  response.data.contrat.numeroContrat +\r\n                  \"Contrat non couvert au date de sinistre\",\r\n                btn,\r\n                duration: 0,\r\n                key\r\n              });\r\n            } else {\r\n              const key = `open${Date.now()}`;\r\n              const btn = (\r\n                <Button\r\n                  type=\"primary\"\r\n                  size=\"small\"\r\n                  onClick={() => notification.close(key)}\r\n                >\r\n                  Confirm\r\n                </Button>\r\n              );\r\n              notification.success({\r\n                message: \"Demande de resiliation a bien ete envoyée\",\r\n                description:\r\n                  \" CONTRAT NUMERO     : \\n\" +\r\n                  response.data.contrat.numeroContrat +\r\n                  \" SINISTRE NUMERO   : \" +\r\n                  response.data.numeroSinistre,\r\n                btn,\r\n                duration: 0,\r\n                key\r\n              });\r\n            }\r\n            this.props.record.history.push(\"/consultDecesContrat\");\r\n          })\r\n          .catch(error => {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description:\r\n                error.message ||\r\n                \"Sorry! Something went wrong. Please try again!\"\r\n            });\r\n          });\r\n        // } else {\r\n        //   message.warning(\"Contrat non couvert au date de sinistre\");\r\n        // }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible, visibled } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 14 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des contrats\" />\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Search\r\n            placeholder=\"Entrez le text de recherche\"\r\n            addonBefore={this.selectBefore}\r\n            onSearch={value => this.search(value)}\r\n            enterButton\r\n            style={{ width: 600 }}\r\n          />\r\n        </div>\r\n        <Table\r\n          bordered\r\n          // rowClassName=\"editable-row\"\r\n          size=\"middle\"\r\n          columns={this.columns}\r\n          dataSource={this.state.contrats}\r\n          pagination={{\r\n            onChange: this.onPaginationChange,\r\n            pageSize: 5,\r\n            total: this.state.totalItems\r\n          }}\r\n        />\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Ajouter Avenant\"\r\n          onOk={this.handleSubmit}\r\n          onCancel={this.handleCancel}\r\n          afterClose={this.handleClose}\r\n          style={{ top: 20 }}\r\n          width=\"880px\"\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCancel}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Liste des avenants \">\r\n                  {getFieldDecorator(\"avenants\", {\r\n                    rules: [\r\n                      { message: \"Please input the title of collection!\" }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"Sélectionnez \"\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      {this.state.typesAvenant.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.code}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {this.state.Avenantchoisi}\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          visible={visibled}\r\n          title=\"Veuillez saisir les informations de la prestation\"\r\n          onOk={this.handleSubmited}\r\n          onCancel={this.handleCanceled}\r\n          afterClose={this.handleClosed}\r\n          style={{ top: 20 }}\r\n          width=\"900px\"\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCanceled}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>,\r\n            <Button\r\n              key=\"back\"\r\n              type=\"primary\"\r\n              onClick={this.handleSubmited}\r\n              className=\"not-rounded\"\r\n            >\r\n              Enregistrer\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n            <Row>\r\n              <Col span={16} offset={6}>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"typePrestation\")(\r\n                    <Select\r\n                      placeholder=\"Séléctionnez \"\r\n                      onChange={this.handleChanged}\r\n                    >\r\n                      <Option value=\"Restitution\" label=\"restitution\">\r\n                        Restitution\r\n                      </Option>\r\n                      <Option value=\"Sinistre\" label=\"sinistre\">\r\n                        Sinistre\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {this.state.sinistre ? (\r\n              <div>\r\n                <h3> AJOUT SINISTRE</h3>\r\n                <Divider />\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Date Création\">\r\n                      {getFieldDecorator(\"dateCreation\", {\r\n                        initialValue: moment(\r\n                          this.state.dateCreation,\r\n                          dateFormat\r\n                        )\r\n                      })(\r\n                        <DatePicker\r\n                          format={dateFormat}\r\n                          style={{ width: \"60%\" }}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Nature Sinistre\">\r\n                      {getFieldDecorator(\"natureSinistre\")(\r\n                        <Select\r\n                          placeholder=\"Séléctionnez \"\r\n                          style={{ width: \"60%\" }}\r\n                        >\r\n                          <Option value=\"Décès\" label=\"deces\">\r\n                            Décès\r\n                          </Option>\r\n                          <Option\r\n                            value=\"INVALIDITE TOTALE ET DEFINITIVE\"\r\n                            label=\"ITD\"\r\n                          >\r\n                            INVALIDITE TOTALE ET DEFINITIVE\r\n                          </Option>\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Date de survenance sinistre\">\r\n                      {getFieldDecorator(\"dateSurvenanceSinistre\")(\r\n                        <DatePicker\r\n                          format={dateFormat}\r\n                          style={{ width: \"60%\" }}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Date déclaration sinistre\">\r\n                      {getFieldDecorator(\"dateDeclarationSinistre\")(\r\n                        <DatePicker\r\n                          format={dateFormat}\r\n                          style={{ width: \"60%\" }}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            ) : null}\r\n            {this.state.restitution ? (\r\n              <div>\r\n                <h3> AJOUT restitution</h3>\r\n                <Divider />\r\n              </div>\r\n            ) : null}\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(ConsultDecesContrat);\r\n","import {\r\n  API_BASE_URL,\r\n  REQUEST as request,\r\n  ACCESS_TOKEN\r\n} from \"../../../constants/index\";\r\n\r\nexport function getAllPartenaire() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/partenaires?direction=asc&page=0&sort=code\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getPartenaireByCode(codePartenaire) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/partenaire/code/\" + codePartenaire,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getPartenaireById(idPartenaire) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/partenaire/\" + idPartenaire,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function addPartenaire(createPartenaireRequest) {\r\n  return request({\r\n    url: API_BASE_URL + \"/private/partenaire\",\r\n    method: \"POST\",\r\n    data: createPartenaireRequest\r\n  });\r\n}\r\nexport function updatePartenaire(partenaireId, updatedPartenaire) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/partenaire/\" + partenaireId,\r\n    data: updatedPartenaire,\r\n    method: \"PUT\"\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table,\r\n  Typography\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getAllPartenaire } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport { getDecesProduit } from \"../../Parametrage/ProduitDeces/ProduitDecesAPI\";\r\nimport {\r\n  addPrestationHonoraire,\r\n  setPrestationStatut\r\n} from \"../../Parametrage/TypePrestation/PrestationAPI\";\r\nimport { ajoutReglement, getReglements } from \"./SinistreAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { Title } = Typography;\r\nvar id_reglement = \"\";\r\n\r\nclass Reglement extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      partenaires: [],\r\n      produits: [],\r\n      disable: false,\r\n      produitPartenaire: [],\r\n      add: false,\r\n      reglement: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Nom du fichier\",\r\n        dataIndex: \"nomFichier\",\r\n        key: \"nomFichier\"\r\n      },\r\n      {\r\n        title: \"Libelle\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\"\r\n      },\r\n      {\r\n        title: \"Type reglement\",\r\n        dataIndex: \"reglementType\",\r\n        key: \"reglementType\"\r\n      },\r\n      {\r\n        title: \"Statut\",\r\n        dataIndex: \"statut\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Select\r\n                placeholder=\"Please select\"\r\n                onChange={this.handleChangeed}\r\n                style={{ width: \"100%\" }}\r\n                defaultValue={text}\r\n              >\r\n                <Option\r\n                  value=\"Valider\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  Valider\r\n                </Option>\r\n                <Option\r\n                  value=\"Supprimer\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  Supprimer\r\n                </Option>\r\n              </Select>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  componentDidMount() {\r\n    this.getpropreties();\r\n  }\r\n  async getpropreties() {\r\n    let response = await getAllPartenaire();\r\n    let produitResponse = await getDecesProduit();\r\n    this.setState({\r\n      partenaires: response.data.content,\r\n      produits: produitResponse.data.content\r\n    });\r\n  }\r\n  async getAllReglement() {\r\n    let response = await getReglements();\r\n    this.setState({\r\n      reglement: response.data.content\r\n    });\r\n  }\r\n  handleChangeed = value => {\r\n    this.updatePrestationStatut(id_reglement, value);\r\n  };\r\n  handleRecord = value => {\r\n    id_reglement = value.id;\r\n  };\r\n  handlePartnerChange = value => {\r\n    let list = [...this.state.produits];\r\n    this.setState({\r\n      produitPartenaire: list.filter(item => item.partenaire.id === value.key)\r\n    });\r\n  };\r\n  async ajouterReglement(productId, type, requestModel) {\r\n    try {\r\n      let response = await ajoutReglement(productId, type, requestModel);\r\n      if (response.status === 200) {\r\n        this.setState({ add: true });\r\n      }\r\n    } catch (error) {\r\n      if (error.response.status === 500) {\r\n        notification.error({\r\n          message: \"Aucune prestation avec le statut À signer.\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n  async ajouterReglementHonoraire(productId, type, requestModel) {\r\n    try {\r\n      await addPrestationHonoraire(productId, type, requestModel);\r\n    } catch (error) {\r\n      if (error.response.status === 500) {\r\n        notification.error({\r\n          message: \"Aucun honoraire avec le statut À signer.\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n  async updatePrestationStatut(reglementId, statut) {\r\n    await setPrestationStatut(reglementId, statut);\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll();\r\n  };\r\n  onClickSearch = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      const date = new Date();\r\n      let requestmodel = {\r\n        libelle: \"Ordre de chèque sup \" + date,\r\n        reglementType: \"Virement\",\r\n        dateStatut: date\r\n      };\r\n      if (!err) {\r\n        if (values.nature.key === \"Honoraire\") {\r\n          this.ajouterReglementHonoraire(\r\n            values.produit.key,\r\n            values.nature.label,\r\n            requestmodel\r\n          );\r\n        } else {\r\n          this.ajouterReglement(\r\n            values.produit.key,\r\n            values.nature.label,\r\n            requestmodel\r\n          );\r\n          this.getAllReglement();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 24,\r\n          offset: 4\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Title style={{ marginBottom: \"25px\" }} level={4}>\r\n            RECHERCHE DES PRESTATIONS\r\n          </Title>\r\n          <Divider />\r\n          <Col span={24} offset={1}>\r\n            <Title style={{ marginBottom: \"25px\" }} level={4} underline={true}>\r\n              Critéres de Recherche :\r\n            </Title>\r\n            <Form\r\n              {...formItemLayout}\r\n              onSubmit={this.handleSubmit}\r\n              ref={ref => {\r\n                this.form = ref;\r\n              }}\r\n              hideRequiredMark\r\n            >\r\n              <Col span={10}>\r\n                <Form.Item label=\"Intermédiaire \" hasFeedback>\r\n                  {getFieldDecorator(\"partenaire\", {\r\n                    valuePropName: \"selected\",\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Veuillez selectionner\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"Veuillez selectionner\"\r\n                      optionLabelProp=\"label\"\r\n                      onChange={this.handlePartnerChange}\r\n                      labelInValue\r\n                    >\r\n                      {this.state.partenaires.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.raisonSocial}\r\n                          >\r\n                            {element.raisonSocial}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Produit \">\r\n                  {getFieldDecorator(\"produit\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"Veuillez selectionner\"\r\n                      optionLabelProp=\"label\"\r\n                      labelInValue\r\n                    >\r\n                      {this.state.produitPartenaire.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.libelle}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={1}></Col>\r\n              <Col span={10}>\r\n                <Form.Item label=\"Nature \">\r\n                  {getFieldDecorator(\"nature\", {\r\n                    rules: [\r\n                      {\r\n                        required: true\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"Veuillez selectionner\"\r\n                      optionLabelProp=\"label\"\r\n                      labelInValue\r\n                    >\r\n                      <Option value=\"Sinistre\" label=\"Sinistre\">\r\n                        Sinistre\r\n                      </Option>\r\n                      <Option value=\"Restitution\" label=\"Restitution\">\r\n                        Restitution\r\n                      </Option>\r\n                      <Option value=\"Honoraire\" label=\"Honoraire\">\r\n                        Honoraire\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item {...tailFormItemLayout}>\r\n                  <Button\r\n                    style={{ margin: \"10px\" }}\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    onClick={this.onClickSearch}\r\n                    className=\"not-rounded\"\r\n                  >\r\n                    <Icon type=\"file-add\" theme=\"filled\" />\r\n                    Générer ordre de virement\r\n                  </Button>\r\n                  <Button\r\n                    style={{ margin: \"10px\" }}\r\n                    type=\"default\"\r\n                    onClick={this.onClickSearch}\r\n                    className=\"not-rounded\"\r\n                  >\r\n                    <Icon type=\"file-add\" theme=\"twoTone\" />\r\n                    Générer fichier chèque\r\n                  </Button>\r\n                </Form.Item>\r\n              </Col>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n        {this.state.add ? (\r\n          <Table\r\n            rowClassName=\"editable-row\"\r\n            columns={this.columns}\r\n            size=\"small\"\r\n            bordered\r\n            dataSource={this.state.reglement}\r\n            pagination={false}\r\n          />\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst ReglementForm = Form.create()(Reglement);\r\nexport default ReglementForm;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"../ConsultationsContratsMrb\";\r\nconst { Panel } = Collapse;\r\n\r\nclass ContratMrb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Contrat\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      N° contrat : {context.state.numeroContrat}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- N° de contrat</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.numeroContrat}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - N° dossier de financement\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.numeroDossierFinancement}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Date d&apos;effet\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.dateEffet}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Date d&apos;écheance\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.dateEcheance}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>-N° Simulataion</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.numeroSimulation}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - N° de titre foncier\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.numeroTitreFoncier}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Réduction</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.reduction}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Périodicité</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.periodicite.libelle}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Situation risque\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.situationRisque}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Superficie</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.superficie}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Valeur du Contenu\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.valeurContenu}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Type de batiment\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.typeBatiment}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prime nette</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.primeNette}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prime Evcat</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.primeEvcat}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prime HT</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.primeHT}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prime TTC</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.primeTTC}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prorata HT</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.prorata}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prorata TTC</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.prorataTTC}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContratMrb;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { MyContext } from \"../ConsultationsContratsMrb\";\r\nconst { Panel } = Collapse;\r\n\r\nclass General extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Souscripteur\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      CIN : {context.state.souscripteur.cin}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.nom}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prénom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.prenom}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- CIN</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.cin}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Date naissance</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.dateNaissance}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Situation familiale\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.situationFamiliale}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Profession</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.profession}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nationalité</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.nationalite}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Matricule</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.matricule}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n                <Panel\r\n                  header=\"Assuré\"\r\n                  key=\"2\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      CIN : {context.state.assure.cin}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.nom}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prénom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.prenom}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- CIN</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.cin}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Date naissance</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.dateNaissance}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Situation familiale\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.situationFamiliale}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Profession</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.profession}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nationalité</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.nationalite}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Matricule</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.matricule}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default General;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { MyContext } from \"../ConsultationsContratsMrb\";\r\nconst { Panel } = Collapse;\r\nclass ProduitMrb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Produit\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      Libelle : {context.state.produitMrb.libelle}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Libelle</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produitMrb.libelle}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Code</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produitMrb.code}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Frais de gestion\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produitMrb.fraisGestion}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - TVA frais de gestion\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produitMrb.tvaFraisGestion}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Délai prescription\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produitMrb.delaiPrescription}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Délai prescription sans souscription\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>\r\n                          {\r\n                            context.state.produitMrb\r\n                              .delaiPrescriptionSansSouscription\r\n                          }\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nature Assuré</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produitMrb.natureAssure}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Nature du bien assuré\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produitMrb.natureBienAssure}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Montant maximum de garantie\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produitMrb.montantMaximumGarantie}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Taux taxe</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produitMrb.tauxTaxe}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Nature du participant\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produitMrb.natureParticipant}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProduitMrb;\r\n","import {\r\n  API_BASE_URL,\r\n  ACCESS_TOKEN,\r\n  REQUEST as request\r\n} from \"../../../constants/index\";\r\n\r\nexport function getAllProductMrb() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/getAllProductMrb?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAllExclusionMrb() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/getAllExclusionMrb?page=0&sort=exclusionMrb&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function addProduitMrb(model) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addProductMrb\",\r\n    data: model,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function updateProductMrb(id, updatedProduct) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/updateProductMrb/\" + id,\r\n    data: updatedProduct,\r\n    method: \"PUT\"\r\n  });\r\n}\r\nexport function getTarificationsMrb(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/tarificationsMrb/\" + id + \"?page=0\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function ajoutSinistreMrb(sinistreRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addSinistreMrb\",\r\n    data: sinistreRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function recupereDataSinistreMrb(sinistreMrb) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/recupereDataSinistreMrb\",\r\n    data: sinistreMrb,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function getSinistreMrb(contratId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/getSinistreMrb/\" + contratId,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function updateSinistreMrb(updatedSinistre, id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/updateSinistreMrb/\" + id,\r\n    method: \"PUT\",\r\n    data: updatedSinistre\r\n  });\r\n}\r\nexport function getTarificationMrb(valeur, nature, produit) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/tarrificationMrb?valeur=\" +\r\n      valeur +\r\n      \"&nature=\" +\r\n      nature +\r\n      \"&produit=\" +\r\n      produit,\r\n    method: \"GET\"\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Modal,\r\n  notification,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  getSinistreMrb,\r\n  recupereDataSinistreMrb,\r\n  updateSinistreMrb\r\n} from \"../ProduitMrb/ProduitMRBAPI\";\r\nimport { deleteSinistre } from \"../../GestionContrats/DetailsTabs/SinistreAPI.js\";\r\n\r\nimport { MyContext } from \"../ConsultationsContratsMrb\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nvar id = \"\";\r\nvar id_sinistre = \"\";\r\nvar statut = \"\";\r\nclass SinistreMrb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\",\r\n      data: [],\r\n      add: false,\r\n      remplie: \"\",\r\n      visible: false,\r\n      visibled: false,\r\n      exclusions: [],\r\n      pieceJointe: [],\r\n      keyRecord: \"\",\r\n      dataSinistre: [],\r\n      sinistreInfo: {}\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro de sinistre\",\r\n        dataIndex: \"numeroSinistre\",\r\n        key: \"numeroSinistre\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleChange(record)}\r\n                size=\"small\"\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                {text}\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Date de survenance\",\r\n        dataIndex: \"dateSurvenance\",\r\n        key: \"dateServenance\"\r\n      },\r\n      {\r\n        title: \"date déclaration sinistre\",\r\n        dataIndex: \"dateDeclarationSinistre\",\r\n        key: \"dateDeclarationSinistre\"\r\n      },\r\n      {\r\n        title: \"Statut\",\r\n        dataIndex: \"status\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Select\r\n                placeholder=\"Please select\"\r\n                onChange={this.handleChangeed}\r\n                style={{ width: \"100%\" }}\r\n                defaultValue={text}\r\n              >\r\n                <Option\r\n                  value=\"EN_COURS\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  EN COURS\r\n                </Option>\r\n                <Option\r\n                  value=\"A_signer\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  À SIGNER\r\n                </Option>\r\n                <Option\r\n                  value=\"ANNULER\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  ANNULER\r\n                </Option>\r\n              </Select>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n\r\n    this.columns1 = [\r\n      {\r\n        title: \"Numéro de sinistre\",\r\n        dataIndex: \"numeroSinistre\",\r\n        key: \"numeroSinistre\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleChange(record)}\r\n                size=\"small\"\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                {text}\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Date de survenance\",\r\n        dataIndex: \"dateSurvenance\",\r\n        key: \"dateServenance\"\r\n      },\r\n      {\r\n        title: \"date déclaration sinistre\",\r\n        dataIndex: \"dateDeclarationSinistre\",\r\n        key: \"dateDeclarationSinistre\"\r\n      },\r\n      {\r\n        title: \"Statut\",\r\n        dataIndex: \"status\",\r\n        key: \"statut\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSinistresMrb(id);\r\n  }\r\n\r\n  async recupereDataOfSinistreMrb(value) {\r\n    let response = await recupereDataSinistreMrb(value);\r\n\r\n    console.log(\"response\", response.data);\r\n  }\r\n\r\n  handleChangeed = value => {\r\n    statut = value;\r\n    if (value === \"A_signer\") {\r\n      this.setState({\r\n        visible: true\r\n      });\r\n    } else if (value === \"ANNULER\") {\r\n      this.setState({\r\n        visibled: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOk = () => {\r\n    let request = { motif: \"\" };\r\n    this.setStatuts(id_sinistre, statut, request);\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let request = { motif: values.motif };\r\n        this.setStatuts(id_sinistre, statut, request);\r\n        this.setState({ visibled: false });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  async updatePrestationSinistres(body, idPrestation) {\r\n    let response = await updateSinistreMrb(body, idPrestation);\r\n    console.log(\"body\", body);\r\n    let dataSource = [];\r\n    dataSource.push(response.data);\r\n    this.setState({\r\n      data: dataSource\r\n    });\r\n    this.setState({\r\n      dataSinistre: this.state.data\r\n    });\r\n    let pointVente = {};\r\n    let garanties = {};\r\n    if (this.state.dataSinistre[0].contratMrb.pointVente !== null) {\r\n      pointVente = {\r\n        codeCaps: this.state.dataSinistre[0].contratMrb.pointVente.codeCaps,\r\n        codeSite: this.state.dataSinistre[0].contratMrb.pointVente.codeInterne,\r\n        nature: this.state.dataSinistre[0].contratMrb.pointVente.typePointVente\r\n          .libelle\r\n      };\r\n    }\r\n    //Garanties\r\n    this.state.dataSinistre[0].contratMrb.contratGarantie.forEach(element => {\r\n      garanties = {\r\n        ganranties: {\r\n          capital: element.capital,\r\n          franchise: element.franchise,\r\n          libelle: element.garantieMrb.libelle\r\n        }\r\n      };\r\n    });\r\n    let dataRecuperee1 = {};\r\n    dataRecuperee1 = {\r\n      ...garanties,\r\n      //Intermediaire\r\n      ...pointVente,\r\n      //if victime===assure\r\n      nomVictime: this.state.dataSinistre[0].contratMrb.assure.nom,\r\n      prenomVictime: this.state.dataSinistre[0].contratMrb.assure.prenom,\r\n      dateNaissanceVictime: this.state.dataSinistre[0].contratMrb.assure\r\n        .dateNaissanceVictime,\r\n      cinVictime: this.state.dataSinistre[0].contratMrb.assure.cin,\r\n      //if societaire===souscripteur\r\n      numSocietaire: this.state.dataSinistre[0].contratMrb.souscripteur\r\n        .compteTakaful,\r\n      cinSociataire: this.state.dataSinistre[0].contratMrb.souscripteur.cin,\r\n      villeSocietaire: this.state.dataSinistre[0].contratMrb.souscripteur\r\n        .adressVille,\r\n      adresse:\r\n        this.state.dataSinistre[0].contratMrb.souscripteur.adressNumero +\r\n        \" \" +\r\n        this.state.dataSinistre[0].contratMrb.souscripteur.adressVois +\r\n        \" \" +\r\n        this.state.dataSinistre[0].contratMrb.souscripteur.adressVille,\r\n      telephoneSocietaire: this.state.dataSinistre[0].contratMrb.souscripteur\r\n        .numeroDeTelephone,\r\n\r\n      //effet echeance police\r\n      periodicite: this.state.dataSinistre[0].contratMrb.periodicite.libelle,\r\n      dateEffet: moment(this.state.dataSinistre[0].contratMrb.dateEffet).format(\r\n        \"DD/MM/YYYY\"\r\n      ),\r\n      dateEcheance: moment(\r\n        this.state.dataSinistre[0].contratMrb.dateEcheance\r\n      ).format(\"DD/MM/YYYY\"),\r\n\r\n      //police historique\r\n      police: this.state.dataSinistre[0].contratMrb.numeroContrat,\r\n\r\n      //info sinistre\r\n      dateSurvenance: moment(body.dateSurvenance).format(\"DD/MM/YYYY\"),\r\n\r\n      dateDeclarationSinistre: moment(body.dateDeclarationSinistre).format(\r\n        \"DD/MM/YYYY\"\r\n      ),\r\n      sinistreDeclare: body.sinistreDeclare,\r\n      documentDeclaration: this.state.dataSinistre[0].documentDeclaration,\r\n      documentConstatation: body.documentConstatation,\r\n      numeroDocumentConstatation: this.state.dataSinistre[0]\r\n        .numeroDocumentConstatation,\r\n      dateReceptionDoc: moment(body.dateReceptionDoc).format(\"DD/MM/YYYY\"),\r\n\r\n      entiteReception: this.state.dataSinistre[0].entiteReception,\r\n      natureSinistre: this.state.dataSinistre[0].natureSinistre,\r\n      referenceIntermedaire: body.referenceIntermediaire,\r\n      villeSurvenance: this.state.dataSinistre[0].villeSurvenance,\r\n      province: this.state.dataSinistre[0].province,\r\n      commune: this.state.dataSinistre[0].commune,\r\n      lieuSinistre: this.state.dataSinistre[0].lieuSinistre,\r\n      cause: this.state.dataSinistre[0].cause,\r\n      circonstance: this.state.dataSinistre[0].circonstance,\r\n      descriptionCauseCirconstance: body.description\r\n    };\r\n    this.setState({\r\n      sinistreInfo: { ...dataRecuperee1 }\r\n    });\r\n\r\n    this.recupereDataOfSinistreMrb(this.state.sinistreInfo);\r\n  }\r\n\r\n  getSinistresMrb = idContrat => {\r\n    getSinistreMrb(idContrat).then(response => {\r\n      let newDataList = [];\r\n      response.data.forEach(element => {\r\n        let key = { key: element.id };\r\n        element = { ...element, ...key };\r\n        newDataList.push(element);\r\n      });\r\n\r\n      this.setState({ data: newDataList });\r\n      if (this.state.data[0] === undefined) {\r\n        //instruction to do\r\n      } else {\r\n        this.setState({ remplie: this.state.data[0].status });\r\n      }\r\n    });\r\n  };\r\n\r\n  async deletePrestationSinistre(idPrestation) {\r\n    try {\r\n      let response = await deleteSinistre(idPrestation);\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"Sinistre annulé !\"\r\n        });\r\n      }\r\n    } catch (err) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          err.message || \"Désolé! Un problème est survenu. Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleRecord = value => {\r\n    id_sinistre = value.id;\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({\r\n      dataSinistre: value\r\n    });\r\n    this.setState({ add: true, keyRecord: value.id }, () => {\r\n      this.props.form.setFieldsValue({\r\n        dateCreation: moment(value.creationDate, \"DD/MM/YYYY \"),\r\n        numeroSinistre: value.numeroSinistre,\r\n        dateDeclarationSinistre: moment(\r\n          value.dateDeclarationSinistre,\r\n          \"DD/MM/YYYY\"\r\n        ),\r\n        dateSurvenance: moment(value.dateSurvenance, \"DD/MM/YYYY\"),\r\n        sinistreDeclare: value.sinistreDeclare,\r\n        documentDeclaration: value.documentDeclaration,\r\n        documentConstatation: value.documentConstatation,\r\n        numeroDocumentConstatation: value.numeroDocumentConstatation,\r\n        circonstance: value.circonstance,\r\n        entiteReception: value.entiteReception,\r\n        referenceIntermediaire: value.referenceIntermediaire,\r\n        villeSurvenance: value.villeSurvenance,\r\n        province: value.province,\r\n        commune: value.commune,\r\n        cause: value.cause,\r\n        lieuSinistre: value.lieuSinistre,\r\n        description: value.description,\r\n        typeSinistre: value.natureSinistre\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log(\"values\", values);\r\n      if (!err) {\r\n        let request = {\r\n          dateSurvenance: values.dateSurvenance,\r\n          dateDeclarationSinistre: values.dateDeclarationSinistre,\r\n          numeroSinistre: values.numeroSinistre,\r\n          description: values.description,\r\n          lieuSinistre: values.lieuSinistre,\r\n          sinistreDeclare: values.sinistreDeclare,\r\n          natureSinistre: values.typeSinistre,\r\n          documentDeclaration: values.documentDeclaration,\r\n          documentConstatation: values.documentConstatation,\r\n          numeroDocumentConstatation: values.numeroDocumentConstatation,\r\n          dateReceptionDoc: values.dateReceptionDoc,\r\n          entiteReception: values.entiteReception,\r\n          referenceIntermediaire: values.referenceIntermediaire,\r\n          villeSurvenance: values.villeSurvenance,\r\n          province: values.province,\r\n          commune: values.commune,\r\n          cause: values.cause,\r\n          circonstance: values.circonstance,\r\n          remplie: true\r\n        };\r\n        this.setState({\r\n          dataSinistre: { ...this.state.dataSinistre },\r\n          values\r\n        });\r\n        this.updatePrestationSinistres(request, this.state.keyRecord);\r\n        console.log(\"datasinistre\", this.state.dataSinistre);\r\n\r\n        this.setState({ remplie: true });\r\n      }\r\n    });\r\n  };\r\n  onChangeDateRecDocument = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      dateReceptionDoc: value\r\n    });\r\n  };\r\n  handleDelete = key => {\r\n    this.deletePrestationSinistre(key);\r\n    const dataSource = [...this.state.data];\r\n    this.setState({ data: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 11\r\n      },\r\n      wrapperCol: {\r\n        span: 12\r\n      }\r\n    };\r\n    const formItemLayout1 = {\r\n      labelCol: {\r\n        span: 10\r\n      },\r\n      wrapperCol: {\r\n        span: 14\r\n      }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visibled } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          (id = context.state.id),\r\n          (\r\n            <React.Fragment>\r\n              <div>\r\n                <Modal\r\n                  visible={visibled}\r\n                  title=\"Motif d'annulation\"\r\n                  onOk={this.handleSubmited}\r\n                  onCancel={this.handleCancel}\r\n                  width=\"600px\"\r\n                  footer={[\r\n                    <Button key=\"back\" onClick={this.handleCancel}>\r\n                      Fermer\r\n                    </Button>,\r\n                    <Button\r\n                      key=\"submit\"\r\n                      type=\"primary\"\r\n                      onClick={this.handleSubmited}\r\n                    >\r\n                      Valider\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                  <Form>\r\n                    <Form.Item label=\"Le motif \">\r\n                      {getFieldDecorator(\"motif\", {\r\n                        rules: [{ message: \"Champs Obligatoire!\" }]\r\n                      })(<TextArea rows={2} />)}\r\n                    </Form.Item>\r\n                  </Form>\r\n                </Modal>\r\n                <Table\r\n                  rowClassName=\"editable-row\"\r\n                  columns={this.columns1}\r\n                  dataSource={this.state.data}\r\n                  pagination={false}\r\n                />\r\n                {this.state.add ? (\r\n                  <div>\r\n                    <Col span={24}>\r\n                      <Divider orientation=\"left\">Données sinistre MRB</Divider>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                      <Form onSubmit={this.handleSubmit}>\r\n                        <Col span={12}>\r\n                          <Form.Item label=\"Date création\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"dateCreation\")(\r\n                              <DatePicker\r\n                                format=\"DD-MM-YYYY\"\r\n                                style={{ width: \"100%\" }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"N° de sinistre\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"numeroSinistre\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Date déclaration sinistre\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"dateDeclarationSinistre\")(\r\n                              <DatePicker\r\n                                format=\"DD-MM-YYYY\"\r\n                                style={{ width: \"100%\" }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Sinistre Déclaré\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"sinistreDeclare\")(\r\n                              <Select placeholder=\"Selectionnez ...\">\r\n                                <Option value=\"true\" label=\"true\">\r\n                                  true\r\n                                </Option>\r\n                                <Option value=\"false\" label=\"NON\">\r\n                                  NON\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Sinistre\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"sinistre\")(\r\n                              <Select placeholder=\"Selectionnez ...\">\r\n                                <Option value=\"Document 1\" label=\"Document 11\">\r\n                                  Document 11\r\n                                </Option>\r\n                                <Option value=\"Document 2\" label=\"Document 22\">\r\n                                  Document 22\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Document de Déclaration\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"documentDeclaration\")(\r\n                              <Select placeholder=\"Selectionnez ...\">\r\n                                <Option value=\"Document 1\" label=\"Document 1\">\r\n                                  Document 1\r\n                                </Option>\r\n                                <Option value=\"Document 2\" label=\"Document 2\">\r\n                                  Document 2\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Document de Constatation\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"documentConstatation\")(\r\n                              <Select placeholder=\"Selectionnez ...\">\r\n                                <Option value=\"Document 1\" label=\"Document 1\">\r\n                                  Document 1\r\n                                </Option>\r\n                                <Option value=\"Document 2\" label=\"Document 2\">\r\n                                  Document 2\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"N° Document Constatation\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"numeroDocumentConstatation\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Circonstances\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"circonstance\")(\r\n                              <Select placeholder=\"Selectionnez ...\">\r\n                                <Option\r\n                                  value=\"Circonstance 1\"\r\n                                  label=\"Circonstance 1\"\r\n                                >\r\n                                  Circonstance 1\r\n                                </Option>\r\n                                <Option\r\n                                  value=\"Circonstance 2\"\r\n                                  label=\"Circonstance 2\"\r\n                                >\r\n                                  Circonstance 2\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                          <Form.Item\r\n                            label=\"Date de survenanve sinistre\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"dateSurvenance\")(\r\n                              <DatePicker\r\n                                format=\"DD-MM-YYYY\"\r\n                                style={{ width: \"100%\" }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Date de Réception Doc\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"dateReceptionDoc\")(\r\n                              <DatePicker\r\n                                format=\"DD-MM-YYYY\"\r\n                                style={{ width: \"100%\" }}\r\n                                onChange={this.onChangeDateRecDocument}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Entité Recéption Doc\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"entiteReception\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Nature sinistre\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"typeSinistre\", {\r\n                              initialValue: \"Vol\"\r\n                            })(\r\n                              <Select\r\n                                placeholder=\"Séléctionnez \"\r\n                                style={{ width: \"100%\" }}\r\n                              >\r\n                                <Option value=\"Incendie\" label=\"Incendie\">\r\n                                  Incendie\r\n                                </Option>\r\n                                <Option value=\"Vol\" label=\"Vol\">\r\n                                  Vol\r\n                                </Option>\r\n                                <Option\r\n                                  value=\"Bris des Glaces\"\r\n                                  label=\"Bris des Glaces\"\r\n                                >\r\n                                  Bris des Glaces\r\n                                </Option>\r\n                                <Option\r\n                                  value=\"Dégâts des Eaux\"\r\n                                  label=\"Dégâts des Eaux\"\r\n                                >\r\n                                  Dégâts des Eaux\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Référence Intermédiaire\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"referenceIntermediaire\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item\r\n                            label=\"Ville Survenance\"\r\n                            {...formItemLayout}\r\n                          >\r\n                            {getFieldDecorator(\"villeSurvenance\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Province\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"province\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Commune\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"commune\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"Cause\" {...formItemLayout}>\r\n                            {getFieldDecorator(\"cause\")(\r\n                              <Select placeholder=\"Selectionnez ...\">\r\n                                <Option value=\"Cause 1\" label=\"Cause 1\">\r\n                                  Cause 1\r\n                                </Option>\r\n                                <Option value=\"Cause 2\" label=\"Cause 2\">\r\n                                  Cause 2\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}>\r\n                          <Form.Item label=\"Lieu Sinistre\" {...formItemLayout1}>\r\n                            {getFieldDecorator(\"lieuSinistre\")(\r\n                              <TextArea\r\n                                placeholder=\"Saisir lieu sinistre\"\r\n                                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={16}>\r\n                          <Form.Item\r\n                            label=\"Description des causes et circonstances\"\r\n                            {...formItemLayout1}\r\n                          >\r\n                            {getFieldDecorator(\"description\")(\r\n                              <TextArea\r\n                                placeholder=\"Saisir une description\"\r\n                                autoSize={{ minRows: 2, maxRows: 6 }}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={4} offset={21}>\r\n                          <Form.Item>\r\n                            <Button\r\n                              type=\"primary\"\r\n                              htmlType=\"submit\"\r\n                              className=\"not-rounded\"\r\n                            >\r\n                              <Icon type=\"save\" />\r\n                              Enregistrer\r\n                            </Button>\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Form>\r\n                    </Col>\r\n                  </div>\r\n                ) : null}\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(SinistreMrb);\r\n","import \"antd/dist/antd.css\";\r\nimport { Button, Card, Drawer } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ContratMrb from \"./DetailsTab/ContratMrb\";\r\nimport General from \"./DetailsTab/General\";\r\nimport ProduitMrb from \"./DetailsTab/ProduitMrb\";\r\nimport SinistreMrb from \"./DetailsTab/SinistreMrb\";\r\nimport { MyContext } from \"./ConsultationsContratsMrb\";\r\n\r\nconst tabListNoTitle = [\r\n  {\r\n    key: \"general\",\r\n    tab: \"Général\"\r\n  },\r\n  {\r\n    key: \"contrat\",\r\n    tab: \"Contrat\"\r\n  },\r\n  {\r\n    key: \"produit\",\r\n    tab: \"Produit\"\r\n  },\r\n  {\r\n    key: \"sinistre\",\r\n    tab: \"Sinistre\"\r\n  }\r\n];\r\n\r\nclass DetailsContratMrb extends Component {\r\n  state = {\r\n    key: \"general\",\r\n    noTitleKey: \"general\",\r\n    visible: false\r\n  };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  contentListNoTitle = {\r\n    general: <General />,\r\n    contrat: <ContratMrb />,\r\n    produit: <ProduitMrb />,\r\n    sinistre: <SinistreMrb />\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Consumer>\r\n          {context => (\r\n            <React.Fragment>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon=\"edit\"\r\n                size=\"small\"\r\n                onClick={this.showDrawer}\r\n              >\r\n                {context.state.numeroContrat}\r\n              </a>\r\n              <Drawer\r\n                title={\r\n                  <div style={{ fontSize: \"18px\" }}>\r\n                    Détails du Contrat : {context.state.numeroContrat}\r\n                  </div>\r\n                }\r\n                width={1000}\r\n                onClose={this.onClose}\r\n                visible={this.state.visible}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n              >\r\n                <Card\r\n                  tabList={tabListNoTitle}\r\n                  activeTabKey={this.state.noTitleKey}\r\n                  onTabChange={key => {\r\n                    this.onTabChange(key, \"noTitleKey\");\r\n                  }}\r\n                >\r\n                  {this.contentListNoTitle[this.state.noTitleKey]}\r\n                </Card>\r\n                <div className=\"submit-cancel\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    className=\"not-rounded\"\r\n                    onClick={this.onClose}\r\n                  >\r\n                    Fermer\r\n                  </Button>\r\n                </div>\r\n              </Drawer>\r\n            </React.Fragment>\r\n          )}\r\n        </MyContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DetailsContratMrb;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../util/Title/ComponentTitle\";\r\nimport DetailsContratMrb from \"./DetailsContratMrb\";\r\nimport {\r\n  getAllContratMrb,\r\n  searchContratMrb\r\n} from \"../GestionContrats/ContratsAPI\";\r\nimport { ajoutSinistreMrb } from \"./ProduitMrb/ProduitMRBAPI\";\r\n\r\nexport const MyContext = React.createContext();\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nclass ConsultationsContratsMrb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visibled: false,\r\n      dateEcheance: \"\",\r\n      data: [],\r\n      sinistre: false,\r\n      restitution: false,\r\n      keyRecord: \"\",\r\n      dateCreation: new Date(),\r\n      searchby: \"numeroContrat\",\r\n      searchfor: \"\",\r\n      contrats: [],\r\n      totalItems: 0,\r\n      pagenumber: 1\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"N° Contrat\",\r\n        dataIndex: \"numeroContrat\",\r\n        key: \"numeroContrat\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <div>\r\n                <MyContext.Provider\r\n                  value={{\r\n                    state: record\r\n                  }}\r\n                >\r\n                  <DetailsContratMrb />\r\n                </MyContext.Provider>\r\n              </div>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"N° Simulation\",\r\n        dataIndex: \"numeroSimulation\",\r\n        key: \"numeroSimulation\"\r\n      },\r\n      {\r\n        title: \"Nom assuré\",\r\n        dataIndex: \"assure.nom\",\r\n        key: \"nomAssure\"\r\n      },\r\n      {\r\n        title: \"Prénom assuré\",\r\n        dataIndex: \"assure.prenom\",\r\n        key: \"prenomAssure\"\r\n      },\r\n      {\r\n        title: \"Produit\",\r\n        dataIndex: \"produitMrb.libelle\",\r\n        key: \"produit\"\r\n      },\r\n      {\r\n        title: \"Type bâtiment\",\r\n        dataIndex: \"typeBatiment\",\r\n        key: \"typeBatiment\"\r\n      },\r\n      {\r\n        title: \"Valeur bâtiment\",\r\n        dataIndex: \"valeurContenu\", //a changer par le champs de la valeur du batiment apres la modification de ce dernier\r\n        key: \"typeBatiment\"\r\n      },\r\n      {\r\n        title: \"Adresse\",\r\n        dataIndex: \"adresseBatiment\",\r\n        key: \"adresse\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        width: \"22%\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleChangePrestation(record)}\r\n                size=\"small\"\r\n                style={{\r\n                  borderRadius: \"0px\",\r\n                  width: \"105px\",\r\n                  backgroundColor: \"#4ee289\",\r\n                  borderColor: \"#4ee289\",\r\n                  textAlign: \"left\"\r\n                }}\r\n              >\r\n                <Icon type=\"plus-circle\" /> Prestation\r\n              </Button>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  componentDidMount() {\r\n    this.getAllContrat();\r\n  }\r\n  async getAllContrat() {\r\n    let response = await getAllContratMrb();\r\n    this.setState({\r\n      data: response.data.content\r\n    });\r\n  }\r\n\r\n  handleChangePrestation = value => {\r\n    this.setState({\r\n      visibled: true,\r\n      dateEcheance: value.dateEcheance,\r\n      keyRecord: value.id\r\n    });\r\n    this.setState({ visibled: true, dateEcheance: value.dateEcheance });\r\n  };\r\n\r\n  handleChanged = value => {\r\n    if (value === \"Restitution\") {\r\n      this.setState({ restitution: true, sinistre: false });\r\n    } else if (value === \"Sinistre\") {\r\n      this.setState({ sinistre: true, restitution: false });\r\n    }\r\n  };\r\n\r\n  selectBefore = (\r\n    <Select\r\n      onChange={value => this.setState({ searchby: value })}\r\n      defaultValue=\"numContrat\"\r\n      style={{ width: 150 }}\r\n    >\r\n      <Option value=\"numContrat\">N° de contrat</Option>\r\n      <Option value=\"numeroSimulation\">N° Simulation</Option>\r\n      <Option value=\"nom\">Nom Assuré</Option>\r\n    </Select>\r\n  );\r\n\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      console.log(\"values\", values);\r\n      console.log(\"this.state.dateEcheance\", this.state.dateEcheance);\r\n      if (!err) {\r\n        const dateEcheance = moment(this.state.dateEcheance, \"DD/MM/YYYY\");\r\n        const dateSurvenance = moment(\r\n          values.dateSurvenanceSinistre,\r\n          \"DD/MM/YYYY\"\r\n        );\r\n\r\n        let requestmodel = {\r\n          contratId: this.state.keyRecord,\r\n          dateDeclarationSinistre: values.dateDeclarationSinistre,\r\n          dateSurvenance: values.dateSurvenanceSinistre,\r\n          natureSinistre: values.natureSinistre,\r\n          typePrestation: values.typePrestation\r\n        };\r\n\r\n        if (dateSurvenance <= dateEcheance) {\r\n          this.setState({ visibled: false });\r\n\r\n          console.log(\r\n            \"requestmodel.dateDeclarationSinistre\",\r\n            requestmodel.dateDeclarationSinistre\r\n          );\r\n\r\n          ajoutSinistreMrb(requestmodel)\r\n            .then(response => {\r\n              notification.success({\r\n                message: \"TAKAFUL\",\r\n                description: \"L'insertion est bien faite\"\r\n              });\r\n              this.props.record.history.push(\"/ConsultationsContratsMrb\");\r\n            })\r\n            .catch(error => {\r\n              notification.error({\r\n                message: \"TAKAFUL\",\r\n                description:\r\n                  error.message ||\r\n                  \"Sorry! Something went wrong. Please try again!\"\r\n              });\r\n            });\r\n        } else {\r\n          message.warning(\"Contrat non couvert au date de sinistre\");\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCanceled = () => {\r\n    this.props.form.setFieldsValue({\r\n      typePrestation: \" Séléctionnez \"\r\n    });\r\n    this.setState({ visibled: false });\r\n  };\r\n\r\n  handleClosed = () => {\r\n    this.setState({ sinistre: false, restitution: false });\r\n  };\r\n\r\n  async searchContratsMrb(page, limit, searchby, searchfor) {\r\n    let contratResponse = await searchContratMrb(\r\n      page,\r\n      limit,\r\n      searchby,\r\n      searchfor\r\n    );\r\n    if (searchby === \"numeroSimulation\" || searchby === \"nom\") {\r\n      this.setState({\r\n        data: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.numberOfElements\r\n      });\r\n    } else if (searchby === \"numeroContrat\") {\r\n      this.setState({\r\n        data: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.totalElements\r\n      });\r\n    }\r\n  }\r\n\r\n  search = value => {\r\n    this.setState({ pagenumber: 1, searchfor: value });\r\n    this.searchContratsMrb(\r\n      this.state.pagenumber - 1,\r\n      2,\r\n      this.state.searchby,\r\n      value\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visibled } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 14 }\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des contrats MRB\" />\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Search\r\n            placeholder=\"Entrez le text de recherche\"\r\n            addonBefore={this.selectBefore}\r\n            onSearch={value => this.search(value)}\r\n            enterButton\r\n            style={{ width: 600 }}\r\n          />\r\n        </div>\r\n        <Table\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.data}\r\n        />\r\n        <Modal\r\n          visible={visibled}\r\n          title=\"Veuillez saisir les informations de la prestation\"\r\n          onOk={this.handleSubmited}\r\n          onCancel={this.handleCanceled}\r\n          afterClose={this.handleClosed}\r\n          style={{ top: 20 }}\r\n          width=\"900px\"\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCanceled}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={this.handleSubmited}\r\n              className=\"not-rounded\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n            <div>\r\n              <h3> AJOUT SINISTRE</h3>\r\n              <Divider />\r\n              <Row>\r\n                <Col span={22} offset={2}>\r\n                  <Form.Item label=\"Date Création\">\r\n                    {getFieldDecorator(\"dateCreation\", {\r\n                      initialValue: moment(this.state.dateCreation, dateFormat)\r\n                    })(\r\n                      <DatePicker\r\n                        format={dateFormat}\r\n                        style={{ width: \"60%\" }}\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={22} offset={2}>\r\n                  <Form.Item label=\"Nature Sinistre\">\r\n                    {getFieldDecorator(\"natureSinistre\")(\r\n                      <Select\r\n                        placeholder=\"Séléctionnez \"\r\n                        onChange={this.onSelectChange}\r\n                        style={{ width: \"60%\" }}\r\n                      >\r\n                        <Option value=\"Incendie\" label=\"Incendie\">\r\n                          Incendie\r\n                        </Option>\r\n                        <Option value=\"Vol\" label=\"Vol\">\r\n                          Vol\r\n                        </Option>\r\n                        <Option value=\"Bris des Glaces\" label=\"Bris des Glaces\">\r\n                          Bris des Glaces\r\n                        </Option>\r\n                        <Option value=\"Dégâts des Eaux\" label=\"Dégâts des Eaux\">\r\n                          Dégâts des Eaux\r\n                        </Option>\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={22} offset={2}>\r\n                  <Form.Item label=\"Date de survenance sinistre\">\r\n                    {getFieldDecorator(\"dateSurvenanceSinistre\")(\r\n                      <DatePicker\r\n                        format={dateFormat}\r\n                        style={{ width: \"60%\" }}\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={22} offset={2}>\r\n                  <Form.Item label=\"Date déclaration sinistre\">\r\n                    {getFieldDecorator(\"dateDeclarationSinistre\")(\r\n                      <DatePicker\r\n                        format={dateFormat}\r\n                        style={{ width: \"60%\" }}\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(ConsultationsContratsMrb);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Col,\r\n  Collapse,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Modal,\r\n  notification,\r\n  PageHeader,\r\n  Popconfirm,\r\n  Row,\r\n  Select,\r\n  Table,\r\n  Descriptions,\r\n  Empty,\r\n  AutoComplete,\r\n  Radio\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport AddPerMorale from \"../Production Prestations/Souscription/StepOne/AddPerMorale/AddPerMorale\";\r\nimport AddSouscripteur from \"../Production Prestations/Souscription/StepOne/AddPerPhysique/AddSouscripteur\";\r\nimport { getExclusion } from \"../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nimport ComponentTitle from \"../../util/Title/ComponentTitle\";\r\nimport {\r\n  addContratMrb,\r\n  getPeriodicite,\r\n  cpMrb\r\n} from \"../GestionContrats/ContratsAPI\";\r\nimport {\r\n  getAllProductMrb,\r\n  getTarificationMrb\r\n} from \"./ProduitMrb/ProduitMRBAPI\";\r\nimport {\r\n  getallperson,\r\n  getallPersonMorale,\r\n  getAllSecteurActivite,\r\n  getAllTypePersonneMorales,\r\n  getVois,\r\n  getProfession,\r\n  getSetuation,\r\n  getSexe\r\n} from \"../Participants/ParticipantAPI\";\r\nconst { Option } = Select;\r\nconst { Panel } = Collapse;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nlet key = 0;\r\nlet exclusFamille = \"MRB\";\r\nconst currentDate = moment(moment(), dateFormat).add(1, \"days\");\r\nclass MultirisqueBatiment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      typeAvenant: [],\r\n      visible: false,\r\n      produitMrb: [],\r\n      valeurBatiment: 0,\r\n      natureBatiment: \"\",\r\n      exclusionMrb: [],\r\n      dateEffet: moment(moment(), \"YYYY-MM-DD\").add(1, \"days\"),\r\n      dateEcheance: null,\r\n      nombreMois: 0,\r\n      periodicite: [],\r\n      radio: \"morale\",\r\n      souscripteur: \"\",\r\n      permorale: false,\r\n      perphysique: false,\r\n      sexe: [],\r\n      assure: \"\",\r\n      setuations: [],\r\n      professions: [],\r\n      vois: [],\r\n      dataloaded: false,\r\n      personlist: [],\r\n      personlistForAuto: [],\r\n      selectedPatente: [],\r\n      selectedCinSouscripteur: [],\r\n      selectedCinAsuree: [],\r\n      assurePresent: false,\r\n      typePersonneMoral: [],\r\n      secteurActivite: [],\r\n      personMoraleList: [],\r\n      personMoraleListForAuto: [],\r\n      souscripteurIsAssure: \"\",\r\n      disableSouscripteuretAssure: \"\",\r\n      primeHT: 0,\r\n      primeTTC: 0,\r\n      prorata: 0,\r\n      prorataTTC: 0,\r\n      primeEvcat: 0,\r\n      primeNette: 0,\r\n      fsec: 0,\r\n      dataSimulation: []\r\n    };\r\n    this.handleChangeCinSouscripteur = this.handleChangeCinSouscripteur.bind(\r\n      this\r\n    );\r\n    this.clearAutocompleteFields = this.clearAutocompleteFields.bind(this);\r\n    this.columns = [\r\n      {\r\n        title: \"Nom\",\r\n        dataIndex: \"nom\",\r\n        key: \"nom\"\r\n      },\r\n      {\r\n        title: \"Prénom\",\r\n        dataIndex: \"prenom\",\r\n        key: \"prenom\"\r\n      },\r\n      {\r\n        title: \"Masse Salariale Annuelle\",\r\n        dataIndex: \"masseSalarialeAnnuelle\",\r\n        key: \"masseSalarialeAnnuelle\"\r\n      },\r\n      {\r\n        title: \"Taux\",\r\n        dataIndex: \"taux\",\r\n        key: \"taux\"\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) =>\r\n          this.state.data.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"Sure to delete?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <a href=\"#top\">Supprimer</a>\r\n            </Popconfirm>\r\n          ) : null\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getProduitMrb();\r\n    this.getAllExclusionsMrb(exclusFamille);\r\n    this.getPeriodicites();\r\n    this.getproprties();\r\n  }\r\n  async conditionParticuliereMrb(requestCP) {\r\n    let response = await cpMrb(requestCP);\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  async getTariffication(valeur, nature) {\r\n    let response = await getTarificationMrb(valeur, nature);\r\n\r\n    this.setState({ tarification: response.data });\r\n  }\r\n  async getproprties() {\r\n    let vois = await getVois();\r\n    let personslist = await getallperson();\r\n    let gander = await getSexe();\r\n    let setuation = await getSetuation();\r\n    let profrssionResponse = await getProfession();\r\n    let personsMoraleListResponse = await getallPersonMorale();\r\n    let typePersonneMoraleResponse = await getAllTypePersonneMorales();\r\n    let secteurActiviteResponse = await getAllSecteurActivite();\r\n    let helpArray = [];\r\n    personslist.data.content.forEach(element => {\r\n      const object = element.cin;\r\n      helpArray.push(object);\r\n    });\r\n    let helpArraymorale = [];\r\n    personsMoraleListResponse.data.content.forEach(element => {\r\n      const object = element.patente;\r\n      helpArraymorale.push(object);\r\n    });\r\n    this.setState({\r\n      personMoraleList: [...personsMoraleListResponse.data.content],\r\n      sexe: [...gander.data],\r\n      setuations: [...setuation.data],\r\n      vois: [...vois.data],\r\n      dataloaded: true,\r\n      professions: [...profrssionResponse.data.content],\r\n      personlist: [...personslist.data.content],\r\n      personlistForAuto: [...helpArray],\r\n      personMoraleListForAuto: [...helpArraymorale],\r\n      typePersonneMoral: [...typePersonneMoraleResponse.data],\r\n      secteurActivite: [...secteurActiviteResponse.data.content]\r\n    });\r\n  }\r\n\r\n  searchPersonnemorale = value => {\r\n    const dataSource = [...this.state.personMoraleList];\r\n    this.setState({\r\n      souscripteur: dataSource.filter(item => item.patente === value.key)[0],\r\n      patente: value.key\r\n    });\r\n  };\r\n\r\n  searchPersonnePhysique = value => {\r\n    const dataSource = [...this.state.personlist];\r\n    this.setState({\r\n      souscripteur: dataSource.filter(item => item.cin === value.key)[0],\r\n      cin: value.key\r\n    });\r\n  };\r\n\r\n  onChangeSelect = value => {\r\n    const dataSource = [...this.state.personlist];\r\n    this.setState({\r\n      assurePresent: true,\r\n      assure: dataSource.filter(item => item.cin === value.key)[0]\r\n    });\r\n  };\r\n\r\n  handleChangeCinSouscripteur(value) {\r\n    const dataSource = [...this.state.personlist];\r\n    const data = dataSource.filter(item => item.cin === value.key)[0].id;\r\n    this.setState({ selectedCinSouscripteur: data });\r\n    this.props.form.setFieldsValue({\r\n      adresseBatiment: dataSource.filter(item => item.cin === value.key)[0]\r\n        .adressComplete\r\n    });\r\n  }\r\n\r\n  clearAutocompleteFields() {\r\n    this.props.form.setFieldsValue({\r\n      patente: \"\",\r\n      cin: \"\",\r\n      cinAssure: \"\",\r\n      numeroDossierFinancement: \"\"\r\n    });\r\n  }\r\n\r\n  handlePersonphyCreationSousctipteur = data => {\r\n    this.setState({ souscripteur: data, perphysique: true, permorale: false });\r\n    this.props.form.setFieldsValue({\r\n      cin: { key: data.cin, label: data.cin }\r\n    });\r\n  };\r\n\r\n  handlePersonMoraleCreationSousctipteur = data => {\r\n    this.setState({ souscripteur: data, permorale: true, perphysique: false });\r\n    this.props.form.setFieldsValue({\r\n      patente: { key: data.patente, label: data.patente }\r\n    });\r\n  };\r\n\r\n  handlePersonphyCreationAssure = data => {\r\n    let list = [...this.state.personlist];\r\n    list.push(data);\r\n    this.setState({ assure: data, assurePresent: true, personlist: [...list] });\r\n    this.props.form.setFieldsValue({\r\n      assure: { key: data.cin, label: data.cin }\r\n    });\r\n  };\r\n\r\n  handlechange = e => {\r\n    this.setState({\r\n      radio: e.target.value,\r\n      souscripteur: \"\",\r\n      assure: \"\",\r\n      souscripteurIsAssure: \"\",\r\n      disableSouscripteuretAssure: \"\"\r\n    });\r\n    this.clearAutocompleteFields();\r\n  };\r\n\r\n  onChange = e => {\r\n    if (this.state.radio === \"physique\" && e.target.checked) {\r\n      this.setState({\r\n        assure: this.state.souscripteur,\r\n        souscripteurIsAssure: true,\r\n        disableSouscripteuretAssure: true\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        assure: {\r\n          key: this.state.souscripteur.cin,\r\n          label: this.state.souscripteur.cin\r\n        }\r\n      });\r\n    } else\r\n      this.setState({\r\n        souscripteurIsAssure: false,\r\n        disableSouscripteuretAssure: false\r\n      });\r\n  };\r\n\r\n  calculeAge(date) {\r\n    return moment().diff(moment(date), \"years\");\r\n  }\r\n\r\n  async getPeriodicites() {\r\n    let response = await getPeriodicite();\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleDelete = keyMrb => {\r\n    const data = [...this.state.data];\r\n    this.setState({ data: data.filter(item => item.keyMrb !== keyMrb) });\r\n  };\r\n\r\n  handleOk = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      let request = {\r\n        key: key,\r\n        nom: values.nom,\r\n        prenom: values.prenom,\r\n        masseSalarialeAnnuelle: values.masseSalarialeAnnuelle,\r\n        taux: values.taux\r\n      };\r\n      this.state.data.push(request);\r\n      key = key + 1;\r\n    });\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  disabledDate = current => {\r\n    return (\r\n      current &&\r\n      current <\r\n        moment(moment().format(\"YYYY-MM-DD\"), \"YYYY-MM-DD\").add(2, \"days\")\r\n    );\r\n  };\r\n\r\n  handleEffetDateChange = value => {\r\n    if (this.state.dateEcheance !== null) {\r\n      let echeanceDate = this.state.dateEcheance;\r\n      this.setState({\r\n        dateEffet: value,\r\n        nombreMois: echeanceDate.diff(value, \"months\")\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeDuree = e => {\r\n    this.setState({\r\n      nombreMois: e.target.value,\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value)\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value),\r\n      nombreMois: parseInt(e.target.value)\r\n    });\r\n  };\r\n\r\n  disabledDateEcheance = current => {\r\n    return current && current < this.state.dateEffet.endOf(\"day\");\r\n  };\r\n\r\n  handleEcheanceDateChange = value => {\r\n    let effetDate = this.state.dateEffet;\r\n    this.setState({\r\n      dateEcheance: value,\r\n      nombreMois: value.diff(effetDate, \"months\")\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      nombreMois: value.diff(effetDate, \"months\")\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.form.setFieldsValue({\r\n      nom: \"\",\r\n      prenom: \"\",\r\n      masseSalarialeAnnuelle: \"\",\r\n      taux: \"\"\r\n    });\r\n  };\r\n\r\n  async ajouterContratMrb(values) {\r\n    try {\r\n      let response = await addContratMrb(values);\r\n      if (response.status === 200) {\r\n        let requestMrb = {\r\n          numeroSouscription: response.data.numeroContrat,\r\n          dateEcheance: response.data.dateEcheance,\r\n          dateEffet: response.data.dateEffet,\r\n          duree: response.data.dureeContrat,\r\n          agence: response.data.produitMrb.partenaire.raisonSocial,\r\n          raisonSocial: response.data.produitMrb.partenaire.raisonSocial,\r\n          siegeSocial: response.data.produitMrb.partenaire.siegeSocial,\r\n          typePartenaire: response.data.produitMrb.partenaire.typePartenaire,\r\n          adresse: response.data.produitMrb.partenaire.siegeSocial,\r\n          prenomSouscripteur: response.data.souscripteur.prenom,\r\n          nomSouscripteur: response.data.souscripteur.nom,\r\n          cinSouscripteur: response.data.souscripteur.cin,\r\n          adresseSouscripteur: response.data.souscripteur.adressComplete,\r\n          villeSouscripteur: response.data.souscripteur.adressVille,\r\n          ribSouscripteur: response.data.souscripteur.rib,\r\n          prenomAssure: response.data.assure.prenom,\r\n          nomAssure: response.data.assure.nom,\r\n          cinAssure: response.data.assure.cin,\r\n          adresseAssure: response.data.assure.adressComplete,\r\n          villeAssure: response.data.assure.adressVille,\r\n          ribAssure: response.data.assure.rib,\r\n          date: moment(new Date()).format(\"DD-MM-YYYY\"),\r\n          numeroCompte: response.data.souscripteur.rib,\r\n          typeBatiment: response.data.typeBatiment,\r\n          adresseBatiment: response.data.adresseBatiment,\r\n          numTitreFoncier: response.data.numeroTitreFoncier,\r\n          superficie: response.data.superficie,\r\n          caracteristique: response.data.description,\r\n          taciteReconduction: true,\r\n          periodicite: response.data.periodicite.libelle\r\n        };\r\n        this.conditionParticuliereMrb(requestMrb);\r\n\r\n        notification.success({\r\n          message: \"la souscription est bien faiteee\"\r\n        });\r\n      }\r\n      this.props.record.history.push(\"/ConsultationsContratsMrb\");\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message ||\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.valeurBatiment !== this.state.valeurBatiment ||\r\n      prevState.natureBatiment !== this.state.natureBatiment\r\n    ) {\r\n      if (\r\n        this.state.valeurBatiment !== \"\" &&\r\n        this.state.natureBatiment !== \"\" &&\r\n        this.state.natureBatiment !== null &&\r\n        this.state.valeurBatiment !== null\r\n      )\r\n        this.getTariffication(\r\n          this.state.valeurBatiment,\r\n          this.state.natureBatiment\r\n        );\r\n    }\r\n\r\n    if (prevState.tarification !== this.state.tarification) {\r\n      //tauxContribution est le meme montant de contribution est le prime nette\r\n      this.setState({ primeNette: this.state.tarification.tauxContribution });\r\n\r\n      //prime evcat\r\n      const prime_Evcat = (\r\n        (this.state.tarification.tauxContribution * 8) /\r\n        100\r\n      ).toFixed(2);\r\n\r\n      this.setState({ primeEvcat: prime_Evcat });\r\n\r\n      //prime HT\r\n      const prime_HT =\r\n        parseFloat(this.state.tarification.tauxContribution) +\r\n        parseFloat(prime_Evcat);\r\n\r\n      this.setState({ primeHT: prime_HT });\r\n      //taxe 14%\r\n      const taxe = ((prime_HT * 14) / 100).toFixed(2);\r\n\r\n      //FSEC 1%\r\n      const FSEC = ((prime_HT * 1) / 100).toFixed(2);\r\n      this.setState({ fsec: FSEC });\r\n\r\n      //prime TTC\r\n      const prime_TTC =\r\n        parseFloat(prime_HT) + parseFloat(taxe) + parseFloat(FSEC);\r\n      this.setState({ primeTTC: prime_TTC });\r\n\r\n      //prorata HT\r\n      let Prorata;\r\n      if (currentDate.format(\"D\") <= 15) {\r\n        Prorata = (prime_HT * ((13 - moment().format(\"M\")) / 12)).toFixed(2);\r\n        this.setState({ prorata: Prorata });\r\n      } else {\r\n        Prorata = (prime_HT * ((12 - moment().format(\"M\")) / 12)).toFixed(2);\r\n        this.setState({ prorata: Prorata });\r\n      }\r\n\r\n      // prorata TTC\r\n      const taxeAuProrata = ((Prorata * 14) / 100).toFixed(2);\r\n      const Prorata_TTC = parseFloat(taxeAuProrata) + parseFloat(Prorata);\r\n      this.setState({ prorataTTC: Prorata_TTC });\r\n\r\n      this.setState({\r\n        dataSimulation: [\r\n          {\r\n            key: \"1\",\r\n            primeNette: this.state.tarification.tauxContribution,\r\n            primeHT: prime_HT,\r\n            primeEvcat: prime_Evcat,\r\n            primeTTC: prime_TTC.toFixed(2),\r\n            prorata: Prorata,\r\n            prorataTTC: Prorata_TTC.toFixed(2)\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }\r\n  onChangeValeurBatiment = e => {\r\n    this.setState({ valeurBatiment: e.target.value });\r\n  };\r\n  onChangeNatureBatiment = e => {\r\n    this.setState({ natureBatiment: e });\r\n  };\r\n  async getAllExclusionsMrb(famille) {\r\n    let response = await getExclusion(famille);\r\n    this.setState({\r\n      exclusionMrb: response.data.content\r\n    });\r\n  }\r\n\r\n  async getProduitMrb() {\r\n    let response = await getAllProductMrb();\r\n    this.setState({\r\n      produitMrb: response.data.content\r\n    });\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      let exclus = [];\r\n      values.exclusion.forEach(element => {\r\n        exclus.push({ id: element });\r\n      });\r\n      values.exclusion = [...exclus];\r\n      let requestModel = {\r\n        numeroDossierFinancement: values.numeroDossierFinancement,\r\n        typeBatiment: values.typeBatiment,\r\n        adresseBatiment: values.adresseBatiment,\r\n        numeroTitreFoncier: values.numeroTitreFoncier,\r\n        superficie: values.superficie,\r\n        description: values.description,\r\n        dateEffet: this.state.dateEffet,\r\n        dateEcheance: values.dateEcheance,\r\n        souscripteur: { id: this.state.selectedCinSouscripteur },\r\n        assure: { id: this.state.assure.id },\r\n        produitMrb: { id: values.produit },\r\n        valeurContenu: values.valeurContenu,\r\n        situationRisque: values.situationRisque,\r\n        reduction: values.reduction,\r\n        exclusionsMrb: values.exclusion,\r\n        domestique: this.state.data,\r\n        periodicite: { id: values.periodicite },\r\n        dureeContrat: values.dureeContrat,\r\n        primeNette: this.state.primeNette,\r\n        primeTTC: this.state.primeTTC,\r\n        primeHT: this.state.primeHT,\r\n        primeEvcat: this.state.primeEvcat,\r\n        FESC: this.state.fsec,\r\n        prorata: this.state.prorata,\r\n        prorataTTC: this.state.prorataTTC\r\n      };\r\n\r\n      this.ajouterContratMrb(requestModel);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible } = this.state;\r\n    const age = moment().diff(\r\n      moment(this.state.souscripteur.dateNaissance, \"DD-MM-YYYY\").format(),\r\n      \"years\"\r\n    );\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 6 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 12 },\r\n        lg: { span: 15 }\r\n      }\r\n    };\r\n\r\n    const columnsSimulation = [\r\n      {\r\n        title: \"Prime Nette (DH)\",\r\n        dataIndex: \"primeNette\"\r\n      },\r\n      {\r\n        title: \"Prime HT (DH)\",\r\n        dataIndex: \"primeHT\"\r\n      },\r\n      {\r\n        title: \"Prime EVCAT (DH)\",\r\n        dataIndex: \"primeEvcat\"\r\n      },\r\n      {\r\n        title: \"Prime TTC(DH)\",\r\n        dataIndex: \"primeTTC\"\r\n      },\r\n\r\n      {\r\n        title: \"Prorata HT (DH)\",\r\n        dataIndex: \"prorata\"\r\n      },\r\n      {\r\n        title: \"Prorata TTC (DH)\",\r\n        dataIndex: \"prorataTTC\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Multirisques bâtiment\" />\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Doméstique Suplémentaire\"\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          afterClose={this.handleClose}\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCancel}\r\n              className=\"not-rounded\"\r\n            >\r\n              Annuler\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={this.handleOk}\r\n              className=\"not-rounded\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout} hideRequiredMark>\r\n            <Col>\r\n              <Form.Item label=\"Nom \">\r\n                {getFieldDecorator(\"nom\")(<Input className=\"not-rounded\" />)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Prénom \">\r\n                {getFieldDecorator(\"prenom\")(<Input className=\"not-rounded\" />)}\r\n              </Form.Item>\r\n              <Form.Item label=\"Masse Salariale \">\r\n                {getFieldDecorator(\"masseSalarialeAnnuelle\")(\r\n                  <Input className=\"not-rounded\" />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Taux \">\r\n                {getFieldDecorator(\"taux\")(<Input className=\"not-rounded\" />)}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n        <Form {...formItemLayout} hideRequiredMark>\r\n          <Row\r\n            style={{\r\n              border: \"1px solid rgb(235, 237, 240)\"\r\n            }}\r\n          >\r\n            <PageHeader title=\"DEVIS\" subTitle=\"Etablissement devis\" />\r\n            <Row>\r\n              <Row>\r\n                <Col span={23} offset={1}>\r\n                  <Divider orientation=\"left\">Produit</Divider>\r\n                </Col>\r\n                <Col span={22} offset={1}>\r\n                  <Form.Item label=\"Produit \">\r\n                    {getFieldDecorator(\"produit\", {\r\n                      valuePropName: \"selected\",\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Veuillez selectionner\"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Select placeholder=\"Sélectionnez \">\r\n                        {this.state.produitMrb.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.libelle}\r\n                            >\r\n                              {element.libelle}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Col offset={1} span={1}></Col>\r\n            </Row>\r\n            <Col offset={1} span={23}>\r\n              <div style={{ minHeight: \"200px\" }}>\r\n                <Col>\r\n                  <Divider orientation=\"left\">Souscripteur/Assuré</Divider>\r\n                </Col>\r\n                <Row>\r\n                  <Col span={8}>\r\n                    <Col span={24}>\r\n                      <Form.Item>\r\n                        {getFieldDecorator(\"radio\", {\r\n                          rules: [{ required: false }],\r\n                          initialValue: this.state.radio\r\n                        })(\r\n                          <Radio.Group\r\n                            style={{ marginBottom: 25 }}\r\n                            buttonStyle=\"solid\"\r\n                            defaultValue={this.state.radio}\r\n                            onChange={this.handlechange}\r\n                          >\r\n                            <Radio.Button value=\"morale\">\r\n                              Personne morale\r\n                            </Radio.Button>\r\n                            <Radio.Button value=\"physique\">\r\n                              Personne physique\r\n                            </Radio.Button>\r\n                          </Radio.Group>\r\n                        )}\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={24}>\r\n                      {this.state.radio === \"physique\" && (\r\n                        <Form.Item label=\"CIN\">\r\n                          {getFieldDecorator(\"cin\", {\r\n                            rules: [\r\n                              { required: true, message: \"CIN is required!\" }\r\n                            ]\r\n                          })(\r\n                            <AutoComplete\r\n                              disabled={this.state.disableSouscripteuretAssure}\r\n                              defaultActiveFirstOption\r\n                              size=\"default\"\r\n                              style={{ width: 200 }} // 215 ecran pc bureau\r\n                              dataSource={this.state.personlistForAuto}\r\n                              onSelect={this.searchPersonnePhysique}\r\n                              allowClear={true}\r\n                              value={this.state.selectedCinSouscripteur}\r\n                              onChange={this.handleChangeCinSouscripteur}\r\n                              labelInValue\r\n                              placeholder=\"CIN\"\r\n                              filterOption={(inputValue, option) =>\r\n                                option.props.children\r\n                                  .toUpperCase()\r\n                                  .indexOf(inputValue.toUpperCase()) !== -1\r\n                              }\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      )}\r\n                      {this.state.radio === \"morale\" && (\r\n                        <Form.Item label=\"Patente\">\r\n                          {getFieldDecorator(\"patente\", {\r\n                            rules: [\r\n                              {\r\n                                required: true,\r\n                                message: \"patente is required!\"\r\n                              }\r\n                            ]\r\n                          })(\r\n                            <AutoComplete\r\n                              size=\"default\"\r\n                              className=\"not-rounded\"\r\n                              style={{ width: 182 }} // 192 pc bureau\r\n                              dataSource={this.state.personMoraleListForAuto}\r\n                              onSelect={this.searchPersonnemorale}\r\n                              allowClear={true}\r\n                              labelInValue\r\n                              placeholder=\"Numéro de patente\"\r\n                              filterOption={(inputValue, option) =>\r\n                                option.props.children\r\n                                  .toUpperCase()\r\n                                  .indexOf(inputValue.toUpperCase()) !== -1\r\n                              }\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      )}\r\n                      <Form.Item style={{ float: \"right\" }}>\r\n                        {this.state.dataloaded &&\r\n                          this.state.radio === \"physique\" && (\r\n                            <AddSouscripteur\r\n                              titre=\"Création d'un nouveau souscripteur physique\"\r\n                              personCreation={\r\n                                this.handlePersonphyCreationSousctipteur\r\n                              }\r\n                              professions={this.state.professions}\r\n                              sexe={this.state.sexe}\r\n                              setuation={this.state.setuations}\r\n                              vois={this.state.vois}\r\n                            />\r\n                          )}\r\n                        {this.state.dataloaded &&\r\n                          this.state.radio === \"morale\" && (\r\n                            <AddPerMorale\r\n                              titre=\"Création d'un nouveau souscripteur morale\"\r\n                              personCreation={\r\n                                this.handlePersonMoraleCreationSousctipteur\r\n                              }\r\n                              typePersonneMoral={this.state.typePersonneMoral}\r\n                              secteurActivite={this.state.secteurActivite}\r\n                              vois={this.state.vois}\r\n                            />\r\n                          )}\r\n                      </Form.Item>\r\n                      {this.state.radio === \"physique\" && (\r\n                        <Checkbox\r\n                          style={{ marginTop: \"10px\" }}\r\n                          onChange={this.onChange}\r\n                          checked={this.state.souscripteurIsAssure}\r\n                          disabled={!this.state.radio === \"physique\"}\r\n                        >\r\n                          Le souscripteur est l&apos;assuré lui même ?\r\n                        </Checkbox>\r\n                      )}\r\n                      <Divider style={{ marginTop: \"20px\" }}></Divider>\r\n                    </Col>\r\n                  </Col>\r\n                  <Col offset={1} span={14}>\r\n                    {this.state.radio === \"physique\" &&\r\n                      this.state.souscripteur !== \"\" && (\r\n                        <Descriptions\r\n                          size=\"small\"\r\n                          column={2}\r\n                          bordered={true}\r\n                          title=\"Informations du souscripteur physique\"\r\n                        >\r\n                          <Descriptions.Item label=\"Prénom\">\r\n                            {this.state.souscripteur.prenom}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Nom\">\r\n                            {this.state.souscripteur.nom}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Date de naissance\">\r\n                            {this.state.souscripteur.dateNaissance}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Age\">\r\n                            {age}{\" \"}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"CIN\">\r\n                            {this.state.souscripteur.cin}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"RIB\">\r\n                            {this.state.souscripteur.rib}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Matricule\">\r\n                            {this.state.souscripteur.matricule}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"N° Tiers\">\r\n                            {this.state.souscripteur.numTiers}\r\n                          </Descriptions.Item>\r\n                        </Descriptions>\r\n                      )}\r\n\r\n                    {this.state.souscripteur === \"\" && (\r\n                      <Empty\r\n                        description=\"Merci de mentionner le numéro de patente ou cin\"\r\n                        style={{\r\n                          margin: \"3% auto\",\r\n                          color: \"rgba(0, 0, 0, 0.45)\"\r\n                        }}\r\n                      />\r\n                    )}\r\n                    {this.state.radio === \"morale\" &&\r\n                      this.state.souscripteur !== \"\" && (\r\n                        <Descriptions\r\n                          size=\"small\"\r\n                          column={2}\r\n                          bordered={true}\r\n                          title=\"Informations du souscripteur morale\"\r\n                        >\r\n                          <Descriptions.Item label=\"Abb\">\r\n                            {this.state.souscripteur.abb}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Raison sociale\">\r\n                            {this.state.souscripteur.raisonSociale}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Patente\">\r\n                            {this.state.souscripteur.patente}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Ice\">\r\n                            {this.state.souscripteur.ice}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Code\">\r\n                            {this.state.souscripteur.code}\r\n                          </Descriptions.Item>\r\n                        </Descriptions>\r\n                      )}\r\n                  </Col>\r\n                  <Col offset={1} span={1}></Col>\r\n                </Row>\r\n              </div>\r\n              <div style={{ minHeight: \"200px\" }}>\r\n                <Row style={{ marginTop: \"20px\" }}>\r\n                  <ComponentTitle level={4} title=\"L'assuré\" />\r\n                  <Col span={8}>\r\n                    <Col span={24}>\r\n                      <Form.Item label=\"L'assuré\">\r\n                        {getFieldDecorator(\"cinAssure\", {\r\n                          rules: [\r\n                            { required: true, message: \"assuree is required!\" }\r\n                          ]\r\n                        })(\r\n                          <AutoComplete\r\n                            disabled={\r\n                              this.state.disableSouscripteuretAssure &&\r\n                              this.state.radio === \"physique\"\r\n                            }\r\n                            size=\"default\"\r\n                            style={{ width: 182 }}\r\n                            dataSource={this.state.personlistForAuto}\r\n                            onSelect={this.onChangeSelect}\r\n                            allowClear={true}\r\n                            labelInValue\r\n                            placeholder=\"ajouter un assuré\"\r\n                            filterOption={(inputValue, option) =>\r\n                              option.props.children\r\n                                .toUpperCase()\r\n                                .indexOf(inputValue.toUpperCase()) !== -1\r\n                            }\r\n                          />\r\n                        )}\r\n                      </Form.Item>\r\n                      <Form.Item style={{ float: \"right\" }}>\r\n                        {this.state.dataloaded && (\r\n                          <AddSouscripteur\r\n                            titre=\"Création d'un nouveau assuré\"\r\n                            personCreation={this.handlePersonphyCreationAssure}\r\n                            professions={this.state.professions}\r\n                            sexe={this.state.sexe}\r\n                            setuation={this.state.setuations}\r\n                            vois={this.state.vois}\r\n                          />\r\n                        )}\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={24}></Col>\r\n                  </Col>\r\n                  <Col offset={1} span={14}>\r\n                    {this.state.assure !== \"\" && (\r\n                      <Descriptions\r\n                        size=\"small\"\r\n                        column={2}\r\n                        bordered={true}\r\n                        title=\"Informations de l'assuré\"\r\n                      >\r\n                        <Descriptions.Item label=\"Prénom\">\r\n                          {this.state.assure.prenom}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Nom\">\r\n                          {this.state.assure.nom}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Date de naissance\">\r\n                          {this.state.assure.dateNaissance}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Age\">\r\n                          {age}{\" \"}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"CIN\">\r\n                          {this.state.assure.cin}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Matricule\">\r\n                          {this.state.assure.matricule}\r\n                        </Descriptions.Item>\r\n                      </Descriptions>\r\n                    )}\r\n\r\n                    {this.state.assure === \"\" && (\r\n                      <Empty\r\n                        description=\"Merci de remplir la partie assure\"\r\n                        style={{\r\n                          margin: \"3% auto\",\r\n                          color: \"rgba(0, 0, 0, 0.45)\"\r\n                        }}\r\n                      />\r\n                    )}\r\n                  </Col>\r\n                  <Col offset={1} span={1}></Col>\r\n                </Row>\r\n              </div>\r\n            </Col>\r\n            <Col offset={1} span={1}></Col>\r\n          </Row>\r\n          <Row>\r\n            <Col span={22} offset={1}>\r\n              <Divider orientation=\"left\">Periodicité</Divider>\r\n            </Col>\r\n            <Col span={11} offset={1}>\r\n              <Form.Item label=\"Date d'effet\">\r\n                {getFieldDecorator(\"dateEffet\", {\r\n                  valuePropName: \"selected\"\r\n                })(\r\n                  <DatePicker\r\n                    className=\"date-style\"\r\n                    format={dateFormat}\r\n                    style={{ width: \"100%\" }}\r\n                    disabledDate={this.disabledDate}\r\n                    defaultValue={this.state.dateEffet}\r\n                    onChange={this.handleEffetDateChange}\r\n                  ></DatePicker>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Durée de la couverture\">\r\n                {getFieldDecorator(\"dureeContrat\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/^[0-9\\b]+$/),\r\n                      message: \"Format invalide !\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    className=\"number-input\"\r\n                    onChange={this.onChangeDuree}\r\n                    addonAfter=\"Mois\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={11}>\r\n              <Form.Item label=\"Date d'échéance\" hasFeedback>\r\n                {getFieldDecorator(\"dateEcheance\", {\r\n                  valuePropName: \"selected\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une date d'echeance\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    className=\"date-style\"\r\n                    format={dateFormat}\r\n                    style={{ width: \"100%\" }}\r\n                    disabledDate={this.disabledDateEcheance}\r\n                    value={this.state.dateEcheance}\r\n                    onChange={this.handleEcheanceDateChange}\r\n                  ></DatePicker>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Périodicité\">\r\n                {getFieldDecorator(\"periodicite\", {\r\n                  rules: [\r\n                    {\r\n                      required: true\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select placeholder=\"Sélectionnez \">\r\n                    {this.state.periodicite.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Divider />\r\n          </Row>\r\n          <Row\r\n            style={{\r\n              border: \"1px solid rgb(235, 237, 240)\",\r\n              marginTop: \"3%\"\r\n            }}\r\n          >\r\n            <PageHeader\r\n              title=\"Multirisques Habitation\"\r\n              style={{ marginBottom: \"3%\" }}\r\n            />\r\n            <Col offset={1} span={22}>\r\n              <Collapse\r\n                accordion\r\n                style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n              >\r\n                <Panel header=\"Informations Générales\" key=\"1\">\r\n                  <Col span={22}>\r\n                    <Divider orientation=\"left\">\r\n                      Informations Principales\r\n                    </Divider>\r\n                  </Col>\r\n                  <Col span={13}>\r\n                    <Form.Item label=\"N° dossier de financement\">\r\n                      {getFieldDecorator(\"numeroDossierFinancement\")(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Situation du Risque \">\r\n                      {getFieldDecorator(\"situationRisque\")(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Adresse de Bâtiment\">\r\n                      {getFieldDecorator(\"adresseBatiment\")(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"N° du titre foncier\">\r\n                      {getFieldDecorator(\"numeroTitreFoncier\")(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Catégorie\">\r\n                      {getFieldDecorator(\"categorie\")(<Input />)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"Nature de Bâtiment\">\r\n                      {getFieldDecorator(\"typeBatiment\")(\r\n                        <Select\r\n                          placeholder=\"Sélectionnez \"\r\n                          onChange={this.onChangeNatureBatiment}\r\n                        >\r\n                          <Option value=\"Appartement\" label=\"Appartement\">\r\n                            Appartement\r\n                          </Option>\r\n                          <Option value=\"Maison\" label=\"Maison\">\r\n                            Maison\r\n                          </Option>\r\n                          <Option value=\"Villa\" label=\"Villa\">\r\n                            Villa\r\n                          </Option>\r\n                          <Option value=\"Bâtiment\" label=\"Bâtiment\">\r\n                            Bâtiment\r\n                          </Option>\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Valeur batiment\">\r\n                      {getFieldDecorator(\"valeurContenu\")(\r\n                        <Input onChange={this.onChangeValeurBatiment} />\r\n                      )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Superficie\">\r\n                      {getFieldDecorator(\"superficie\")(\r\n                        <Input addonAfter=\"m²\" />\r\n                      )}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Description\">\r\n                      {getFieldDecorator(\"description\")(<Input />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Type Propriété\">\r\n                      {getFieldDecorator(\"typePropriete\")(\r\n                        <Select\r\n                          placeholder=\"Sélectionnez \"\r\n                          onChange={this.handleChange}\r\n                        >\r\n                          <Option value=\"Propriété1\" label=\"Propriété1\">\r\n                            Propriété1\r\n                          </Option>\r\n                          <Option value=\"Propriété2\" label=\"Propriété2\">\r\n                            Propriété2\r\n                          </Option>\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24}></Col>\r\n                  <Col span={22}>\r\n                    <Divider orientation=\"left\">Exclusion</Divider>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Form.Item label=\"Exclusion \">\r\n                      {getFieldDecorator(\"exclusion\")(\r\n                        <Select placeholder=\"Sélectionnez... \" mode=\"multiple\">\r\n                          {this.state.exclusionMrb.map(element => {\r\n                            return (\r\n                              <Option\r\n                                key={element.id}\r\n                                value={element.id}\r\n                                label={element.exclusionNom}\r\n                              >\r\n                                {element.exclusionNom}\r\n                              </Option>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={22}>\r\n                    <Divider orientation=\"left\">Réduction Mutuelle</Divider>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Form.Item label=\"Réduction \">\r\n                      {getFieldDecorator(\"reduction\")(<Input />)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Panel>\r\n                <Panel header=\"Détail du Risque\" key=\"2\">\r\n                  <Col span={22}>\r\n                    <Divider orientation=\"left\">\r\n                      Doméstique Suplémentaire\r\n                    </Divider>\r\n                  </Col>\r\n                  <Table\r\n                    bordered\r\n                    rowClassName=\"editable-row\"\r\n                    columns={this.columns}\r\n                    dataSource={this.state.data}\r\n                  />\r\n                  <Col span={22}>\r\n                    <Form.Item>\r\n                      <Button\r\n                        type=\"primary\"\r\n                        className=\"not-rounded\"\r\n                        onClick={this.showModal}\r\n                      >\r\n                        <Icon type=\"plus\" />\r\n                        Ajouter\r\n                      </Button>\r\n                      <Button style={{ marginLeft: 8 }} className=\"not-rounded\">\r\n                        <Icon type=\"sync\" />\r\n                        Actualiser\r\n                      </Button>\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Panel>\r\n                <Panel header=\"Garanties\" key=\"3\">\r\n                  <table>\r\n                    <tr>\r\n                      <th>Garantie</th>\r\n                      <th>Montant garantie</th>\r\n                      <th>Franchise</th>\r\n                      <th>Cotisation HT Annuelle</th>\r\n                      <th>Cotisation HT Prorate</th>\r\n                      <th>Taxe Prorate</th>\r\n                      <th>TTC Prorate</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        {\" \"}\r\n                        <h3>Garanties de base</h3>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Checkbox defaultChecked />\r\n                        Vol\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"volCapital\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"volFranchaise\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Checkbox defaultChecked />\r\n                        Incendie\r\n                      </td>\r\n                      <td>\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"incendieCapital\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"incendieFranchaise\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Checkbox defaultChecked />\r\n                        EVCAT\r\n                      </td>\r\n                      <td>\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"evcatCapital\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"evcatFranchaise\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Checkbox defaultChecked />\r\n                        Bris des Glaces\r\n                      </td>\r\n                      <td>\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"brisGlaceCapital\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"brisGlaceFranchaise\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Checkbox defaultChecked />\r\n                        Dégâts des Eaux\r\n                      </td>\r\n                      <td>\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"degatEauCapital\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"degatEauFranchaise\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <h3>Garanties optionnelles</h3>\r\n                      </td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                      <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Checkbox defaultChecked />\r\n                        RC Chef de Famille\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"RcCapital\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"RcFranchaise\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <Checkbox />\r\n                        AT Bonne\r\n                      </td>\r\n                      <td>\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"AtBonneCapital\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>\r\n                        {\" \"}\r\n                        <Form.Item>\r\n                          {getFieldDecorator(\"AtBonneFranchaise\")(<Input />)}\r\n                        </Form.Item>\r\n                      </td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                      <td>0.00</td>\r\n                    </tr>\r\n                  </table>\r\n                </Panel>\r\n              </Collapse>\r\n              <Row gutter={16} style={{ padding: \"20px\" }}>\r\n                <Table\r\n                  className=\"table-simulation simulation-mrb\"\r\n                  columns={columnsSimulation}\r\n                  dataSource={this.state.dataSimulation}\r\n                  pagination={false}\r\n                  align=\"center\"\r\n                  size=\"middle\"\r\n                />\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row gutter={16}>\r\n            <Col span={24}>\r\n              <div style={{ float: \"right\", marginTop: \"3%\" }}>\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    className=\"not-rounded rech-btn\"\r\n                    style={{ width: \"200px\" }}\r\n                    onClick={this.handleSubmit}\r\n                  >\r\n                    Enregistrer\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(MultirisqueBatiment);\r\n","import {\r\n  Button,\r\n  Checkbox,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Row,\r\n  Table\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { MyContext } from \"./ProduitMRB\";\r\n\r\nclass ProduitMRBDetails extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      record: {},\r\n      value: \"\",\r\n      keyRecord: \"\"\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Nature du bien assuré\",\r\n        dataIndex: \"natureBienAssure\",\r\n        key: \"natureBienAssure\"\r\n      },\r\n      {\r\n        title: \"Valeur Min\",\r\n        dataIndex: \"valeurMin\",\r\n        key: \"valeurMin\"\r\n      },\r\n      {\r\n        title: \"Valeur Max\",\r\n        dataIndex: \"valeurMax\",\r\n        key: \"valeurMax\"\r\n      },\r\n      {\r\n        title: \"Age Min \",\r\n        dataIndex: \"ageMin\",\r\n        key: \"ageMin\"\r\n      },\r\n      {\r\n        title: \"Age Max \",\r\n        dataIndex: \"ageMax\",\r\n        key: \"ageMax\"\r\n      },\r\n      {\r\n        title: \"Taux de contribution \",\r\n        dataIndex: \"tauxContribution\",\r\n        key: \"tauxContribution\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  handleReload() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 10\r\n      },\r\n      wrapperCol: {\r\n        span: 12\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"person\">\r\n        <MyContext.Consumer>\r\n          {context => (\r\n            <React.Fragment>\r\n              <h3>Détails du produit : {context.state.libelle}</h3>\r\n              <Divider\r\n                style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n              ></Divider>\r\n              <Row\r\n                style={{\r\n                  backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                  marginBottom: \"30px\",\r\n                  marginTop: \"10px\"\r\n                }}\r\n              >\r\n                <Col span={22} offset={1}>\r\n                  <h3>Informations Générale</h3>\r\n                  <Divider\r\n                    style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n                  ></Divider>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form {...formItemLayout}>\r\n                    <Col span={11} offset={1}>\r\n                      <Form.Item label=\"Code\">\r\n                        <Input value={context.state.code} />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Frais de gestion\">\r\n                        <Input value={context.state.fraisGestion} />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Mantant max de garantie\">\r\n                        <Input value={context.state.montantMaximumGarantie} />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Partenaire\">\r\n                        <Input value={context.state.partenaire.raisonSocial} />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                      <Form.Item label=\"libelle\">\r\n                        <Input value={context.state.libelle} />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"TVA frais de gestion\">\r\n                        <Input value={context.state.tvaFraisGestion} />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Taux taxe\">\r\n                        <Input value={context.state.tauxTaxe} />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={23} offset={1}>\r\n                      <label>\r\n                        <Form.Item label=\" Délai de prescription de l’offre EART\" />\r\n                      </label>\r\n                    </Col>\r\n                    <Col span={11} offset={1}>\r\n                      <Form.Item label=\"En l’attente du retour client\">\r\n                        <Input value={context.state.delaiPrescription} />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={11}>\r\n                      <Form.Item label=\"Client sans souscription\">\r\n                        <Input\r\n                          value={\r\n                            context.state.delaiPrescriptionSansSouscription\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={22} offset={1}>\r\n                      <h3>Assuré/Participant</h3>\r\n                      <Divider\r\n                        style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n                      ></Divider>\r\n                    </Col>\r\n                    <Col span={8} offset={1}>\r\n                      <Form.Item label=\"Nature du participant\">\r\n                        <Input value={context.state.natureParticipant} />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={7}>\r\n                      <Form.Item label=\"Nature d'assuré\">\r\n                        <Input value={context.state.natureAssure} />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={8}>\r\n                      <Form.Item>\r\n                        <Checkbox checked={context.state.assureDiffParticipant}>\r\n                          Assuré différent du participant\r\n                        </Checkbox>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={22} offset={1}>\r\n                      <h3>Franchise</h3>\r\n                      <Divider\r\n                        style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n                      ></Divider>\r\n                    </Col>\r\n                    <Col span={8} offset={1}>\r\n                      <Form.Item>\r\n                        <Checkbox checked={context.state.franchiseIncendie}>\r\n                          Franchise incendie\r\n                        </Checkbox>\r\n                      </Form.Item>\r\n                      <Form.Item>\r\n                        <Checkbox checked={context.state.franchiseBrisGlace}>\r\n                          Franchise bris de glace\r\n                        </Checkbox>\r\n                      </Form.Item>\r\n                      <Form.Item>\r\n                        <Checkbox checked={context.state.franchiseDegatEaux}>\r\n                          Franchise dégât des eaux\r\n                        </Checkbox>\r\n                      </Form.Item>\r\n                      <Form.Item>\r\n                        <Checkbox\r\n                          checked={context.state.franchiseCatastropheNaturelles}\r\n                        >\r\n                          Franchise catastrophes naturelles\r\n                        </Checkbox>\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={22} offset={1}>\r\n                      <h3>Tarification</h3>\r\n                      <Divider\r\n                        style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n                      ></Divider>\r\n                    </Col>\r\n                    <Col span={22} offset={1}>\r\n                      <Table\r\n                        rowClassName=\"editable-row\"\r\n                        columns={this.columns}\r\n                        dataSource={context.record}\r\n                        pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n                      />\r\n                    </Col>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n            </React.Fragment>\r\n          )}\r\n        </MyContext.Consumer>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"add-button\"\r\n          onClick={() => this.handleReload()}\r\n        >\r\n          <Icon type=\"arrow-left\" />\r\n          Retour\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ProduitMRBDetails;\r\n","import \"antd/dist/antd.css\";\r\nimport { Button, Divider, Form, Icon, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport ProduitMRBDetails from \"./ProduitMRBDetails.js\";\r\nimport { getAllProductMrb, getTarificationsMrb } from \"./ProduitMRBAPI\";\r\nimport { getColumnSearchProps } from \"../../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\n\r\nexport const MyContext = React.createContext();\r\nclass ProduitMRB extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      isEdited: false,\r\n      tarificationMrb: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        ...getColumnSearchProps(\"code\", \"Code\", this)\r\n      },\r\n      {\r\n        title: \"Libelle\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\",\r\n        ...getColumnSearchProps(\"libelle\", \"Libelle\", this)\r\n      },\r\n      {\r\n        title: \"Date création\",\r\n        dataIndex: \"creationDate\",\r\n        key: \"creation_date\",\r\n        ...getColumnSearchProps(\"creationDate\", \"Date creation\", this)\r\n      },\r\n      {\r\n        title: \"Nature Assuré \",\r\n        dataIndex: \"natureAssure\",\r\n        key: \"natureAssure\",\r\n        ...getColumnSearchProps(\"natureAssure\", \"natureAssure\", this)\r\n      },\r\n      {\r\n        title: \"Nature du participant\",\r\n        dataIndex: \"natureParticipant\",\r\n        key: \"natureParticipant\",\r\n        ...getColumnSearchProps(\"natureParticipant\", \"natureParticipant\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/ModifieProduitMRB\",\r\n                  state: { record: record }\r\n                }}\r\n              >\r\n                Modifier\r\n              </Link>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <a onClick={() => this.handleClick(record)}>Détails</a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  componentDidMount() {\r\n    this.getProductMrb();\r\n  }\r\n\r\n  async getProductMrb() {\r\n    let response = await getAllProductMrb();\r\n    this.setState({\r\n      data: response.data.content\r\n    });\r\n  }\r\n\r\n  handleClick = value => {\r\n    this.setState({ record: value, isEdited: true });\r\n    this.getTarificationMrb(value.id);\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n  onClose = () => {\r\n    this.setState({\r\n      isEdited: false\r\n    });\r\n  };\r\n\r\n  async getTarificationMrb(idproduct) {\r\n    let response = await getTarificationsMrb(idproduct);\r\n    this.setState({\r\n      tarificationMrb: response.data.content\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Provider\r\n          value={{\r\n            state: this.state.record,\r\n            record: this.state.tarificationMrb\r\n          }}\r\n        >\r\n          {this.state.isEdited ? (\r\n            <ProduitMRBDetails />\r\n          ) : (\r\n            <div>\r\n              <ComponentTitle title=\"Paramétrage produit MRB\" />\r\n              <Button type=\"primary\" className=\"add-button\">\r\n                <Link to=\"/AjoutProduit\">\r\n                  <Icon type=\"plus\" /> Nouveau produit MRB\r\n                </Link>\r\n              </Button>\r\n              <Table\r\n                rowClassName=\"editable-row\"\r\n                columns={this.columns}\r\n                dataSource={this.state.data}\r\n                pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n              />\r\n            </div>\r\n          )}\r\n        </MyContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(ProduitMRB);\r\n","import \"./CreateTypeAvenant.css\";\r\nimport { Button, Drawer, Form, Icon, Input, notification } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { NAME_MAX_LENGTH, NAME_MIN_LENGTH } from \"../../../constants/index\";\r\nimport { addTypeAvenant } from \"./AvenantAPI\";\r\n\r\nconst FormItem = Form.Item;\r\nexport class CreateTypeAvenant extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      abreviation: {\r\n        value: \"\"\r\n      },\r\n      libelle: {\r\n        value: \"\"\r\n      }\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event, validationFun) {\r\n    const target = event.target;\r\n    const inputName = target.name;\r\n    const inputValue = target.value;\r\n    this.setState({\r\n      [inputName]: {\r\n        value: inputValue,\r\n        ...validationFun(inputValue)\r\n      }\r\n    });\r\n  }\r\n\r\n  async ajouterTypeAvenant(values) {\r\n    try {\r\n      let response = await addTypeAvenant(values);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"La création est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"Ce type avenant existe déja\") {\r\n        notification.error({\r\n          message: \"Ce type avenant existe déja.\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message ||\r\n            \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const createTypeAvenantRequest = {\r\n      code: this.state.abreviation.value,\r\n      libelle: this.state.libelle.value\r\n    };\r\n\r\n    this.ajouterTypeAvenant(createTypeAvenantRequest);\r\n  }\r\n\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"add-button\"\r\n          onClick={this.showDrawer}\r\n          style={{ borderRadius: \"0px\" }}\r\n        >\r\n          <Icon type=\"plus\" /> Nouveau Type Avenant\r\n        </Button>\r\n        <Drawer\r\n          title=\"\"\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form onSubmit={this.handleSubmit} className=\"signup-form\">\r\n            <FormItem\r\n              label=\"Abréviation\"\r\n              validateStatus={this.state.abreviation.validateStatus}\r\n            >\r\n              <Input\r\n                size=\"default\"\r\n                name=\"abreviation\"\r\n                autoComplete=\"off\"\r\n                className=\"not-rounded\"\r\n                placeholder=\"Code\"\r\n                value={this.state.abreviation.value}\r\n                onChange={event =>\r\n                  this.handleInputChange(event, this.validateTest)\r\n                }\r\n              />\r\n            </FormItem>\r\n            <FormItem\r\n              label=\"Libelle\"\r\n              hasFeedback\r\n              validateStatus={this.state.libelle.validateStatus}\r\n            >\r\n              <Input\r\n                size=\"default\"\r\n                name=\"libelle\"\r\n                className=\"not-rounded\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"Libelle\"\r\n                value={this.state.libelle.value}\r\n                onChange={event =>\r\n                  this.handleInputChange(event, this.validateTest)\r\n                }\r\n              />\r\n            </FormItem>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  validateTest = abreviation => {\r\n    if (abreviation.length < NAME_MIN_LENGTH) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\r\n      };\r\n    } else if (abreviation.length > NAME_MAX_LENGTH) {\r\n      return {\r\n        validationStatus: \"error\",\r\n        errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\r\n      };\r\n    } else {\r\n      return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\nexport default CreateTypeAvenant;\r\n","/* eslint-disable react/prop-types */\r\nimport { Form, Input, notification, Popconfirm, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nimport { getAllAvenants, updateAvenant } from \"./AvenantAPI\";\r\nimport CreateTypeAvenant from \"./CreateTypeAvenant\";\r\n\r\nconst EditableContext = React.createContext();\r\nexport class TypeAvenant extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editingKey: \"\",\r\n      searchText: \"\",\r\n      searchedColumn: \"\"\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Abréviation\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        width: \"40%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"code\", \"code\", this)\r\n      },\r\n      {\r\n        title: \"Libelle\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\",\r\n        width: \"40%\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"libelle\", \"libelle\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"Sure to cancel?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Fermer</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => {\r\n                  this.edit(record.key);\r\n                }}\r\n              >\r\n                Modifier\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  updateAvenants = (id, updatedAvenant) => {\r\n    updateAvenant(id, updatedAvenant)\r\n      .then(response => {})\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrecte. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  rechercheAvenants = () => {\r\n    getAllAvenants()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrecte. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.rechercheAvenants();\r\n  }\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  isEditing = record => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row\r\n        });\r\n\r\n        this.updateAvenants(item.id, row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: record => ({\r\n          record,\r\n          inputType: col.dataIndex === \"text\",\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record)\r\n        })\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des types avenants\" />\r\n        <EditableContext.Provider value={this.props.form}>\r\n          <CreateTypeAvenant />\r\n          <Table\r\n            rowClassName=\"editable-row\"\r\n            components={components}\r\n            columns={columns}\r\n            dataSource={this.state.data}\r\n            pagination={{\r\n              defaultCurrent: 1,\r\n              defaultPageSize: 5,\r\n              onChange: this.cancel\r\n            }}\r\n          />\r\n        </EditableContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex]\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(TypeAvenant);\r\n","import \"./CreatePartenaire.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  BRANCH_TYPE_DECES,\r\n  BRANCH_TYPE_DECES_ET_RETRAITE,\r\n  BRANCH_TYPE_RETRAITE,\r\n  NAME_MAX_LENGTH,\r\n  NAME_MIN_LENGTH,\r\n  NUMERO_COMPTE_LENGTH\r\n} from \"../../../constants/index\";\r\nimport { addPartenaire } from \"./PartenaireAPI\";\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\nlet type = \"\";\r\nexport class CreatePartenaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      abreviation: {\r\n        value: \"\"\r\n      },\r\n      raisonSocial: {\r\n        value: \"\"\r\n      },\r\n      numeroCompte: {\r\n        value: \"\"\r\n      },\r\n      typePartenaire: {\r\n        value: \"\"\r\n      },\r\n\r\n      telephone: {\r\n        value: \"\"\r\n      },\r\n      siegeSocial: {\r\n        value: \"\"\r\n      },\r\n      TVA: {\r\n        value: \"\"\r\n      },\r\n      fraisAcquisition: {\r\n        value: \"\"\r\n      },\r\n      brancheType: {}\r\n    };\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event, validationFun) {\r\n    const target = event.target;\r\n    const inputName = target.name;\r\n    const inputValue = target.value;\r\n    this.setState({\r\n      [inputName]: {\r\n        value: inputValue,\r\n        ...validationFun(inputValue)\r\n      }\r\n    });\r\n  }\r\n\r\n  async ajouterPartenaire(values) {\r\n    try {\r\n      let response = await addPartenaire(values);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"La création est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"Cet intermédiaire existe déja\") {\r\n        notification.error({\r\n          message: \"Cet intermédiaire existe déja.\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message ||\r\n            \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSelectChange = value => {\r\n    type = value;\r\n  };\r\n\r\n  handleBranchetypeChange = value => {\r\n    this.setState({ brancheType: value });\r\n  };\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const createPartenaireRequest = {\r\n      code: this.state.abreviation.value,\r\n      raisonSocial: this.state.raisonSocial.value,\r\n      numeroCompte: this.state.numeroCompte.value,\r\n      typePartenaire: type,\r\n      telephone: this.state.telephone.value,\r\n      siegeSocial: this.state.siegeSocial.value,\r\n      fraisAcquisition: this.state.fraisAcquisition.value,\r\n      tva: this.state.TVA.value,\r\n      brancheType: this.state.brancheType\r\n    };\r\n    this.ajouterPartenaire(createPartenaireRequest);\r\n  }\r\n\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"add-button\"\r\n          onClick={this.showDrawer}\r\n          style={{ borderRadius: \"0px\" }}\r\n        >\r\n          <Icon type=\"plus\" /> Nouvel Intermédiaire\r\n        </Button>\r\n        <Drawer\r\n          title=\"Ajouter un nouvel intermédiaire\"\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          width={720}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form\r\n            layout=\"vertical\"\r\n            onSubmit={this.handleSubmit}\r\n            className=\"signup-form\"\r\n          >\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Raison sociale\"\r\n                  validateStatus={this.state.raisonSocial.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"raisonSocial\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Raison sociale\"\r\n                    className=\"not-rounded\"\r\n                    value={this.state.raisonSocial.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Abréviation\"\r\n                  validateStatus={this.state.abreviation.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"abreviation\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Abréviation\"\r\n                    className=\"not-rounded\"\r\n                    value={this.state.abreviation.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Siége social\"\r\n                  hasFeedback\r\n                  validateStatus={this.state.siegeSocial.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"siegeSocial\"\r\n                    autoComplete=\"off\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Siège Social\"\r\n                    value={this.state.siegeSocial.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Téléphone\"\r\n                  hasFeedback\r\n                  validateStatus={this.state.telephone.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"telephone\"\r\n                    type=\"telephone\"\r\n                    autoComplete=\"off\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Téléphone\"\r\n                    value={this.state.telephone.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"RIB\"\r\n                  validateStatus={this.state.numeroCompte.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"numeroCompte\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"RIB\"\r\n                    className=\"not-rounded\"\r\n                    value={this.state.numeroCompte.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTestNumero)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Type intermédiaire\"\r\n                  validateStatus={this.state.typePartenaire.validateStatus}\r\n                >\r\n                  <Select\r\n                    placeholder=\"Selectionnez...\"\r\n                    onChange={this.handleSelectChange}\r\n                  >\r\n                    <Option value=\"Banque\">Banque</Option>\r\n                    <Option value=\"Cabinet de courtage\">\r\n                      Cabinet de courtage\r\n                    </Option>\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem label=\" Taux de la commission\">\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"fraisAcquisition\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Taux de la commision\"\r\n                    className=\"not-rounded\"\r\n                    value={this.state.fraisAcquisition.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem label=\" Taux TVA\">\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"TVA\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"TVA\"\r\n                    className=\"not-rounded\"\r\n                    value={this.state.TVA.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem label=\"Type de branche\">\r\n                  <Select\r\n                    placeholder=\"Selectionnez...\"\r\n                    onChange={this.handleBranchetypeChange}\r\n                  >\r\n                    <Option value={BRANCH_TYPE_DECES}>\r\n                      {BRANCH_TYPE_DECES}\r\n                    </Option>\r\n                    <Option value={BRANCH_TYPE_DECES_ET_RETRAITE}>\r\n                      {BRANCH_TYPE_DECES_ET_RETRAITE}\r\n                    </Option>\r\n                    <Option value={BRANCH_TYPE_RETRAITE}>\r\n                      {BRANCH_TYPE_RETRAITE}\r\n                    </Option>\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n  validateTest = abbreviation => {\r\n    if (abbreviation.length < NAME_MIN_LENGTH) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: `Name is too short (Minimum ${NAME_MIN_LENGTH} characters needed.)`\r\n      };\r\n    } else if (abbreviation.length > NAME_MAX_LENGTH) {\r\n      return {\r\n        validationStatus: \"error\",\r\n        errorMsg: `Name is too long (Maximum ${NAME_MAX_LENGTH} characters allowed.)`\r\n      };\r\n    } else {\r\n      return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null\r\n      };\r\n    }\r\n  };\r\n  validateTestNumero = numeroCompte => {\r\n    if (numeroCompte.length < NUMERO_COMPTE_LENGTH) {\r\n      return {\r\n        validateStatus: \"error\",\r\n        errorMsg: `Name is too short (Minimum ${NUMERO_COMPTE_LENGTH} characters needed.)`\r\n      };\r\n    } else if (numeroCompte.length > NUMERO_COMPTE_LENGTH) {\r\n      return {\r\n        validationStatus: \"error\",\r\n        errorMsg: `Name is too long (Maximum ${NUMERO_COMPTE_LENGTH} characters allowed.)`\r\n      };\r\n    } else {\r\n      return {\r\n        validateStatus: \"success\",\r\n        errorMsg: null\r\n      };\r\n    }\r\n  };\r\n}\r\n\r\nexport default Form.create()(CreatePartenaire);\r\n","import {\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Table,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nimport { CreatePartenaire } from \"./CreatePartenaire\";\r\nimport { getAllPartenaire, updatePartenaire } from \"./PartenaireAPI\";\r\n\r\nconst EditableContext = React.createContext();\r\n\r\nclass Partenaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editingKey: \"\",\r\n      rowSelection: \"\",\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Raison Sociale\",\r\n        dataIndex: \"raisonSocial\",\r\n        key: \"raisonSocial\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"raisonSocial\", \"Raison Sociale\",this),\r\n      },\r\n      {\r\n        title: \"Abreviation\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"code\", \"Abreviation\",this),\r\n      },\r\n      {\r\n        title: \"Siège social\",\r\n        dataIndex: \"siegeSocial\",\r\n        key: \"siegeSocial\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"siegeSocial\", \"Siège social\",this),\r\n      },\r\n      {\r\n        title: \"Téléphone\",\r\n        dataIndex: \"telephone\",\r\n        key: \"telephone\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"telephone\", \"Téléphone\",this),\r\n      },\r\n      {\r\n        title: \"RIB\",\r\n        dataIndex: \"numeroCompte\",\r\n        key: \"numeroCompte\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"numeroCompte\", \"Numéro compte\",this),\r\n      },\r\n      {\r\n        title: \"Type intermédiaire\",\r\n        dataIndex: \"typePartenaire\",\r\n        key: \"typePartenaire\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"typePartenaire\", \"secteur d activite\",this),\r\n      },\r\n      {\r\n        title: \"Commission\",\r\n        dataIndex: \"fraisAcquisition\",\r\n        key: \"fraisAcquisition\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"fraisAcquisition\", \"Commission\",this),\r\n      },\r\n      {\r\n        title: \" Taux TVA \",\r\n        dataIndex: \"tva\",\r\n        key: \"tva\",\r\n        editable: true,\r\n        ...getColumnSearchProps(\"tva\", \"TVA\",this),\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {(form) => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"Sure to cancel?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Fermer</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => {\r\n                  this.edit(record.key);\r\n                }}\r\n              >\r\n                Modifier\r\n              </a>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  updatePartenaires = (id, partenaireData) => {\r\n    updatePartenaire(id, partenaireData)\r\n      .then((response) => {\r\n      })\r\n      .catch((error) => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrecte. Veuillez réessayer!\",\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  recherchePartenaire = () => {\r\n    getAllPartenaire()\r\n      .then((response) => {\r\n        let newDataList = [];\r\n        response.data.content.forEach((element) => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrecte. Veuillez réessayer!\",\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.recherchePartenaire();\r\n  }\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  isEditing = (record) => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n        this.updatePartenaires(item.id, row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      }\r\n      return {\r\n        ...col,\r\n        onCell: (record) => ({\r\n          record,\r\n          inputType: col.dataIndex === \"typePartenaire\" ? \"role\" : \"text\",\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          editing: this.isEditing(record),\r\n        }),\r\n      };\r\n    });\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des intermédiaire\" />\r\n        <EditableContext.Provider value={this.props.form}>\r\n          <CreatePartenaire />\r\n          <Table\r\n            rowClassName=\"editable-row\"\r\n            components={components}\r\n            columns={columns}\r\n            dataSource={this.state.data}\r\n            pagination={{\r\n              defaultCurrent: 1,\r\n              defaultPageSize: 5,\r\n              onChange: this.cancel,\r\n            }}\r\n          />\r\n        </EditableContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    return <Input />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <td {...restProps}>\r\n        {editing ? (\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        ) : (\r\n          children\r\n        )}\r\n      </td>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(Partenaire);\r\n","/* eslint-disable react/prop-types */\r\nimport \"./CreatePointVente.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Upload,\r\n  InputNumber,\r\n  Divider\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getAllPartenaire } from \"../partenaire/PartenaireAPI\";\r\nimport { addPointVente, getTypePointVente } from \"./PointVenteAPI\";\r\nimport { getAllSecteur, getVois } from \"../../Participants/ParticipantAPI\";\r\n\r\nconst FormItem = Form.Item;\r\nconst { Option } = Select;\r\n\r\nexport class CreatePointVente extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      abreviation: {\r\n        value: \"\"\r\n      },\r\n      codeCaps: {\r\n        value: \"\"\r\n      },\r\n      codeInterne: {\r\n        value: \"\"\r\n      },\r\n      codeResponsable: {\r\n        value: \"\"\r\n      },\r\n      ice: {\r\n        value: \"\"\r\n      },\r\n      libelle: {\r\n        value: \"\"\r\n      },\r\n      logo: {\r\n        value: \"\"\r\n      },\r\n      nomResponsable: {\r\n        value: \"\"\r\n      },\r\n      patente: {\r\n        value: \"\"\r\n      },\r\n      secteurActiviteId: {\r\n        value: \"\"\r\n      },\r\n      partenaire: \"\",\r\n      secteurActivite: \"\",\r\n      typePointVente: \"\",\r\n      partenaireTB: [],\r\n      secteurActiviteTB: [],\r\n      typePointVenteTB: [],\r\n      vois: []\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleChange = e => {\r\n    this.setState({\r\n      partenaire: e\r\n    });\r\n  };\r\n\r\n  handleChangeSecteurActivite = e => {\r\n    this.setState({\r\n      secteurActivite: e\r\n    });\r\n  };\r\n\r\n  handleChangeTypePointVente = e => {\r\n    this.setState({\r\n      typePointVente: e\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getPartenaire();\r\n    this.getsecteurActiviteId();\r\n    this.getTypePointVenteId();\r\n    this.getVois();\r\n  }\r\n\r\n  async getsecteurActiviteId() {\r\n    let response = await getAllSecteur();\r\n    this.setState({\r\n      secteurActiviteTB: response.data.content\r\n    });\r\n  }\r\n\r\n  async getPartenaire() {\r\n    let response = await getAllPartenaire();\r\n    this.setState({\r\n      partenaireTB: response.data.content\r\n    });\r\n  }\r\n\r\n  async getTypePointVenteId() {\r\n    let response = await getTypePointVente();\r\n    this.setState({\r\n      typePointVenteTB: response.data.content\r\n    });\r\n  }\r\n\r\n  handleInputChange(event, validationFun) {\r\n    const target = event.target;\r\n    const inputName = target.name;\r\n    const inputValue = target.value;\r\n\r\n    this.setState({\r\n      [inputName]: {\r\n        value: inputValue,\r\n        ...validationFun(inputValue)\r\n      }\r\n    });\r\n  }\r\n\r\n  async ajouterPointVente(values) {\r\n    try {\r\n      let response = await addPointVente(values);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"La creation est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      if (error.response.data.message === \"Ce point vente existe déja\") {\r\n        notification.error({\r\n          message: \"Ce point vente existe déja.\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message ||\r\n            \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        const createPointVenteRequest = {\r\n          abb: this.state.abreviation.value,\r\n          codeCaps: this.state.codeCaps.value,\r\n          codeInterne: this.state.codeInterne.value,\r\n          codeResponsable: this.state.codeResponsable.value,\r\n          ice: this.state.ice.value,\r\n          libelle: this.state.libelle.value,\r\n          logo: this.state.logo.value,\r\n          nomResponsable: this.state.nomResponsable.value,\r\n          patente: this.state.patente.value,\r\n          partenairepvId: this.state.partenaire,\r\n          secteurActiviteId: this.state.secteurActivite,\r\n          typePointVenteId: this.state.typePointVente,\r\n          adressPays: values.adressPays,\r\n          adressVille: values.adressVille,\r\n          adressVois: values.adressVois,\r\n          adressCodePostal: values.adressCodePostal,\r\n          adressNumero: values.adressNumero,\r\n          adressComplement: values.adressComplement,\r\n          adressComplete: values.adressComplete\r\n        };\r\n        this.ajouterPointVente(createPointVenteRequest);\r\n      }\r\n    });\r\n  }\r\n\r\n  state = { visible: false };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n  async getVois() {\r\n    let vois = await getVois();\r\n\r\n    this.setState({\r\n      vois: [...vois.data]\r\n    });\r\n  }\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const props = {\r\n      name: \"file\",\r\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n      headers: {\r\n        authorization: \"authorization-text\"\r\n      },\r\n      onChange(info) {\r\n        if (info.file.status === \"done\") {\r\n          message.success(`${info.file.name} file uploaded successfully`);\r\n        } else if (info.file.status === \"error\") {\r\n          message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n      }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"add-button\"\r\n          onClick={this.showDrawer}\r\n          style={{ borderRadius: \"0px\" }}\r\n        >\r\n          <Icon type=\"plus\" /> Nouveau point vente\r\n        </Button>\r\n        <Drawer\r\n          title=\"créer nouveau point de vente\"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form onSubmit={this.handleSubmit} layout=\"vertical\" hideRequiredMark>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Abréviation\"\r\n                  validateStatus={this.state.abreviation.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"abreviation\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Code\"\r\n                    value={this.state.abreviation.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Code ACAPS\"\r\n                  validateStatus={this.state.codeCaps.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"codeCaps\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Code ACAPS\"\r\n                    value={this.state.codeCaps.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Code Interne\"\r\n                  validateStatus={this.state.codeInterne.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"codeInterne\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Code\"\r\n                    value={this.state.codeInterne.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Code Responsable\"\r\n                  validateStatus={this.state.codeResponsable.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"codeResponsable\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Code ACAPS\"\r\n                    value={this.state.codeResponsable.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"ICE\"\r\n                  validateStatus={this.state.ice.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"ice\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Code\"\r\n                    value={this.state.ice.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Libelle\"\r\n                  validateStatus={this.state.libelle.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"libelle\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Libelle\"\r\n                    value={this.state.libelle.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"logo\"\r\n                  validateStatus={this.state.logo.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"logo\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"logo\"\r\n                    value={this.state.logo.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n                <Upload {...props}>\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Importer\r\n                  </Button>\r\n                </Upload>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Nom Responsable\"\r\n                  validateStatus={this.state.nomResponsable.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"nomResponsable\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"Nom Responsable\"\r\n                    value={this.state.nomResponsable.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Patente\"\r\n                  validateStatus={this.state.patente.validateStatus}\r\n                >\r\n                  <Input\r\n                    size=\"default\"\r\n                    name=\"patente\"\r\n                    autoComplete=\"off\"\r\n                    placeholder=\"patente\"\r\n                    value={this.state.patente.value}\r\n                    onChange={event =>\r\n                      this.handleInputChange(event, this.validateTest)\r\n                    }\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem\r\n                  label=\"Partenaire\"\r\n                  validateStatus={this.state.partenaire.validateStatus}\r\n                >\r\n                  <Select\r\n                    placeholder=\"Partenaire\"\r\n                    name=\"partenaire\"\r\n                    optionLabelProp=\"label\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.partenaireTB.map(partenaire => {\r\n                      return (\r\n                        <Option\r\n                          key={partenaire.id}\r\n                          label={partenaire.code}\r\n                          value={partenaire.id}\r\n                        >\r\n                          {partenaire.code}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <FormItem label=\"Secteur d'activité\">\r\n                  <Select\r\n                    placeholder=\"secteurActivite\"\r\n                    name=\"secteurActivite\"\r\n                    onChange={this.handleChangeSecteurActivite}\r\n                    optionLabelProp=\"label\"\r\n                  >\r\n                    {this.state.secteurActiviteTB.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={12}>\r\n                <FormItem label=\"Type de point de vente\">\r\n                  <Select\r\n                    placeholder=\"typePointVente\"\r\n                    name=\"typePointVente\"\r\n                    onChange={this.handleChangeTypePointVente}\r\n                    optionLabelProp=\"label\"\r\n                  >\r\n                    {this.state.typePointVenteTB.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.code}\r\n                        >\r\n                          {element.code}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <h4>Adresse :</h4>\r\n                <Divider></Divider>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Pays\">\r\n                  {getFieldDecorator(\"adressPays\", {\r\n                    rules: [{ required: true, message: \"selecte un pays\" }]\r\n                  })(<Input placeholder=\"pays\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Ville\">\r\n                  {getFieldDecorator(\"adressVille\", {\r\n                    rules: [{ required: true, message: \"selecte une ville\" }]\r\n                  })(<Input placeholder=\"ville\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Voie\">\r\n                  {getFieldDecorator(\"adressVois\", {\r\n                    rules: [{ required: true, message: \"selecte une vois\" }]\r\n                  })(\r\n                    <Select placeholder=\"Voie\">\r\n                      {this.state.vois.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Postal\">\r\n                  {getFieldDecorator(\"adressCodePostal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Code Postal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Numéro\">\r\n                  {getFieldDecorator(\"adressNumero\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Numero\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Complément d'adresse\">\r\n                  {getFieldDecorator(\"adressComplement\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le un complément\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Adresse Complete\">\r\n                  {getFieldDecorator(\"adressComplete\")(\r\n                    <Input className=\"not-rounded\" style={{ width: \"100%\" }} />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Ajouter\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n  validateTest = abreviation => {};\r\n}\r\n\r\nexport default Form.create()(CreatePointVente);\r\n","import {\r\n  Button,\r\n  Col,\r\n  Drawer,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getAllSecteurActivite } from \"../../Participants/ParticipantAPI\";\r\nimport { getAllPartenaire } from \"../partenaire/PartenaireAPI\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nimport CreatePointVente from \"./CreatePointVente\";\r\nimport { getAllPointVente, getTypePointVente, updatePointVente } from \"./PointVenteAPI\";\r\n\r\nconst { Option } = Select;\r\nexport class PointVente extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      record: {},\r\n      value: \"\",\r\n      keyRecord: \"\",\r\n      partenaireTB: [],\r\n      secteurActiviteTB: [],\r\n      typePointVenteTB: [],\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Abréviation\",\r\n        dataIndex: \"abb\",\r\n        key: \"abb\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"abb\", \"Abreviation\",this),\r\n      },\r\n      {\r\n        title: \"Code ACAPS\",\r\n        dataIndex: \"codeCaps\",\r\n        key: \"codeCaps\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"codeCaps\", \"Code ACAPS\",this),\r\n      },\r\n      {\r\n        title: \"Code Interne\",\r\n        dataIndex: \"codeInterne\",\r\n        key: \"codeInterne\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"codeInterne\", \"Code Interne\",this),\r\n      },\r\n      {\r\n        title: \"ICE\",\r\n        dataIndex: \"ice\",\r\n        key: \"ice\",\r\n        width: \"20%\",\r\n        ...getColumnSearchProps(\"ice\", \"ICE\",this),\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        key: \"action\",\r\n        width: \"20%\",\r\n        render: (text, record) => (\r\n          <span>\r\n            <a\r\n              href=\"#top\"\r\n              type=\"primary\"\r\n              onClick={() => this.handleSelectChange(record)}\r\n              style={{ borderRadius: \"0px\" }}\r\n            >\r\n              Modifier\r\n            </a>\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  }\r\n\r\n  recherchePointVente = () => {\r\n    getAllPointVente().then((response) =>\r\n      this.setState({\r\n        data: response.data.content,\r\n      })\r\n    );\r\n  };\r\n\r\n  async getsecteurActiviteId() {\r\n    let response = await getAllSecteurActivite();\r\n    this.setState({\r\n      secteurActiviteTB: response.data.content,\r\n    });\r\n  }\r\n\r\n  async getPartenaire() {\r\n    let response = await getAllPartenaire();\r\n    this.setState({\r\n      partenaireTB: response.data.content,\r\n    });\r\n  }\r\n\r\n  async getTypePointVenteId() {\r\n    let response = await getTypePointVente();\r\n    this.setState({\r\n      typePointVenteTB: response.data.content,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.recherchePointVente();\r\n    this.getPartenaire();\r\n    this.getTypePointVenteId();\r\n    this.getsecteurActiviteId();\r\n  }\r\n\r\n  andleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  state = { visible: false };\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n\r\n  async updatePointV(id, body) {\r\n    try {\r\n      let response = await updatePointVente(id, body);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"la modification est bien faite\",\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message || \"Sorry! Something went wrong. Please try again!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.updatePointV(this.state.keyRecord, values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleInputChange(event, validationFun) {\r\n    const target = event.target;\r\n    const inputName = target.name;\r\n    const inputValue = target.value;\r\n\r\n    this.setState({\r\n      [inputName]: {\r\n        value: inputValue,\r\n        ...validationFun(inputValue),\r\n      },\r\n    });\r\n  }\r\n\r\n  handleChangePartenaire = (e) => {\r\n    this.setState({\r\n      partenaire: e,\r\n    });\r\n  };\r\n\r\n  handleChangeSecteurActivite = (e) => {\r\n    this.setState({\r\n      secteurActivite: e,\r\n    });\r\n  };\r\n\r\n  handleChangeTypePointVente = (e) => {\r\n    this.setState({\r\n      typePointVente: e,\r\n    });\r\n  };\r\n\r\n  handleSelectChange = (value) => {\r\n    this.setState({ visible: true, keyRecord: value.id });\r\n    this.props.form.setFieldsValue({\r\n      abb: value.abb,\r\n      codeCaps: value.codeCaps,\r\n      codeInterne: value.codeInterne,\r\n      codeResponsable: value.codeResponsable,\r\n      logo: value.logo,\r\n      nomResponsable: value.nomResponsable,\r\n      ice: value.ice,\r\n      libelle: value.libelle,\r\n      patente: value.patente,\r\n      partenairepvId: value.partenairepv.id,\r\n      secteurActiviteId: value.secteurActivite.id,\r\n      typePointVenteId: value.typePointVente.id,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <CreatePointVente />\r\n        <Table\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.data}\r\n          rowKey=\"id\"\r\n          pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n        />\r\n        <Drawer\r\n          title=\"créer nouveau point de vente\"\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form onSubmit={this.handleSubmit} layout=\"vertical\" hideRequiredMark>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Abréviation\">\r\n                  {getFieldDecorator(\"abb\", {\r\n                    rules: [{ required: true, message: \"Tapez le code\" }],\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le code\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code ACAPS\">\r\n                  {getFieldDecorator(\"codeCaps\", {\r\n                    rules: [{ required: true, message: \"Tapez le Code ACAPS\" }],\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le Code ACAPS\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Interne\">\r\n                  {getFieldDecorator(\"codeInterne\", {\r\n                    rules: [{ required: true, message: \"Tapez le code\" }],\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le code\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Responsable\">\r\n                  {getFieldDecorator(\"codeResponsable\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le Code du responsable\",\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le Code du responsable\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Interne\">\r\n                  {getFieldDecorator(\"ice\", {\r\n                    rules: [{ required: true, message: \"Tapez ICE\" }],\r\n                  })(<Input className=\"not-rounded\" placeholder=\"Tapez ICE\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Libelle\">\r\n                  {getFieldDecorator(\"libelle\", {\r\n                    rules: [{ required: true, message: \"champ obligatoir\" }],\r\n                  })(<Input className=\"not-rounded\" placeholder=\"Libelle\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Logo\">\r\n                  {getFieldDecorator(\"logo\", {\r\n                    rules: [{ required: true, message: \"Logo\" }],\r\n                  })(<Input className=\"not-rounded\" placeholder=\"Logo\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nom du responsable\">\r\n                  {getFieldDecorator(\"nomResponsable\", {\r\n                    rules: [{ required: true, message: \"champ obligatoir\" }],\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Nom du responsable\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Patente\">\r\n                  {getFieldDecorator(\"patente\", {\r\n                    rules: [{ required: true, message: \"Patente\" }],\r\n                  })(<Input className=\"not-rounded\" placeholder=\"Patente\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Partenaire\">\r\n                  {getFieldDecorator(\"partenairepvId\", {\r\n                    rules: [{ required: true, message: \"\" }],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"cliquez pour choisir un partenaire\"\r\n                      onChange={this.handleChangePartenaire}\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.state.partenaireTB.map((element) => {\r\n                        return (\r\n                          <Option label={element.code} value={element.id}>\r\n                            {element.code}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Secteur d'activite\">\r\n                  {getFieldDecorator(\"secteurActiviteId\", {\r\n                    rules: [{ required: true, message: \"\" }],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"cliquez pour choisir un secteur \"\r\n                      onChange={this.handleChangeSecteurActivite}\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.state.secteurActiviteTB.map((element) => {\r\n                        return (\r\n                          <Option label={element.libelle} value={element.id}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type de point de vente\">\r\n                  {getFieldDecorator(\"typePointVenteId\", {\r\n                    rules: [{ required: true, message: \"\" }],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"cliquez pour choisir un type\"\r\n                      onChange={this.handleChangePointVente}\r\n                      optionLabelProp=\"label\"\r\n                    >\r\n                      {this.state.typePointVenteTB.map((element) => {\r\n                        return (\r\n                          <Option label={element.code} value={element.id}>\r\n                            {element.code}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div className=\"submit-cancel\">\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Fermer\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Modifier\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(PointVente);\r\n","import {\r\n  ACCESS_TOKEN,\r\n  API_BASE_URL,\r\n  REQUEST as request\r\n} from \"../../../constants/index\";\r\n\r\nexport function ajouterAcceptationLaboratoire(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-laboratoire\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function ajouterAcceptationExaminateur(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-examinateur\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function ajouterAcceptationConseil(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-conseil\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function ajouterAcceptationEtape(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-etape\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function ajouterAcceptationExamens(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-examens\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function ajouterAcceptationSpecialiste(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-specialiste\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function ajouterAcceptationReassurance(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-reassurance\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function getAcceptationlaboByAcceptation(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-laboratoire?acceptation=\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAcceptationExaminateurByAcceptation(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-examinateur?acceptation=\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAcceptationConseilByAcceptation(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-conseil?acceptation=\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAcceptationExamnsByAcceptation(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-examens?acceptation=\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getAcceptationSpecialisteByAcceptation(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-specialiste?acceptation=\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getAcceptationReassuranceByAcceptation(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-reassurance?acceptation=\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getAcceptationlaboByAcceptationsLaboratoire(\r\n  acceptation,\r\n  acceptationLabo\r\n) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/acceptation-test-medical-laboratoire?acceptation=\" +\r\n      acceptation +\r\n      \"&acceptationlabo=\" +\r\n      acceptationLabo,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAcceptationTestByAcceptationsExaminateur(\r\n  acceptation,\r\n  acceptationLabo\r\n) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/acceptation-test-medical-examinateur?acceptation=\" +\r\n      acceptation +\r\n      \"&acceptationexamn=\" +\r\n      acceptationLabo,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAcceptationTestByAcceptationsConseil(\r\n  acceptation,\r\n  acceptationLabo\r\n) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/acceptation-test-medical-conseil?acceptation=\" +\r\n      acceptation +\r\n      \"&acceptationconseil=\" +\r\n      acceptationLabo,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getAcceptationTestMedicalByAcceptationExamensComplementaire(\r\n  acceptation,\r\n  acceptationExaman\r\n) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/acceptation-test-medical-examen?acceptation=\" +\r\n      acceptation +\r\n      \"&acceptationexamn=\" +\r\n      acceptationExaman,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function ajouterAcceptationTestMedical(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-test-medical\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function updateAcceptationTestMedical(Id, updatedTestMedical) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-test-medical?id=\" + Id,\r\n    data: updatedTestMedical,\r\n    method: \"PUT\"\r\n  });\r\n}\r\n\r\nexport function updateAcceptationSpecialiste(Id, updatedspecialiste) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-specialiste?id=\" + Id,\r\n    data: updatedspecialiste,\r\n    method: \"PUT\"\r\n  });\r\n}\r\nexport function updateAcceptationReassurance(Id, updatedspecialiste) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/acceptation-reassurance?id=\" + Id,\r\n    data: updatedspecialiste,\r\n    method: \"PUT\"\r\n  });\r\n}\r\nexport function getacceptationTestByAuxiliaire(\r\n  auxiliaire,\r\n  typeAuxiliaire,\r\n  partenaire,\r\n  produit\r\n) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/acceptation-test-medical-auxiliaire?auxiliaire=\" +\r\n      auxiliaire +\r\n      \"&typeAuxiliaire=\" +\r\n      typeAuxiliaire +\r\n      \"&partenaire=\" +\r\n      partenaire +\r\n      \"&produit=\" +\r\n      produit,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function lettreAcceptation(lettreacceptation) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/lettreAcceptation/pdf\",\r\n    method: \"POST\",\r\n    data: lettreacceptation,\r\n    responseType: \"blob\"\r\n  });\r\n}\r\nexport function searchAcceptations(page, limit, searchby, searchfor) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/acceptation/search?page=\" +\r\n      page +\r\n      \"&sort=code&direction=desc&limit=\" +\r\n      limit +\r\n      \"&by=\" +\r\n      searchby +\r\n      \"&for=\" +\r\n      searchfor,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getAcceptationsByPagination(page, limit) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL +\r\n      \"/private/acceptation?page=\" +\r\n      page +\r\n      \"&sort=code&direction=desc&limit=\" +\r\n      limit,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getVerdictByType(type) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/verdict?type=\" + type,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function lettreRejet(lettrerejet) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/lettreRejet/pdf\",\r\n    method: \"POST\",\r\n    data: lettrerejet,\r\n    responseType: \"blob\"\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Divider, Input, Select, Table, Tag, Icon } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport {\r\n  getAcceptationsByPagination,\r\n  searchAcceptations\r\n} from \"./AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst columns = [\r\n  {\r\n    title: \"Code\",\r\n    dataIndex: \"code\",\r\n    key: \"code\",\r\n    render: text => <a href=\"#top\">{text}</a>\r\n  },\r\n  {\r\n    title: \"Nom assuré\",\r\n    dataIndex: \"contrat\",\r\n    key: \"nom\",\r\n\r\n    render: contrat => <span>{contrat.assure.nom}</span>\r\n  },\r\n  {\r\n    title: \"Prénom assuré\",\r\n    dataIndex: \"contrat\",\r\n    key: \"prenom\",\r\n    render: contrat => <span>{contrat.assure.prenom}</span>\r\n  },\r\n  {\r\n    title: \"montant financement\",\r\n    dataIndex: \"contrat\",\r\n    key: \"Mnt crédit\",\r\n    render: contrat => <span>{contrat.capitalAssure}</span>\r\n  },\r\n  {\r\n    title: \"Date création\",\r\n    dataIndex: \"creationDate\",\r\n    key: \"creationDate\"\r\n  },\r\n  {\r\n    title: \"Status\",\r\n    key: \"status\",\r\n    dataIndex: \"status\",\r\n    render: status => (\r\n      <span>\r\n        {status === \"DONE\" ? (\r\n          <Tag color=\"green\" key={status}>\r\n            ACCEPTE\r\n          </Tag>\r\n        ) : (\r\n          <Tag color=\"volcano\" key={status}>\r\n            EN_COURS\r\n          </Tag>\r\n        )}\r\n      </span>\r\n    )\r\n  },\r\n  {\r\n    title: \"Date status\",\r\n    dataIndex: \"creationDate\",\r\n    key: \"datestatus\"\r\n  },\r\n  {\r\n    title: \"Produit\",\r\n    dataIndex: \"contrat\",\r\n    key: \"produit\",\r\n    render: contrat => <span>{contrat.produit.libelle}</span>\r\n  },\r\n  {\r\n    title: \"Partenaire\",\r\n    dataIndex: \"contrat\",\r\n    key: \"Partenaire\",\r\n    render: contrat => <span>{contrat.produit.partenaire.raisonSocial}</span>\r\n  },\r\n  {\r\n    title: \"Opérations\",\r\n    dataIndex: \"operation\",\r\n    width: \"15%\",\r\n    render: (text, record) => (\r\n      <span>\r\n        <Link\r\n          to={{\r\n            pathname: \"/ModificationAcceptation\",\r\n            state: { record: record }\r\n          }}\r\n        >\r\n          <Icon\r\n            type=\"edit\"\r\n            style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n          />\r\n        </Link>\r\n        <Divider type=\"vertical\" />\r\n        <Link\r\n          to={{\r\n            pathname: \"/ConsultationAcceptation\",\r\n            state: { record: record }\r\n          }}\r\n        >\r\n          <Icon\r\n            type=\"container\"\r\n            style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n          />{\" \"}\r\n        </Link>\r\n      </span>\r\n    )\r\n  }\r\n];\r\n\r\nclass GestionAcceptation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      acceptations: [],\r\n      totalItems: 0,\r\n      pagenumber: 1,\r\n      searchby: \"code\",\r\n      searchfor: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getproprties(this.state.pagenumber - 1, 5);\r\n  }\r\n  async getproprties(page, limit) {\r\n    let acceptationsResponse = await getAcceptationsByPagination(page, limit);\r\n    this.setState({\r\n      acceptations: [...acceptationsResponse.data.content],\r\n      totalItems: acceptationsResponse.data.totalElements\r\n    });\r\n  }\r\n  async searchAcceptation(page, limit, searchby, searchfor) {\r\n    let acceptationsResponse = await searchAcceptations(\r\n      page,\r\n      limit,\r\n      searchby,\r\n      searchfor\r\n    );\r\n    if (searchby === \"prenom\" || searchby === \"nom\") {\r\n      this.setState({\r\n        acceptations: [...acceptationsResponse.data.content],\r\n        totalItems: acceptationsResponse.data.numberOfElements\r\n      });\r\n    } else if (searchby === \"code\") {\r\n      this.setState({\r\n        acceptations: [...acceptationsResponse.data.content],\r\n        totalItems: acceptationsResponse.data.totalElements\r\n      });\r\n    }\r\n  }\r\n  onPaginationChange = (pagenumber, pagesize) => {\r\n    this.setState({\r\n      pagenumber: pagenumber\r\n    });\r\n    if (this.state.searchfor === \"\") this.getproprties(pagenumber - 1, 5);\r\n    else {\r\n      this.searchAcceptation(\r\n        pagenumber - 1,\r\n        5,\r\n        this.state.searchby,\r\n        this.state.searchfor\r\n      );\r\n    }\r\n  };\r\n  selectBefore = (\r\n    <Select\r\n      onChange={value => this.setState({ searchby: value })}\r\n      defaultValue=\"code\"\r\n      style={{ width: 150 }}\r\n    >\r\n      <Option value=\"code\">Code acceptation</Option>\r\n      <Option value=\"nom\">Nom assuré</Option>\r\n      <Option value=\"prenom\">Prenom assuré</Option>\r\n    </Select>\r\n  );\r\n  search = value => {\r\n    this.setState({ pagenumber: 1, searchfor: value });\r\n    this.searchAcceptation(\r\n      this.state.pagenumber - 1,\r\n      5,\r\n      this.state.searchby,\r\n      value\r\n    );\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion Acceptation\" />\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Search\r\n            placeholder=\"Entrez le text de recherche\"\r\n            addonBefore={this.selectBefore}\r\n            onSearch={value => this.search(value)}\r\n            enterButton\r\n            style={{ width: 600 }}\r\n          />\r\n        </div>\r\n        <Table\r\n          columns={columns}\r\n          dataSource={this.state.acceptations}\r\n          pagination={{\r\n            onChange: this.onPaginationChange,\r\n            pageSize: 5,\r\n            total: this.state.totalItems,\r\n            current: this.state.pagenumber\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default GestionAcceptation;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Button, Col, Form, Input, Row } from \"antd\";\r\nimport React, { useState } from \"react\";\r\n\r\nconst AjoutePrestation = props => {\r\n  const [setReference] = useState(\"\");\r\n  const { montantGlobale } = props;\r\n\r\n  const { getFieldDecorator } = props.form;\r\n\r\n  const formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 24 },\r\n      md: { span: 15 },\r\n      lg: { span: 12 }\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 24 },\r\n      md: { span: 9 },\r\n      lg: { span: 12 }\r\n    }\r\n  };\r\n  const tailFormItemLayout = {\r\n    wrapperCol: {\r\n      xs: {\r\n        span: 24,\r\n        offset: 0\r\n      },\r\n      sm: {\r\n        span: 16,\r\n        offset: 8\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        let helpArray = [];\r\n        props.rows.forEach(element => {\r\n          element.honoraires.forEach(elem => {\r\n            helpArray.push({\r\n              acceptationTestMedical: element,\r\n              montantHonoraire: elem.montantHonoraire\r\n            });\r\n          });\r\n        });\r\n        values.detailPrestationHonoraire = [...helpArray];\r\n        values.auxiliaire = { id: props.auxiliaire };\r\n\r\n        props.Ajouter(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form {...formItemLayout} onSubmit={handleSubmit} hideRequiredMark>\r\n      <Row style={{ marginTop: \"20px\" }}>\r\n        <Col span={10}>\r\n          <Form.Item label=\"Ref : \" hasFeedback>\r\n            {getFieldDecorator(\"reference\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Veuillez saisir\"\r\n                }\r\n              ]\r\n            })(<Input></Input>)}\r\n          </Form.Item>\r\n        </Col>\r\n\r\n        <Col span={1}></Col>\r\n\r\n        <Col span={10}>\r\n          <Form.Item label=\"Montant\">\r\n            {getFieldDecorator(\"montant\", {\r\n              initialValue: montantGlobale,\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: \"Veuillez saisir\"\r\n                }\r\n              ]\r\n            })(<Input addonAfter=\"DH\" disabled></Input>)}\r\n          </Form.Item>\r\n\r\n          <Form.Item {...tailFormItemLayout}>\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n              Valider\r\n            </Button>\r\n          </Form.Item>\r\n        </Col>\r\n      </Row>\r\n    </Form>\r\n  );\r\n};\r\n\r\nconst AjoutePrestationHonoraire = Form.create()(AjoutePrestation);\r\n\r\nexport default AjoutePrestationHonoraire;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { notification, Table, Typography } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport AjoutePrestationHonoraire from \"./AjoutePrestationHonoraire\";\r\nimport { createPrestationHonoraire } from \"../../Parametrage/Honoraires/HonorairesAPI\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst columns = [\r\n  {\r\n    title: \"Nom et prénom assuré\",\r\n    key: \"Nom Assure\",\r\n    dataIndex: \"acceptation\",\r\n    render: text => (\r\n      <div>{text.contrat.assure.nom + \" \" + text.contrat.assure.prenom}</div>\r\n    )\r\n  },\r\n  {\r\n    title: \"CNI\",\r\n    key: \"CNI\",\r\n    dataIndex: \"acceptation\",\r\n    render: text => <div>{text.contrat.assure.cin}</div>\r\n  },\r\n  {\r\n    title: \"Code examen\",\r\n    dataIndex: \"honoraires\",\r\n    key: \"Libelle Test\",\r\n    render: text => (\r\n      <div>\r\n        {text.map(element => {\r\n          return element.libelle;\r\n        })}\r\n      </div>\r\n    )\r\n  },\r\n  {\r\n    title: \"Intitulé examen\",\r\n    key: \"Intituele Test\",\r\n    dataIndex: \"honoraires\",\r\n    render: text => (\r\n      <div>\r\n        {text.map(element => {\r\n          return element.intituele;\r\n        })}\r\n      </div>\r\n    )\r\n  },\r\n\r\n  {\r\n    title: \"Montant\",\r\n    dataIndex: \"honoraires\",\r\n    key: \"Mnt Honoraire\",\r\n    render: text => {\r\n      return <div>{addition(text)} DH</div>;\r\n    }\r\n  }\r\n];\r\n\r\nconst addition = elements => {\r\n  let montant = 0;\r\n  elements.forEach(element => {\r\n    montant = montant + element.montantHonoraire;\r\n  });\r\n  return montant;\r\n};\r\n\r\nconst HonoraireTable = props => {\r\n  const [montantG, setMontantG] = useState(0);\r\n  const [selectedTstRows, setSelectedTstRows] = useState([]);\r\n  const [dataList, setDataList] = useState(props.tests);\r\n  const [myRequestmodel, setMyRequestmodel] = useState({\r\n    detailPrestationHonoraire: []\r\n  });\r\n  const [requestStatus, setRequestStatus] = useState(false);\r\n  const [selectedRowsArray, setSelectedRowsArray] = useState([]);\r\n\r\n  const rowSelection = {\r\n    onChange: (selectedRowKeys, selectedRows) => {\r\n      setSelectedRowsArray(selectedRows);\r\n\r\n      setSelectedRowsArray(selectedRowKeys);\r\n\r\n      let montant = 0;\r\n      selectedRows.forEach(element => {\r\n        montant = montant + addition(element.honoraires);\r\n      });\r\n      setSelectedTstRows([...selectedRows]);\r\n      setMontantG(montant);\r\n    },\r\n    selectedRowKeys: selectedRowsArray\r\n  };\r\n\r\n  async function createPrestation(values) {\r\n    let rec = await createPrestationHonoraire(values);\r\n    if (rec.status === 200) {\r\n      setRequestStatus(true);\r\n      setSelectedRowsArray([]);\r\n      notification.success({\r\n        message: \"bien ajouté\"\r\n      });\r\n    } else {\r\n      notification.error({\r\n        message: \"Merci de verifier les information entree\"\r\n      });\r\n    }\r\n  }\r\n\r\n  const submitPrestationHonoraire = requestmodel => {\r\n    setMyRequestmodel(requestmodel);\r\n    createPrestation(requestmodel);\r\n    setRequestStatus(false);\r\n    setSelectedRowsArray(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    let listHelp = [...dataList];\r\n    myRequestmodel.detailPrestationHonoraire.forEach(element => {\r\n      listHelp = [\r\n        ...listHelp.filter(\r\n          item => item.id !== element.acceptationTestMedical.id\r\n        )\r\n      ];\r\n    });\r\n    setDataList(listHelp);\r\n  }, [requestStatus]);\r\n\r\n  return (\r\n    <div style={{ marginTop: \"50px\" }}>\r\n      <Title style={{ marginBottom: \"25px\" }} level={4} underline={true}>\r\n        Création des honoraires :\r\n      </Title>\r\n      <Table\r\n        rowKey={record => record.id}\r\n        pagination={{ hideOnSinglePage: true, defaultPageSize: 50 }}\r\n        bordered\r\n        rowSelection={rowSelection}\r\n        columns={columns}\r\n        dataSource={dataList}\r\n      />\r\n      <AjoutePrestationHonoraire\r\n        auxiliaire={props.auxiliaire}\r\n        Ajouter={submitPrestationHonoraire}\r\n        rows={selectedTstRows}\r\n        montantGlobale={montantG}\r\n      ></AjoutePrestationHonoraire>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HonoraireTable;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass PrestationTestsMedicalHonoraire extends Component {\r\n  columns = [\r\n    {\r\n      title: \"Code Acceptation\",\r\n      dataIndex: \"acceptationTestMedical.acceptation.code\"\r\n    },\r\n    {\r\n      title: \"Nom assuré\",\r\n      dataIndex: \"acceptationTestMedical.acceptation.contrat.assure.nom\"\r\n    },\r\n    {\r\n      title: \"Intitule Test\",\r\n      dataIndex: \"acceptationTestMedical.honoraires\",\r\n      render: record => {\r\n        return record.map(elem => elem.intituele);\r\n      }\r\n    },\r\n    {\r\n      title: \"Libelle\",\r\n      dataIndex: \"acceptationTestMedical.honoraires\",\r\n      render: record => {\r\n        return record.map(elem => elem.libelle);\r\n      }\r\n    },\r\n    {\r\n      title: \"Montant honoraire\",\r\n      dataIndex: \"acceptationTestMedical.honoraires\",\r\n      render: record => {\r\n        return record.map(elem => elem.montantHonoraire);\r\n      }\r\n    }\r\n  ];\r\n  state = {\r\n    data: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ data: this.props.data });\r\n  }\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    if (prevState.data !== this.state.data)\r\n      this.setState({ data: this.props.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Table\r\n        style={{ marginTop: \"50px\" }}\r\n        rowKey={record => record.id}\r\n        columns={this.columns}\r\n        dataSource={this.props.data.detailPrestationHonoraire}\r\n        pagination={{ hideOnSinglePage: true }}\r\n        loading={this.state.loading}\r\n        bordered\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrestationTestsMedicalHonoraire;\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Alert, Button, notification, Table, Typography } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport PrestationTestsMedicalHonoraire from \"./PrestationTestsMedicalTable\";\r\nimport { getPrestationSearch } from \"../../Parametrage/TypePrestation/PrestationAPI\";\r\n\r\nconst { Title } = Typography;\r\n\r\nclass RecherchPrestationHonoraire extends Component {\r\n  columns = [\r\n    {\r\n      title: \"Numéro sinistre\",\r\n      dataIndex: \"numeroSinistre\",\r\n      render: text => <Button type=\"link\">{text}</Button>,\r\n      onCellClick: record => {\r\n        this.setState({ detailPrestation: record, showDetailPrestation: true });\r\n      }\r\n    },\r\n    {\r\n      title: \"Date péstation\",\r\n      dataIndex: \"datePrestation\"\r\n    },\r\n    {\r\n      title: \"Mantant\",\r\n      dataIndex: \"montant\"\r\n    },\r\n    {\r\n      title: \"Mode Réglement\",\r\n      dataIndex: \"modeReglement\"\r\n    },\r\n    {\r\n      title: \"Status\",\r\n      dataIndex: \"status\"\r\n    },\r\n    {\r\n      title: \"Auxiliaire\",\r\n      dataIndex: \"auxiliaire\",\r\n      render: name => `${name.nom} ${name.prenom}`\r\n    }\r\n  ];\r\n\r\n  state = {\r\n    data: [],\r\n    showDetailPrestation: false,\r\n    detailPrestation: [],\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(\"props:\", this.props);\r\n    const {\r\n      auxiliaire,\r\n      produit,\r\n      typeAuxiliaire,\r\n      status,\r\n      participant,\r\n      contrat\r\n    } = this.props;\r\n    this.searchPrestation(\r\n      auxiliaire.key,\r\n      status.key,\r\n      produit.key,\r\n      typeAuxiliaire.label,\r\n      participant,\r\n      contrat\r\n    );\r\n  }\r\n\r\n  async searchPrestation(\r\n    auxiliaire,\r\n    status,\r\n    produit,\r\n    typeAuxiliaire,\r\n    nomParticipant,\r\n    numContrat\r\n  ) {\r\n    this.setState({ loading: true });\r\n    let respence = await getPrestationSearch(\r\n      auxiliaire,\r\n      status,\r\n      produit,\r\n      typeAuxiliaire,\r\n      nomParticipant,\r\n      numContrat\r\n    );\r\n    if (respence.status === 200) {\r\n      this.setState({ data: respence.data, loading: false });\r\n    } else {\r\n      notification.error({\r\n        message: \"Merci de verifier les informations de recherche et réessayer\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ marginTop: \"50px\" }}>\r\n        <Title style={{ marginBottom: \"25px\" }} level={4} underline={true}>\r\n          Résultats de Recherche :\r\n        </Title>\r\n        {!this.state.loading && (\r\n          <Alert\r\n            message={this.state.data.length + \" ligne trouvé\"}\r\n            type=\"success\"\r\n          />\r\n        )}\r\n        <Table\r\n          rowKey={record => record.id}\r\n          columns={this.columns}\r\n          dataSource={this.state.data}\r\n          pagination={{ hideOnSinglePage: true }}\r\n          loading={this.state.loading}\r\n          bordered\r\n        />\r\n\r\n        {this.state.showDetailPrestation && (\r\n          <PrestationTestsMedicalHonoraire\r\n            data={this.state.detailPrestation}\r\n          ></PrestationTestsMedicalHonoraire>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecherchPrestationHonoraire;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Button, Col, Form, Row, Select, Input } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport HonoraireTable from \"./HonoraireTable\";\r\nimport RecherchPrestationHonoraire from \"./RecherchPrestationHonoraire\";\r\nimport {\r\n  getTypeAuxiliaire,\r\n  getAuxiliaires\r\n} from \"../../Parametrage/Auxiliaires/AuxiliaireAPI\";\r\nimport { getAllPartenaire } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport { getDecesProduit } from \"../../Parametrage/ProduitDeces/ProduitDecesAPI\";\r\nimport { getPrestationStatus } from \"../../Parametrage/TypePrestation/PrestationAPI\";\r\nimport { getacceptationTestByAuxiliaire } from \"../GestionAcceptation/AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nclass Honoraire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      produit: {},\r\n      status: {},\r\n      typeAuxiliaireSelectedValue: {},\r\n      auxiliaire: {},\r\n      partenaires: [],\r\n      numContrat: \"\",\r\n      nomParticipant: \"\",\r\n      produits: [],\r\n      produitPartenaire: [],\r\n      typeAuxiliaire: [],\r\n      auxiliaires: [],\r\n      auxiliairesParType: [],\r\n      prestationStatus: [],\r\n      ShowHonoraireTable: false,\r\n      testsMedicalListByAuxiliaire: [],\r\n      montantGlobale: 0,\r\n      ShowRechercheHonoraireTable: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getpropreties();\r\n  }\r\n  async getpropreties() {\r\n    let respence = await getAllPartenaire();\r\n    let produitRespence = await getDecesProduit();\r\n    let typeAuxiliareRespence = await getTypeAuxiliaire();\r\n    let auxiliaresRespence = await getAuxiliaires();\r\n    let prestationStatusRespence = await getPrestationStatus();\r\n    this.setState({\r\n      prestationStatus: prestationStatusRespence.data,\r\n      partenaires: respence.data.content,\r\n      produits: produitRespence.data.content,\r\n      typeAuxiliaire: typeAuxiliareRespence.data.content,\r\n      auxiliaires: auxiliaresRespence.data.content\r\n    });\r\n  }\r\n  handlePartnerChange = value => {\r\n    let list = [...this.state.produits];\r\n    this.setState({\r\n      produitPartenaire: list.filter(item => item.partenaire.id === value.key)\r\n    });\r\n  };\r\n  handleTypeAuxiliaireChange = value => {\r\n    let list = [...this.state.auxiliaires];\r\n    this.setState({ typeAuxiliaireSelectedValue: value });\r\n    if (value.label === \"exames\") {\r\n      this.setState({\r\n        auxiliairesParType: list\r\n      });\r\n    } else if (value.label === \"specialiste\") {\r\n      this.setState({\r\n        auxiliairesParType: list.filter(\r\n          item => item.typeAuxiliaire.libelle !== value.label\r\n        )\r\n      });\r\n    } else {\r\n      this.setState({\r\n        auxiliairesParType: list.filter(\r\n          item => item.typeAuxiliaire.id === value.key\r\n        )\r\n      });\r\n    }\r\n  };\r\n  addition = elements => {\r\n    let montant = 0;\r\n    elements.forEach(element => {\r\n      montant = montant + element.montantHonoraire;\r\n    });\r\n    return montant;\r\n  };\r\n  async getacceptationTestsByAuxiliaire(\r\n    auxiiliaire,\r\n    type,\r\n    partenaire,\r\n    produit\r\n  ) {\r\n    let respence = await getacceptationTestByAuxiliaire(\r\n      auxiiliaire,\r\n      type,\r\n      partenaire,\r\n      produit\r\n    );\r\n    console.log(\"testMedical:\", respence);\r\n    let list = [];\r\n    respence.data.forEach(element => {\r\n      list.push({ ...element, key: element.id });\r\n    });\r\n    this.setState({\r\n      auxiliaire: auxiiliaire,\r\n      testsMedicalListByAuxiliaire: [...list],\r\n      ShowHonoraireTable: true\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.getacceptationTestsByAuxiliaire(\r\n          values.auxiliaire.key,\r\n          values.typeAuxiliaire.label,\r\n          values.partenaire.key,\r\n          values.produit.key\r\n        );\r\n      }\r\n    });\r\n  };\r\n  onClickSearch = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.setState({ ShowRechercheHonoraireTable: true });\r\n      }\r\n    });\r\n  };\r\n  onChangeProduit = value => {\r\n    this.setState({ produit: value });\r\n  };\r\n\r\n  onChangeStatus = value => {\r\n    this.setState({ status: value });\r\n  };\r\n  onChangeNumContrat = e => {\r\n    this.setState({ numContrat: e.target.value });\r\n  };\r\n  onChangeNomParticipant = e => {\r\n    this.setState({ nomParticipant: e.target.value });\r\n  };\r\n  onChangeAuxiliaire = value => {\r\n    this.setState({ auxiliaire: value });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <ComponentTitle title=\"Honoraires\" />\r\n          <Col span={24} offset={1} style={{ margin: \"0 auto\" }}>\r\n            <input\r\n              className=\"not-rounded criteres-rech\"\r\n              placeholder=\"Critères de Recherche\"\r\n              disabled\r\n            />\r\n            <div\r\n              className=\"div-criteres\"\r\n              style={{\r\n                padding: 10,\r\n                width: 1400,\r\n                background: \"#fff\",\r\n                borderTop: \"3px solid #eaa76c\"\r\n              }}\r\n            >\r\n              <Form\r\n                {...formItemLayout}\r\n                onSubmit={this.handleSubmit}\r\n                ref={ref => {\r\n                  this.form = ref;\r\n                }}\r\n                hideRequiredMark\r\n              >\r\n                <Row>\r\n                  <Col span={6} className=\"col-form\">\r\n                    <Form.Item label=\"Partenaire \" hasFeedback>\r\n                      {getFieldDecorator(\"partenaire\", {\r\n                        valuePropName: \"selected\",\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Veuillez selectionner\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          placeholder=\"Veuillez selectionner\"\r\n                          optionLabelProp=\"label\"\r\n                          onChange={this.handlePartnerChange}\r\n                          labelInValue\r\n                        >\r\n                          {this.state.partenaires.map(element => {\r\n                            return (\r\n                              <Option\r\n                                key={element.id}\r\n                                value={element.id}\r\n                                label={element.raisonSocial}\r\n                              >\r\n                                {element.raisonSocial}\r\n                              </Option>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={6} className=\"col-form\">\r\n                    <Form.Item label=\"Produit \">\r\n                      {getFieldDecorator(\"produit\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Format invalide !\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          placeholder=\"Veuillez selectionner\"\r\n                          optionLabelProp=\"label\"\r\n                          onChange={this.onChangeProduit}\r\n                          labelInValue\r\n                        >\r\n                          {this.state.produitPartenaire.map(element => {\r\n                            return (\r\n                              <Option\r\n                                key={element.id}\r\n                                value={element.id}\r\n                                label={element.code}\r\n                              >\r\n                                {element.code}\r\n                              </Option>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={6} className=\"col-form\">\r\n                    <Form.Item label=\"Status \" hasFeedback>\r\n                      {getFieldDecorator(\"status\", {\r\n                        valuePropName: \"selected\",\r\n                        rules: [\r\n                          {\r\n                            required: false\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          placeholder=\"Veuillez selectionner\"\r\n                          optionLabelProp=\"label\"\r\n                          onChange={this.onChangeStatus}\r\n                          labelInValue\r\n                        >\r\n                          {this.state.prestationStatus.map(element => {\r\n                            return (\r\n                              <Option\r\n                                key={element.value}\r\n                                value={element.value}\r\n                                label={element.name}\r\n                              >\r\n                                {element.name}\r\n                              </Option>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={6}>\r\n                    <Form.Item label=\"Type auxiliaire \" hasFeedback>\r\n                      {getFieldDecorator(\"typeAuxiliaire\", {\r\n                        valuePropName: \"selected\",\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Veuillez selectionner\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          placeholder=\"Veuillez selectionner\"\r\n                          optionLabelProp=\"label\"\r\n                          labelInValue\r\n                          onChange={this.handleTypeAuxiliaireChange}\r\n                        >\r\n                          {this.state.typeAuxiliaire.map(element => {\r\n                            return (\r\n                              <Option\r\n                                key={element.id}\r\n                                value={element.id}\r\n                                label={element.libelle}\r\n                              >\r\n                                {element.libelle}\r\n                              </Option>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col span={6}>\r\n                    <Form.Item label=\"Auxiliaire \" hasFeedback>\r\n                      {getFieldDecorator(\"auxiliaire\", {\r\n                        valuePropName: \"selected\",\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Veuillez selectionner\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          placeholder=\"Veuillez selectionner\"\r\n                          optionLabelProp=\"label\"\r\n                          onChange={this.onChangeAuxiliaire}\r\n                          labelInValue\r\n                        >\r\n                          {this.state.auxiliairesParType.map(element => {\r\n                            return (\r\n                              <Option\r\n                                key={element.id}\r\n                                value={element.id}\r\n                                label={element.nom}\r\n                              >\r\n                                {element.nom}\r\n                              </Option>\r\n                            );\r\n                          })}\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={6}>\r\n                    <Form.Item label=\"N° contrat \" hasFeedback>\r\n                      {getFieldDecorator(\"numContrat\", {\r\n                        rules: [\r\n                          {\r\n                            required: false\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Input\r\n                          placeholder=\"N° Contrat\"\r\n                          onChange={this.onChangeNumContrat}\r\n                        ></Input>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={6}>\r\n                    <Form.Item label=\"N° d'acceptation \" hasFeedback>\r\n                      {getFieldDecorator(\"numAcceptation\", {\r\n                        rules: [\r\n                          {\r\n                            required: false\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Input\r\n                          placeholder=\"N° acceptation\"\r\n                          optionLabelProp=\"label\"\r\n                        ></Input>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={6}>\r\n                    <Form.Item label=\"Nom participant\" hasFeedback>\r\n                      {getFieldDecorator(\"nomParticipant\", {\r\n                        rules: [\r\n                          {\r\n                            required: false\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Input\r\n                          placeholder=\"Nom\"\r\n                          optionLabelProp=\"label\"\r\n                          onChange={this.onChangeNomParticipant}\r\n                        ></Input>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={8}></Col>\r\n                  <Col span={8}></Col>\r\n                  <Col span={8}>\r\n                    <Button\r\n                      style={{ float: \"right\" }}\r\n                      className=\"rech-btn\"\r\n                      type=\"default\"\r\n                      onClick={this.onClickSearch}\r\n                    >\r\n                      Recherche\r\n                    </Button>\r\n                    <Button\r\n                      style={{ float: \"right\", marginRight: \"2%\" }}\r\n                      className=\"nouveau-btn\"\r\n                      type=\"primary\"\r\n                      htmlType=\"submit\"\r\n                    >\r\n                      Nouvel Honoraire\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Col offset={1}>\r\n          {this.state.ShowHonoraireTable && (\r\n            <HonoraireTable\r\n              auxiliaire={this.state.auxiliaire}\r\n              tests={this.state.testsMedicalListByAuxiliaire}\r\n              montantGlobale={this.state.montantGlobale}\r\n            ></HonoraireTable>\r\n          )}\r\n          {this.state.ShowRechercheHonoraireTable && (\r\n            <RecherchPrestationHonoraire\r\n              auxiliaire={this.state.auxiliaire}\r\n              typeAuxiliaire={this.state.typeAuxiliaireSelectedValue}\r\n              status={this.state.status}\r\n              produit={this.state.produit}\r\n              contrat={this.state.numContrat}\r\n              participant={this.state.nomParticipant}\r\n            ></RecherchPrestationHonoraire>\r\n          )}\r\n        </Col>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst HonoraireForm = Form.create()(Honoraire);\r\n\r\nexport default HonoraireForm;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Col, Form, Input, Radio, Row } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { Label } from \"semantic-ui-react\";\r\n\r\nconst { TextArea } = Input;\r\n\r\nclass StepFour extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showField: false,\r\n      invaliditeOuMaladieShowField: this.props.invaliditeOuMaladie.value,\r\n      maladiesOuOperationChirurgicaleShowField: this.props\r\n        .maladiesOuOperationChirurgicale.value,\r\n      suspendreAtiviteDeuxDernierAnneeShowField: this.props\r\n        .suspendreAtiviteDeuxDernierAnnee.value,\r\n      pensionIncapacite: this.props.pensionIncapacite.value\r\n    };\r\n  }\r\n  handleSabmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {});\r\n  };\r\n  onChange = e => {\r\n    this.setState({\r\n      dureeContrat: e.target.value,\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value)\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value),\r\n      dureeContrat: parseInt(e.target.value)\r\n    });\r\n  };\r\n  onChangePeriodicite = value => {\r\n    if (value.label === \"Unique avec étalement\") {\r\n      this.setState({ showField: true });\r\n    } else {\r\n      this.setState({ showField: false });\r\n    }\r\n  };\r\n  partnerChange = value => {\r\n    this.setState({\r\n      produits: this.props.produits.filter(\r\n        item => item.partenaire.raisonSocial === value.label\r\n      )\r\n    });\r\n  };\r\n  handleInvaliditeOuMaladiechange = e => {\r\n    this.setState({\r\n      invaliditeOuMaladieShowField: !this.state.invaliditeOuMaladieShowField\r\n    });\r\n  };\r\n  handleMaladiesOuOperationChirurgicaleChange = e =>\r\n    this.setState({\r\n      maladiesOuOperationChirurgicaleShowField: !this.state\r\n        .maladiesOuOperationChirurgicaleShowField\r\n    });\r\n  handlesuspendreAtiviteDeuxDernierAnneechange = e =>\r\n    this.setState({\r\n      suspendreAtiviteDeuxDernierAnneeShowField: !this.state\r\n        .suspendreAtiviteDeuxDernierAnneeShowField\r\n    });\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form onSubmit={this.handleSabmit} id=\"steptwo\">\r\n            <Col span={6}>\r\n              <Label style={{ marginBottom: \"5px\" }}>\r\n                Souffrez-vous d’une invalidité ou d’une maladie ?\r\n              </Label>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"invaliditeOuMaladie\", {\r\n                  rules: [{ required: false }],\r\n                  valuePropName: \"checked\",\r\n                  initialValue: this.state.invaliditeOuMaladieShowField\r\n                })(\r\n                  <Radio.Group\r\n                    style={{ marginBottom: 25 }}\r\n                    buttonStyle=\"solid\"\r\n                    className=\"prelevement\"\r\n                    defaultValue={this.state.invaliditeOuMaladieShowField}\r\n                    onChange={this.handleInvaliditeOuMaladiechange}\r\n                  >\r\n                    <Radio.Button value={false}>Non</Radio.Button>\r\n                    <Radio.Button value={true}>Oui</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Form.Item>\r\n              {this.state.invaliditeOuMaladieShowField && (\r\n                <Form.Item>\r\n                  <Label style={{ marginBottom: \"5px\" }}>laquelle ?</Label>\r\n                  {getFieldDecorator(\"quelleMaladieOuInvalidite\", {\r\n                    rules: [{ required: false }]\r\n                  })(<TextArea style={{ marginRight: \"10px\" }}></TextArea>)}\r\n                </Form.Item>\r\n              )}\r\n              <Label style={{ marginBottom: \"5px\" }}>\r\n                {\" \"}\r\n                Bénéficiez-vous d’une pension d’incapacité ?\r\n              </Label>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"pensionIncapacite\", {\r\n                  rules: [{ required: false }],\r\n                  valuePropName: \"checked\",\r\n                  initialValue: this.state.pensionIncapacite\r\n                })(\r\n                  <Radio.Group\r\n                    className=\"prelevement\"\r\n                    style={{ marginBottom: 25 }}\r\n                    buttonStyle=\"solid\"\r\n                    defaultValue={this.state.pensionIncapacite}\r\n                  >\r\n                    <Radio.Button value={false}>Non</Radio.Button>\r\n                    <Radio.Button value={true}>Oui</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={7} offset={1}>\r\n              <Label style={{ marginBottom: \"5px\" }}>\r\n                {\" \"}\r\n                Avez-vous souffert de maladies critiques ou subi des opérations\r\n                chirurgicales ?\r\n              </Label>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"maladiesOuOperationChirurgicale\", {\r\n                  rules: [{ required: false }],\r\n                  initialValue: this.state\r\n                    .maladiesOuOperationChirurgicaleShowField\r\n                })(\r\n                  <Radio.Group\r\n                    className=\"prelevement\"\r\n                    style={{ marginBottom: 25 }}\r\n                    buttonStyle=\"solid\"\r\n                    defaultValue={\r\n                      this.state.maladiesOuOperationChirurgicaleShowField\r\n                    }\r\n                    onChange={this.handleMaladiesOuOperationChirurgicaleChange}\r\n                  >\r\n                    <Radio.Button value={false}>Non</Radio.Button>\r\n                    <Radio.Button value={true}>Oui</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Form.Item>\r\n              {this.state.maladiesOuOperationChirurgicaleShowField && (\r\n                <Form.Item>\r\n                  <Label style={{ marginBottom: \"5px\" }}>Quand et où ?</Label>\r\n                  {getFieldDecorator(\r\n                    \"maladiesOuOperationChirurgicaleQuandEtOu\",\r\n                    {\r\n                      rules: [{ required: false }]\r\n                    }\r\n                  )(<TextArea></TextArea>)}\r\n                </Form.Item>\r\n              )}\r\n            </Col>\r\n            <Col span={7} offset={1}>\r\n              <Label style={{ marginBottom: \"5px\" }}>\r\n                {\" \"}\r\n                étiez-vous obligés de suspendre votre activité pour une durée\r\n                supérieure à 15 jours durant les deux dernières années ?\r\n              </Label>\r\n              <Form.Item>\r\n                {getFieldDecorator(\"suspendreAtiviteDeuxDernierAnnee\", {\r\n                  rules: [{ required: false }],\r\n                  initialValue: this.state\r\n                    .suspendreAtiviteDeuxDernierAnneeShowField\r\n                })(\r\n                  <Radio.Group\r\n                    className=\"prelevement\"\r\n                    style={{ marginBottom: 25 }}\r\n                    buttonStyle=\"solid\"\r\n                    defaultValue={\r\n                      this.state.suspendreAtiviteDeuxDernierAnneeShowField\r\n                    }\r\n                    onChange={this.handlesuspendreAtiviteDeuxDernierAnneechange}\r\n                  >\r\n                    <Radio.Button value={false}>Non</Radio.Button>\r\n                    <Radio.Button value={true}>Oui</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Form.Item>\r\n              {this.state.suspendreAtiviteDeuxDernierAnneeShowField && (\r\n                <Form.Item>\r\n                  <Label style={{ marginBottom: \"5px\" }}>\r\n                    pourquoi ? et pour combien de temps ?\r\n                  </Label>\r\n                  {getFieldDecorator(\r\n                    \"suspendreAtiviteDeuxDernierAnneePourquiEtTemps\",\r\n                    {\r\n                      rules: [{ required: false }]\r\n                    }\r\n                  )(<TextArea></TextArea>)}\r\n                </Form.Item>\r\n              )}\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      maladiesOuOperationChirurgicaleQuandEtOu: Form.createFormField({\r\n        ...props.maladiesOuOperationChirurgicaleQuandEtOu,\r\n        value: props.maladiesOuOperationChirurgicaleQuandEtOu.value\r\n      }),\r\n      maladiesOuOperationChirurgicale: Form.createFormField({\r\n        ...props.maladiesOuOperationChirurgicale,\r\n        value: props.maladiesOuOperationChirurgicale.value\r\n      }),\r\n      quelleMaladieOuInvalidite: Form.createFormField({\r\n        ...props.quelleMaladieOuInvalidite,\r\n        value: props.quelleMaladieOuInvalidite.value\r\n      }),\r\n      suspendreAtiviteDeuxDernierAnneePourquiEtTemps: Form.createFormField({\r\n        ...props.suspendreAtiviteDeuxDernierAnneePourquiEtTemps,\r\n        value: props.suspendreAtiviteDeuxDernierAnneePourquiEtTemps.value\r\n      }),\r\n      invaliditeOuMaladie: Form.createFormField({\r\n        ...props.invaliditeOuMaladie,\r\n        value: props.invaliditeOuMaladie.value\r\n      }),\r\n      pensionIncapacite: Form.createFormField({\r\n        ...props.pensionIncapacite,\r\n        value: props.pensionIncapacite.value\r\n      }),\r\n      suspendreAtiviteDeuxDernierAnnee: Form.createFormField({\r\n        ...props.suspendreAtiviteDeuxDernierAnnee,\r\n        value: props.suspendreAtiviteDeuxDernierAnnee.value\r\n      }),\r\n      dureeContrat: Form.createFormField({\r\n        ...props.dureeContrat,\r\n        value: props.dureeContrat.value\r\n      }),\r\n      preiodicite: Form.createFormField({\r\n        ...props.preiodicite,\r\n        value: props.preiodicite.value\r\n      }),\r\n      dateEcheance: Form.createFormField({\r\n        ...props.dateEcheance,\r\n        value: props.dateEcheance.value\r\n      }),\r\n      pointVente: Form.createFormField({\r\n        ...props.pointVente,\r\n        value: props.pointVente.value\r\n      }),\r\n      produit: Form.createFormField({\r\n        ...props.produit,\r\n        value: props.produit.value\r\n      })\r\n    };\r\n  }\r\n})(StepFour);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  AutoComplete,\r\n  Checkbox,\r\n  Col,\r\n  Descriptions,\r\n  Divider,\r\n  Empty,\r\n  Form,\r\n  Radio,\r\n  Row,\r\n  notification\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport moment from \"moment\";\r\nimport ComponentTitle from \"../../../../util/Title/ComponentTitle\";\r\nimport AddPerMorale from \"./AddPerMorale/AddPerMorale\";\r\nimport AddSouscripteur from \"./AddPerPhysique/AddSouscripteur\";\r\nimport {\r\n  createPersonneMorale,\r\n  createPersonnePhysique,\r\n  getallperson,\r\n  getallPersonMorale,\r\n  getAllSecteurActivite,\r\n  getAllTypePersonneMorales,\r\n  getProfession,\r\n  getSetuation,\r\n  getSexe,\r\n  getVois,\r\n  getByCinIfExist,\r\n  getByPatent\r\n} from \"../../../Participants/ParticipantAPI\";\r\nimport {\r\n  ADMIN,\r\n  AL_AKHDAR_Code,\r\n  AL_YOUSR_Code,\r\n  PERSONNE_MORALE,\r\n  PERSONNE_PHYSIQUE\r\n} from \"../../../../constants\";\r\nimport { getDataFromBankingWebService } from \"../../../GestionContrats/ContratsAPI\";\r\nimport Search from \"antd/lib/input/Search\";\r\n\r\nlet consumeDatas = null;\r\nclass StepOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profession: {},\r\n      radio: this.props.radio.value,\r\n      souscripteur: this.props.souscripteur.value,\r\n      permorale: false,\r\n      perphysique: false,\r\n      sexe: [],\r\n      assure: this.props.assure.value,\r\n      setuations: [],\r\n      professions: [],\r\n      vois: [],\r\n      dataloaded: false,\r\n      personlist: [],\r\n      personlistForAuto: [],\r\n      selectedPatente: [],\r\n      selectedCinSouscripteur: [],\r\n      selectedCinAsuree: [],\r\n      assurePresent: this.props.assurePresent.value,\r\n      typePersonneMoral: [],\r\n      secteurActivite: [],\r\n      typeProduit: \"MRB\",\r\n      personMoraleList: [],\r\n      personMoraleListForAuto: [],\r\n      souscripteurIsAssure: this.props.souscripteurIsAssure.value,\r\n      disableSouscripteuretAssure: this.props.souscripteurIsAssure.value,\r\n      dossierFinnancementForAuto: [],\r\n      selectedRefDossier: [],\r\n      consumeReferenceDossier: \"\",\r\n      partenaire: this.props.currentUser.pointVentes[0].partenairepv,\r\n      partenaireCode: \"\",\r\n      partenaireRadio: AL_AKHDAR_Code,\r\n      isAdmin: false,\r\n      partenaireData: {}\r\n    };\r\n    this.handleChangeCinSouscripteur = this.handleChangeCinSouscripteur.bind(\r\n      this\r\n    );\r\n    this.clearAutocompleteFields = this.clearAutocompleteFields.bind(this);\r\n    this.saveSouscripteur = this.saveSouscripteur.bind(this);\r\n  }\r\n  async getproprties() {\r\n    let vois = await getVois();\r\n    let personslist = await getallperson();\r\n    let gander = await getSexe();\r\n    let setuation = await getSetuation();\r\n    let profrssionResponse = await getProfession();\r\n    let personsMoraleListResponse = await getallPersonMorale();\r\n    let typePersonneMoraleResponse = await getAllTypePersonneMorales();\r\n    let secteurActiviteResponse = await getAllSecteurActivite();\r\n    let helpArray = [];\r\n    personslist.data.content.forEach(element => {\r\n      const object = element.cin;\r\n      helpArray.push(object);\r\n    });\r\n\r\n    let refDossierFinancement = [];\r\n\r\n    let helpArraymorale = [];\r\n    personsMoraleListResponse.data.content.forEach(element => {\r\n      const object = element.patente;\r\n      helpArraymorale.push(object);\r\n    });\r\n\r\n    this.setState({\r\n      dossierFinnancementForAuto: [...refDossierFinancement],\r\n      personMoraleList: [...personsMoraleListResponse.data.content],\r\n      sexe: [...gander.data],\r\n      setuations: [...setuation.data],\r\n      vois: [...vois.data],\r\n      dataloaded: true,\r\n      professions: [...profrssionResponse.data.content],\r\n      personlist: [...personslist.data.content],\r\n      personlistForAuto: [...helpArray],\r\n      personMoraleListForAuto: [...helpArraymorale],\r\n      typePersonneMoral: [...typePersonneMoraleResponse.data],\r\n      secteurActivite: [...secteurActiviteResponse.data.content]\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getproprties();\r\n\r\n    this.props.currentUser.roles.forEach(element => {\r\n      if (element.name === ADMIN) {\r\n        this.setState({\r\n          isAdmin: true,\r\n          partenaireCode: this.state.partenaireRadio\r\n        });\r\n      } else {\r\n        this.setState({\r\n          partenaireCode: this.props.currentUser.pointVentes[0].partenairepv\r\n            .code\r\n        });\r\n      }\r\n    });\r\n  }\r\n  searchPersonnemorale = value => {\r\n    const dataSource = [...this.state.personMoraleList];\r\n    this.setState({\r\n      souscripteur: dataSource.filter(item => item.patente === value.key)[0],\r\n      patente: value.key\r\n    });\r\n  };\r\n  searchPersonnePhysique = value => {\r\n    const dataSource = [...this.state.personlist];\r\n    this.setState({\r\n      souscripteur: dataSource.filter(item => item.cin === value.key)[0],\r\n      cin: value.key\r\n    });\r\n  };\r\n  onChangeSelect = value => {\r\n    const dataSource = [...this.state.personlist];\r\n    this.setState({\r\n      assurePresent: true,\r\n      assure: dataSource.filter(item => item.cin === value.key)[0]\r\n    });\r\n  };\r\n  handleSabmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {});\r\n  };\r\n  handleChangeCinSouscripteur(value) {\r\n    this.setState({ selectedCinSouscripteur: value });\r\n  }\r\n  clearAutocompleteFields() {\r\n    this.props.form.setFieldsValue({\r\n      patente: \"\",\r\n      cin: \"\",\r\n      cinAssure: \"\",\r\n      numeroDossierFinancement: \"\"\r\n    });\r\n  }\r\n  handlePersonphyCreationSousctipteur = data => {\r\n    this.setState({ souscripteur: data, perphysique: true, permorale: false });\r\n    this.props.form.setFieldsValue({\r\n      cin: { key: data.cin, label: data.cin }\r\n    });\r\n  };\r\n  handlePersonMoraleCreationSousctipteur = data => {\r\n    this.setState({ souscripteur: data, permorale: true, perphysique: false });\r\n    this.props.form.setFieldsValue({\r\n      patente: { key: data.patente, label: data.patente }\r\n    });\r\n  };\r\n  handlePersonphyCreationAssure = data => {\r\n    let list = [...this.state.personlist];\r\n    list.push(data);\r\n    this.setState({ assure: data, assurePresent: true, personlist: [...list] });\r\n    this.props.form.setFieldsValue({\r\n      assure: { key: data.cin, label: data.cin }\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.props.check(\r\n      this.state.souscripteurIsAssure,\r\n      this.state.souscripteurIsAssure || this.state.assurePresent,\r\n      this.state.souscripteur !== \"\",\r\n      this.state.souscripteur,\r\n      this.state.assure,\r\n      consumeDatas\r\n    );\r\n  }\r\n  handlechange = e => {\r\n    this.setState({\r\n      radio: e.target.value,\r\n      souscripteur: \"\",\r\n      assure: \"\",\r\n      souscripteurIsAssure: \"\",\r\n      disableSouscripteuretAssure: \"\"\r\n    });\r\n    this.clearAutocompleteFields();\r\n  };\r\n  onChange = e => {\r\n    if (this.state.radio === \"physique\" && e.target.checked) {\r\n      this.setState({\r\n        assure: this.state.souscripteur,\r\n        souscripteurIsAssure: true,\r\n        disableSouscripteuretAssure: true\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        assure: {\r\n          key: this.state.souscripteur.cin,\r\n          label: this.state.souscripteur.cin\r\n        }\r\n      });\r\n    } else\r\n      this.setState({\r\n        souscripteurIsAssure: false,\r\n        disableSouscripteuretAssure: false\r\n      });\r\n  };\r\n  calculeAge(date) {\r\n    return moment().diff(moment(date), \"years\");\r\n  }\r\n  async saveSouscripteur(value) {\r\n    let consumeData;\r\n    consumeData = await getDataFromBankingWebService(\r\n      this.state.partenaireCode,\r\n      value\r\n    );\r\n    if (consumeData.data === \"\") {\r\n      notification.info({\r\n        message: \"aucune donnée reçue\"\r\n      });\r\n    } else {\r\n      consumeData.data.partenaire = this.state.partenaire;\r\n\r\n      if (consumeData.data.typePersonne === PERSONNE_PHYSIQUE) {\r\n        try {\r\n          console.log(consumeData.data);\r\n\r\n          let response = await createPersonnePhysique(consumeData.data);\r\n\r\n          if (response.status === 200) {\r\n            notification.success({\r\n              message: \"personne bien ajoute\"\r\n            });\r\n\r\n            consumeDatas = consumeData.data;\r\n            this.setState({\r\n              personlist: [...this.state.personlist, response.data],\r\n              souscripteur: response.data,\r\n              radio: \"physique\",\r\n              personlistForAuto: [\r\n                ...this.state.personlistForAuto,\r\n                consumeData.data.cin\r\n              ]\r\n            });\r\n\r\n            this.props.form.setFieldsValue({\r\n              cin: {\r\n                key: response.data.cin,\r\n                label: response.data.cin\r\n              },\r\n              radio: \"physique\"\r\n            });\r\n          }\r\n        } catch (error) {\r\n          let responsecin = await getByCinIfExist(consumeData.data.cin);\r\n\r\n          if (responsecin.status === 200) {\r\n            notification.success({\r\n              message: \"personne deja inscrit\"\r\n            });\r\n\r\n            consumeDatas = consumeData.data;\r\n            this.setState({\r\n              personlist: [...this.state.personlist, responsecin.data],\r\n              souscripteur: responsecin.data,\r\n              radio: \"physique\",\r\n              personlistForAuto: [\r\n                ...this.state.personlistForAuto,\r\n                consumeData.data.cin\r\n              ]\r\n            });\r\n\r\n            this.props.form.setFieldsValue({\r\n              cin: {\r\n                key: responsecin.data.cin,\r\n                label: responsecin.data.cin\r\n              },\r\n              radio: \"physique\"\r\n            });\r\n          } else if (error.responsecin.status === 500) {\r\n            notification.error({\r\n              message:\r\n                \"Sorry! Something went wrong. Please try again!!!!!!!!!!!!!\"\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (consumeData.data.typePersonne === PERSONNE_MORALE) {\r\n        try {\r\n          let response = await createPersonneMorale(consumeData.data);\r\n\r\n          if (response.status === 200) {\r\n            consumeDatas = consumeData.data;\r\n            notification.success({\r\n              message: \"personne bien ajoute\"\r\n            });\r\n            this.setState({\r\n              personMoraleList: [...this.state.personMoraleList, response.data],\r\n              souscripteur: response.data,\r\n              radio: \"morale\",\r\n              personlistForAuto: [\r\n                ...this.state.personlistForAuto,\r\n                consumeData.data.patente\r\n              ]\r\n            });\r\n            this.props.form.setFieldsValue({\r\n              patente: {\r\n                key: consumeData.data.patente,\r\n                label: consumeData.data.patente\r\n              },\r\n              radio: \"morale\"\r\n            });\r\n          }\r\n        } catch (error) {\r\n          let response = await getByPatent(consumeData.data.patente);\r\n          if (response.status === 200) {\r\n            consumeDatas = consumeData.data;\r\n            notification.success({\r\n              message: \"personne deja inscrit\"\r\n            });\r\n            this.setState({\r\n              personMoraleList: [...this.state.personMoraleList, response.data],\r\n              souscripteur: response.data,\r\n              radio: \"morale\",\r\n              personlistForAuto: [\r\n                ...this.state.personlistForAuto,\r\n                consumeData.data.patente\r\n              ]\r\n            });\r\n            this.props.form.setFieldsValue({\r\n              patente: {\r\n                key: consumeData.data.patente,\r\n                label: consumeData.data.patente\r\n              },\r\n              radio: \"morale\"\r\n            });\r\n          } else if (error.response.status === 500) {\r\n            notification.error({\r\n              message: \"Attention! Il y a une manque des données\"\r\n            });\r\n          } else {\r\n            notification.error({\r\n              message: \"Takaful\",\r\n              description:\r\n                error.message || \"Sorry! saisissez les champs manquents\"\r\n            });\r\n          }\r\n        }\r\n      } else if (consumeData.data.typePersonne === \"\") {\r\n        notification.info({\r\n          message: \"le type du client manquant\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  changePartenaire = e => {\r\n    this.setState({\r\n      partenaireRadio: e.target.value,\r\n      partenaireCode: e.target.value\r\n    });\r\n    this.clearAutocompleteFields();\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const age = moment().diff(\r\n      moment(this.state.souscripteur.dateNaissance, \"DD-MM-YYYY\").format(),\r\n      \"years\"\r\n    );\r\n\r\n    return (\r\n      <Row>\r\n        <Col offset={1} span={23}>\r\n          <ComponentTitle level={4} title=\"Le souscripteur\" />\r\n          <Form layout=\"inline\" onSubmit={this.handleSabmit} id=\"formadd\">\r\n            <div style={{ minHeight: \"200px\" }}>\r\n              <Row>\r\n                <Col span={8}>\r\n                  <Col span={24}>\r\n                    <Form.Item>\r\n                      {getFieldDecorator(\"radio\", {\r\n                        rules: [{ required: false }],\r\n                        initialValue: this.state.radio\r\n                      })(\r\n                        <Radio.Group\r\n                          style={{ marginBottom: 25 }}\r\n                          buttonStyle=\"solid\"\r\n                          value={this.state.radio}\r\n                          onChange={this.handlechange}\r\n                        >\r\n                          <Radio.Button value=\"morale\">\r\n                            Personne morale\r\n                          </Radio.Button>\r\n                          <Radio.Button value=\"physique\">\r\n                            Personne physique\r\n                          </Radio.Button>\r\n                        </Radio.Group>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    {this.state.radio === \"physique\" && (\r\n                      <Form.Item label=\"CIN\">\r\n                        {getFieldDecorator(\"cin\", {\r\n                          rules: [\r\n                            { required: true, message: \"CIN is required!\" }\r\n                          ]\r\n                        })(\r\n                          <AutoComplete\r\n                            disabled={this.state.disableSouscripteuretAssure}\r\n                            defaultActiveFirstOption\r\n                            size=\"default\"\r\n                            style={{ width: 200 }} // 215 ecran pc bureau\r\n                            dataSource={this.state.personlistForAuto}\r\n                            onSelect={this.searchPersonnePhysique}\r\n                            allowClear={true}\r\n                            value={this.state.selectedCinSouscripteur}\r\n                            onChange={this.handleChangeCinSouscripteur}\r\n                            labelInValue\r\n                            placeholder=\"CIN\"\r\n                            filterOption={(inputValue, option) =>\r\n                              option.props.children\r\n                                .toUpperCase()\r\n                                .indexOf(inputValue.toUpperCase()) !== -1\r\n                            }\r\n                          />\r\n                        )}\r\n                      </Form.Item>\r\n                    )}\r\n                    {this.state.radio === \"morale\" && (\r\n                      <Form.Item label=\"Patente\">\r\n                        {getFieldDecorator(\"patente\", {\r\n                          rules: [\r\n                            { required: true, message: \"patente is required!\" }\r\n                          ]\r\n                        })(\r\n                          <AutoComplete\r\n                            size=\"default\"\r\n                            className=\"not-rounded\"\r\n                            style={{ width: 182 }} // 192 pc bureau\r\n                            dataSource={this.state.personMoraleListForAuto}\r\n                            onSelect={this.searchPersonnemorale}\r\n                            allowClear={true}\r\n                            labelInValue\r\n                            placeholder=\"Numéro de patente\"\r\n                            filterOption={(inputValue, option) =>\r\n                              option.props.children\r\n                                .toUpperCase()\r\n                                .indexOf(inputValue.toUpperCase()) !== -1\r\n                            }\r\n                          />\r\n                        )}\r\n                      </Form.Item>\r\n                    )}\r\n                    <Form.Item style={{ float: \"right\" }}>\r\n                      {this.state.dataloaded &&\r\n                        this.state.radio === \"physique\" && (\r\n                          <AddSouscripteur\r\n                            titre=\"Création d'un nouveau souscripteur physique\"\r\n                            personCreation={\r\n                              this.handlePersonphyCreationSousctipteur\r\n                            }\r\n                            professions={this.state.professions}\r\n                            sexe={this.state.sexe}\r\n                            setuation={this.state.setuations}\r\n                            vois={this.state.vois}\r\n                            type={this.state.typeProduit}\r\n                          />\r\n                        )}\r\n                      {this.state.dataloaded &&\r\n                        this.state.radio === \"morale\" && (\r\n                          <AddPerMorale\r\n                            titre=\"Création\"\r\n                            personCreation={\r\n                              this.handlePersonMoraleCreationSousctipteur\r\n                            }\r\n                            typePersonneMoral={this.state.typePersonneMoral}\r\n                            secteurActivite={this.state.secteurActivite}\r\n                            vois={this.state.vois}\r\n                          />\r\n                        )}\r\n                    </Form.Item>\r\n                    {this.state.radio === \"physique\" && (\r\n                      <Checkbox\r\n                        style={{ marginTop: \"10px\" }}\r\n                        onChange={this.onChange}\r\n                        checked={this.state.souscripteurIsAssure}\r\n                        disabled={!this.state.radio === \"physique\"}\r\n                      >\r\n                        Le souscripteur est l&apos;assuré lui même ?\r\n                      </Checkbox>\r\n                    )}\r\n                    <Divider style={{ marginTop: \"20px\" }}></Divider>\r\n                  </Col>\r\n\r\n                  <Col span={24}>\r\n                    {this.state.isAdmin === true && (\r\n                      <Form.Item>\r\n                        {getFieldDecorator(\"partenaire\", {\r\n                          rules: [{ required: false }],\r\n                          initialValue: this.state.partenaireRadio\r\n                        })(\r\n                          <Radio.Group\r\n                            style={{ marginBottom: 25 }}\r\n                            buttonStyle=\"solid\"\r\n                            value={this.state.partenaireRadio}\r\n                            onChange={this.changePartenaire}\r\n                          >\r\n                            <Radio.Button value={AL_AKHDAR_Code}>\r\n                              AlAkhdar banque\r\n                            </Radio.Button>\r\n                            <Radio.Button value={AL_YOUSR_Code}>\r\n                              AlYousr banque\r\n                            </Radio.Button>\r\n                          </Radio.Group>\r\n                        )}\r\n                      </Form.Item>\r\n                    )}\r\n                    <Form.Item label=\"N° Dossier de financement/Id Client\">\r\n                      {getFieldDecorator(\"numeroDossierFinancement\", {\r\n                        rules: [{ required: false }]\r\n                      })(\r\n                        <Search\r\n                          onSearch={this.saveSouscripteur}\r\n                          placeholder=\"N° Dossier de financement\"\r\n                          enterButton=\"OK\"\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Col>\r\n                <Col offset={1} span={14}>\r\n                  {this.state.radio === \"physique\" &&\r\n                    this.state.souscripteur !== \"\" &&\r\n                    age <= 69 && (\r\n                      <Descriptions\r\n                        size=\"small\"\r\n                        column={2}\r\n                        bordered={true}\r\n                        title=\"Informations du souscripteur physique\"\r\n                      >\r\n                        <Descriptions.Item label=\"Prénom\">\r\n                          {this.state.souscripteur.prenom}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Nom\">\r\n                          {this.state.souscripteur.nom}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Date de naissance\">\r\n                          {this.state.souscripteur.dateNaissance}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Age\">\r\n                          {age}{\" \"}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"CIN\">\r\n                          {this.state.souscripteur.cin}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"RIB\">\r\n                          {this.state.souscripteur.rib}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Matricule\">\r\n                          {this.state.souscripteur.matricule}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"N° Tiers\">\r\n                          {this.state.souscripteur.numTiers}\r\n                        </Descriptions.Item>\r\n                      </Descriptions>\r\n                    )}\r\n                  {this.state.souscripteur === \"\" && (\r\n                    <Empty\r\n                      description=\"Merci de mentionner le numéro de patente ou cin\"\r\n                      style={{\r\n                        margin: \"3% auto\",\r\n                        color: \"rgba(0, 0, 0, 0.45)\"\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {this.state.radio === \"physique\" &&\r\n                    this.state.souscripteur !== \"\" &&\r\n                    age > 69 &&\r\n                    notification.error({\r\n                      message: \"Takaful\",\r\n                      description:\r\n                        \"Ce sociétaire a dépassé l'âge autorisé à la souscription\"\r\n                    })}\r\n                  {this.state.radio === \"morale\" &&\r\n                    this.state.souscripteur !== \"\" && (\r\n                      <Descriptions\r\n                        size=\"small\"\r\n                        column={2}\r\n                        bordered={true}\r\n                        title=\"Informations du souscripteur morale\"\r\n                      >\r\n                        <Descriptions.Item label=\"Abb\">\r\n                          {this.state.souscripteur.abb}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Raison sociale\">\r\n                          {this.state.souscripteur.raisonSociale}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Patente\">\r\n                          {this.state.souscripteur.patente}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Ice\">\r\n                          {this.state.souscripteur.ice}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Code\">\r\n                          {this.state.souscripteur.code}\r\n                        </Descriptions.Item>\r\n                      </Descriptions>\r\n                    )}\r\n                </Col>\r\n                <Col offset={1} span={1}></Col>\r\n              </Row>\r\n            </div>\r\n            <div style={{ minHeight: \"200px\" }}>\r\n              <Row style={{ marginTop: \"20px\" }}>\r\n                <ComponentTitle level={4} title=\"L'assuré\" />\r\n                <Col span={8}>\r\n                  <Col span={24}>\r\n                    <Form.Item label=\"L'assuré\">\r\n                      {getFieldDecorator(\"cinAssure\", {\r\n                        rules: [\r\n                          { required: true, message: \"assuree is required!\" }\r\n                        ]\r\n                      })(\r\n                        <AutoComplete\r\n                          disabled={\r\n                            this.state.disableSouscripteuretAssure &&\r\n                            this.state.radio === \"physique\"\r\n                          }\r\n                          size=\"default\"\r\n                          style={{ width: 182 }} // 192 pc bureau\r\n                          dataSource={this.state.personlistForAuto}\r\n                          onSelect={this.onChangeSelect}\r\n                          allowClear={true}\r\n                          labelInValue\r\n                          placeholder=\"ajouter un assuré\"\r\n                          filterOption={(inputValue, option) =>\r\n                            option.props.children\r\n                              .toUpperCase()\r\n                              .indexOf(inputValue.toUpperCase()) !== -1\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                    <Form.Item style={{ float: \"right\" }}>\r\n                      {this.state.dataloaded && (\r\n                        <AddSouscripteur\r\n                          titre=\"Création d'un nouveau assuré\"\r\n                          personCreation={this.handlePersonphyCreationAssure}\r\n                          professions={this.state.professions}\r\n                          sexe={this.state.sexe}\r\n                          setuation={this.state.setuations}\r\n                          vois={this.state.vois}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24}></Col>\r\n                </Col>\r\n                <Col offset={1} span={14}>\r\n                  {this.state.assure !== \"\" && (\r\n                    <Descriptions\r\n                      size=\"small\"\r\n                      column={2}\r\n                      bordered={true}\r\n                      title=\"Informations de l'assuré\"\r\n                    >\r\n                      <Descriptions.Item label=\"Prénom\">\r\n                        {this.state.assure.prenom}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Nom\">\r\n                        {this.state.assure.nom}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Date de naissance\">\r\n                        {this.state.assure.dateNaissance}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Age\">{age} </Descriptions.Item>\r\n                      <Descriptions.Item label=\"CIN\">\r\n                        {this.state.assure.cin}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Matricule\">\r\n                        {this.state.assure.matricule}\r\n                      </Descriptions.Item>\r\n                    </Descriptions>\r\n                  )}\r\n                  {this.state.assure === \"\" && (\r\n                    <Empty\r\n                      description=\"Merci de remplir la partie assure\"\r\n                      style={{\r\n                        margin: \"3% auto\",\r\n                        color: \"rgba(0, 0, 0, 0.45)\"\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Col>\r\n                <Col offset={1} span={1}></Col>\r\n              </Row>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n        <Col offset={1} span={1}></Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      numeroDossierFinancement: Form.createFormField({\r\n        ...props.numeroDossierFinancement,\r\n        value: props.numeroDossierFinancement.value\r\n      }),\r\n      cin: Form.createFormField({\r\n        ...props.cin,\r\n        value: props.cin.value\r\n      }),\r\n      patente: Form.createFormField({\r\n        ...props.patente,\r\n        value: props.patente.value\r\n      }),\r\n      assure: Form.createFormField({\r\n        ...props.assure,\r\n        value: props.assure.value\r\n      }),\r\n      souscripteur: Form.createFormField({\r\n        ...props.souscripteur,\r\n        value: props.souscripteur.value\r\n      }),\r\n      radio: Form.createFormField({\r\n        ...props.radio,\r\n        value: props.radio.value\r\n      })\r\n    };\r\n  }\r\n})(StepOne);\r\n","/* eslint-disable react/prop-types */\r\nimport \"./StepThree.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getTarification } from \"../../../Parametrage/ProduitDeces/ProduitDecesAPI\";\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nconst currentDate = moment(moment(), dateFormat).add(1, \"days\");\r\nclass StepThree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      calculResultVisibilty: false,\r\n      OptionsAssurance: [],\r\n      tarification: {},\r\n      capital: null,\r\n      option: null,\r\n      differe: null,\r\n      tauxSurprime: null,\r\n      tauxFrais: null,\r\n      tauxGestion: null,\r\n      tvaFrais: null,\r\n      tvaGestion: null,\r\n      montantSurprime: 0,\r\n      montantCotisation: 0,\r\n      cotisationTotale: 0,\r\n      tauxTaxe: null,\r\n      prorata: 0,\r\n      encours: null,\r\n      cumul: 0,\r\n      fraisAcquisitionTTC: 0,\r\n      fraisGestionTTC: 0,\r\n      contributionPure: null,\r\n      datePrelevement: null,\r\n      PrelevementSource: this.props.PrelevementSource.value\r\n    };\r\n  }\r\n  async getTariffication(capital, differe) {\r\n    const age = moment().diff(\r\n      moment(this.props.assureObj.dateNaissance, \"DD-MM-YYYY\").format(),\r\n      \"years\"\r\n    );\r\n    const duree = this.props.dureeContrat.value;\r\n    const typeProduit = this.props.selectedproduit.produitType;\r\n    let response = await getTarification(\r\n      duree,\r\n      age,\r\n      capital,\r\n      differe,\r\n      typeProduit,\r\n      this.props.selectedproduit.id\r\n    );\r\n    this.setState({ tarification: response.data });\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.consumeData !== null) {\r\n      if (this.props.consumeData.differe === null) {\r\n        notification.open({\r\n          message: \"Le différé manquant.\"\r\n        });\r\n      }\r\n      if (this.props.consumeData.capitalAssure === null) {\r\n        notification.open({\r\n          message: \"Le capital assuré manquant.\"\r\n        });\r\n      }\r\n      if (this.props.consumeData.datePrelevement === null) {\r\n        notification.open({\r\n          message: \"La date de prélévement manquante.\"\r\n        });\r\n      }\r\n      if (this.props.consumeData.encours === null) {\r\n        notification.open({\r\n          message: \"L'encours manquant.\"\r\n        });\r\n      }\r\n      console.log(this.props.consumeData);\r\n      this.setState({\r\n        differe: this.props.consumeData.differe,\r\n        capital: this.props.consumeData.capitalAssure,\r\n        datePrelevement: moment(\r\n          this.props.consumeData.datePrelevement,\r\n          \"YYYY-MM-DD\"\r\n        ),\r\n        encours: this.props.consumeData.encours\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        Differe: this.props.consumeData.differe,\r\n        capitalAssure: this.props.consumeData.capitalAssure,\r\n        encours: this.props.consumeData.encours,\r\n        montantSurprime: this.props.consumeData.montantSurprime,\r\n        datePrelevement: moment(\r\n          this.props.consumeData.datePrelevement,\r\n          \"YYYY-MM-DD\"\r\n        )\r\n      });\r\n    }\r\n    if (this.props.selectedproduit.options.length === 1) {\r\n      this.props.form.setFieldsValue({\r\n        optionAssurance: this.props.selectedproduit.options[0].id\r\n      });\r\n    }\r\n    this.props.form.setFieldsValue({\r\n      tauxTaxe: this.props.selectedproduit.taxe.toFixed(2),\r\n      tauxInteret: 0,\r\n      dureeContrat: this.props.dureeContrat.value\r\n    });\r\n    this.setState({\r\n      tauxTaxe: this.props.selectedproduit.taxe.toFixed(2),\r\n      tauxFrais: this.props.selectedproduit.fraisAcquisition,\r\n      tauxGestion: this.props.selectedproduit.fraisGestion,\r\n      tvaFrais: this.props.selectedproduit.tvaFraisAcquisition,\r\n      tvaGestion: this.props.selectedproduit.tvaFraisGestion,\r\n      tauxInteret: 0,\r\n      OptionsAssurance: this.props.selectedproduit.options\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      montantSurprime: 0,\r\n      tauxSurprime: 0\r\n    });\r\n  }\r\n  handleSabmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      console.log(\"values\", values);\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    const typeProduit = this.props.selectedproduit.produitType;\r\n\r\n    if (\r\n      prevState.differe !== this.state.differe ||\r\n      prevState.capital !== this.state.capital\r\n    ) {\r\n      if (\r\n        this.state.capital !== \"\" &&\r\n        this.state.differe !== \"\" &&\r\n        this.state.differe !== null &&\r\n        this.state.capital !== null\r\n      )\r\n        this.getTariffication(this.state.capital, this.state.differe);\r\n    }\r\n    if (\r\n      prevState.tarification !== this.state.tarification &&\r\n      typeProduit === \"taux\"\r\n    ) {\r\n      const capital = this.props.form.getFieldValue(\"capitalAssure\");\r\n      this.setState({\r\n        montantCotisation: (this.state.tarification.taux * capital) / 100\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        montantCotisation: (this.state.tarification.taux * capital) / 100\r\n      });\r\n    } else if (\r\n      prevState.tarification !== this.state.tarification &&\r\n      typeProduit === \"forfait\"\r\n    ) {\r\n      this.setState({ montantCotisation: this.state.tarification.forfait });\r\n      this.props.form.setFieldsValue({\r\n        montantCotisation: this.state.tarification.forfait\r\n      });\r\n      this.setState({\r\n        fraisAcquisitionTTC:\r\n          (this.state.tauxFrais / 100) *\r\n          (1 + this.state.tvaFrais / 100) *\r\n          this.state.montantCotisation\r\n      });\r\n      this.setState({\r\n        fraisGestionTTC:\r\n          (this.state.tauxGestion / 100) *\r\n          (1 + this.state.tvaGestion / 100) *\r\n          this.state.montantCotisation\r\n      });\r\n      this.setState({\r\n        contributionPure:\r\n          this.state.montantCotisation -\r\n          this.state.fraisAcquisitionTTC -\r\n          this.state.fraisGestionTTC\r\n      });\r\n    }\r\n    if (prevState.montantCotisation !== this.state.montantCotisation) {\r\n      this.setState({\r\n        fraisAcquisitionTTC:\r\n          (this.state.tauxFrais / 100) *\r\n          (1 + this.state.tvaFrais / 100) *\r\n          this.state.montantCotisation\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        fraisAcquisitionTTC: (\r\n          (this.props.selectedproduit.taxeParaFiscale / 100) *\r\n          this.state.montantCotisation\r\n        ).toFixed(2)\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        montantTaxeParafiscale: (\r\n          (this.state.tauxFrais / 100) *\r\n          (1 + this.state.tvaFrais / 100) *\r\n          this.state.montantCotisation\r\n        ).toFixed(2)\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        montantAccessoire: this.props.selectedproduit.montantAccessoire.toFixed(\r\n          2\r\n        )\r\n      });\r\n      this.setState({\r\n        fraisGestionTTC:\r\n          (this.state.tauxGestion / 100) *\r\n          (1 + this.state.tvaGestion / 100) *\r\n          this.state.montantCotisation\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        fraisGestionTTC: (\r\n          (this.state.tauxGestion / 100) *\r\n          (1 + this.state.tvaGestion / 100) *\r\n          this.state.montantCotisation\r\n        ).toFixed(2)\r\n      });\r\n    }\r\n    if (prevState.fraisGestionTTC !== this.state.fraisGestionTTC) {\r\n      this.setState({\r\n        contributionPure:\r\n          this.state.montantCotisation -\r\n          this.state.fraisAcquisitionTTC -\r\n          this.state.fraisGestionTTC\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        contributionPure: (\r\n          this.state.montantCotisation -\r\n          this.state.fraisAcquisitionTTC -\r\n          this.state.fraisGestionTTC\r\n        ).toFixed(2)\r\n      });\r\n    }\r\n    if (\r\n      prevState.montantSurprime !== this.state.montantSurprime &&\r\n      this.state.montantCotisation !== null\r\n    ) {\r\n      this.props.form.validateFields([\"montantSurprime\"], (err, values) => {\r\n        if (!err) {\r\n          this.props.form.setFieldsValue({\r\n            tauxSurprime:\r\n              (this.state.montantSurprime / this.state.montantCotisation) * 100\r\n          });\r\n          this.setState({\r\n            tauxSurprime:\r\n              (this.state.montantSurprime / this.state.montantCotisation) * 100\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (\r\n      prevState.tauxSurprime !== this.state.tauxSurprime &&\r\n      this.state.montantCotisation !== null\r\n    ) {\r\n      this.props.form.validateFields([\"tauxSurprime\"], (err, values) => {\r\n        if (!err) {\r\n          this.props.form.setFieldsValue({\r\n            montantSurprime:\r\n              (this.state.tauxSurprime * this.state.montantCotisation) / 100\r\n          });\r\n          this.setState({\r\n            montantSurprime:\r\n              (this.state.tauxSurprime * this.state.montantCotisation) / 100\r\n          });\r\n        }\r\n      });\r\n    }\r\n    if (\r\n      prevState.montantSurprime !== this.state.montantSurprime ||\r\n      this.state.montantCotisation !== prevState.montantCotisation\r\n    ) {\r\n      if (this.state.montantCotisation !== null) {\r\n        this.props.form.validateFields([\"montantSurprime\"], (err, values) => {\r\n          if (!err) {\r\n            var montantTaxe =\r\n              (this.state.montantCotisation / 100) * this.state.tauxTaxe;\r\n            this.props.form.setFieldsValue({\r\n              cotisationTotale:\r\n                this.state.montantSurprime +\r\n                this.state.montantCotisation +\r\n                montantTaxe\r\n            });\r\n            this.setState({\r\n              cotisationTotale:\r\n                this.state.montantSurprime +\r\n                this.state.montantCotisation +\r\n                montantTaxe\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n    if (\r\n      prevState.montantCotisation !== this.state.montantCotisation &&\r\n      this.props.preiodicite.value.label !== \"Unique\"\r\n    ) {\r\n      if (this.state.montantCotisation !== null) {\r\n        if (currentDate.format(\"D\") <= 15) {\r\n          this.props.form.setFieldsValue({\r\n            prorata:\r\n              this.state.montantCotisation * ((13 - moment().format(\"M\")) / 12)\r\n          });\r\n          this.setState({\r\n            prorata:\r\n              this.state.montantCotisation * ((13 - moment().format(\"M\")) / 12)\r\n          });\r\n        } else {\r\n          this.props.form.setFieldsValue({\r\n            prorata:\r\n              this.state.montantCotisation *\r\n              ((12 - this.props.dateEffet.value.format(\"M\")) / 12)\r\n          });\r\n          this.setState({\r\n            prorata:\r\n              this.state.montantCotisation *\r\n              ((12 - this.props.dateEffet.value.format(\"M\")) / 12) //12 ou  13\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (\r\n      prevState.prorata !== this.state.prorata &&\r\n      this.state.tauxTaxe !== null\r\n    ) {\r\n      this.props.form.setFieldsValue({\r\n        montantTaxe: (this.state.prorata * this.state.tauxTaxe) / 100\r\n      });\r\n      this.setState({\r\n        montantTaxe: (this.state.prorata * this.state.tauxTaxe) / 100\r\n      });\r\n    }\r\n    if (\r\n      prevState.prorata !== this.state.prorata &&\r\n      this.state.tauxFrais !== null\r\n    ) {\r\n      this.props.form.setFieldsValue({\r\n        montantFrais: (this.state.prorata * this.state.tauxFrais) / 100\r\n      });\r\n      this.setState({\r\n        montantFrais: (this.state.prorata * this.state.tauxFrais) / 100\r\n      });\r\n    }\r\n    if (\r\n      prevState.encours !== this.state.encours &&\r\n      this.state.capital !== null\r\n    ) {\r\n      this.setState({\r\n        cumul: parseFloat(this.state.encours) + parseFloat(this.state.capital)\r\n      });\r\n\r\n      this.props.form.setFieldsValue({\r\n        cumul: parseFloat(this.state.encours) + parseFloat(this.state.capital)\r\n      });\r\n    }\r\n  }\r\n  // async normeCapitalAge(age, capital, produit) {\r\n  //   let responseNorme = await getNormeByCapitalAndAge(age, capital, produit);\r\n  //   console.log(responseNorme.data);\r\n\r\n  //   if (capital < responseNorme.data.capitalMin) {\r\n  //     notification.error({\r\n  //       message: \"TAKAFUL\",\r\n  //       description: \"Augmenter.\",\r\n  //       duration: 3600\r\n  //     });\r\n  //   }\r\n  // if (capital > responseNorme.data.capitalMax) {\r\n  //   notification.error({\r\n  //     message: \"TAKAFUL\",\r\n  //     description: \"Diminuer\",\r\n  //     duration: 3600\r\n  //   });\r\n  // }\r\n  // }\r\n  onChangeDatePrelevement = v => {\r\n    this.setState({ datePrelevement: v });\r\n  };\r\n  onChangeDiffere = e => {\r\n    this.setState({ differe: e.target.value });\r\n  };\r\n  onChangeCapital = e => {\r\n    this.setState({ capital: e.target.value });\r\n\r\n    if (this.state.encours !== null) {\r\n      let index = parseFloat(this.state.encours) + parseFloat(e.target.value);\r\n      console.log(\"index :\", index);\r\n      this.setState({\r\n        cumul: parseFloat(this.state.encours) + parseFloat(e.target.value)\r\n      });\r\n\r\n      this.props.form.setFieldsValue({\r\n        cumul: parseFloat(this.state.encours) + parseFloat(e.target.value)\r\n      });\r\n    }\r\n\r\n    // const age = moment().diff(\r\n    //   moment(this.props.assureObj.dateNaissance, \"DD-MM-YYYY\").format(),\r\n    //   \"years\"\r\n    // );\r\n    // this.normeCapitalAge(age, e.target.value, this.props.selectedproduit.id);\r\n  };\r\n  onChangeOption = value => {\r\n    this.setState({ option: value });\r\n  };\r\n  onChangemontantSurprime = e => {\r\n    this.setState({ montantSurprime: e.target.value });\r\n  };\r\n  onChangetauxSurprime = e => {\r\n    this.setState({ tauxSurprime: e.target.value });\r\n  };\r\n  onChangeEncours = e => {\r\n    this.setState({ encours: e.target.value });\r\n  };\r\n  calculer = () => {\r\n    if (this.state.tarification.found === true)\r\n      this.setState({ calculResultVisibilty: true });\r\n    else {\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => notification.close(key)}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      );\r\n      notification.warn({\r\n        message: \"Tarification produit invalide\",\r\n        description:\r\n          \"le produit que vous avez choisi ne contient pas de tarification avec les valeurs saisie, merci d'avoir vérifier les valeurs et réssayer!\",\r\n        btn,\r\n        duration: 0,\r\n        key\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 }\r\n      }\r\n    };\r\n    const columnsSimulation = [\r\n      {\r\n        title: \"MONTANT DE PARTICIPATION HT (DH)\",\r\n        dataIndex: \"cotisation\"\r\n      },\r\n      {\r\n        title: \"Montant de taxe (DH)\",\r\n        dataIndex: \"montantTaxe\"\r\n      },\r\n      {\r\n        title: \"Montant de participation TTC (DH)\",\r\n        dataIndex: \"total\"\r\n      },\r\n      {\r\n        title: \"Prorata HT (DH)\",\r\n        dataIndex: \"Prorata\"\r\n      },\r\n      {\r\n        title: \"Montant taxe 10% au prorata (DH)\",\r\n        dataIndex: \"taxeProrata\"\r\n      },\r\n      {\r\n        title: \"Prorata TTC (DH)\",\r\n        dataIndex: \"ProrataTTC\"\r\n      }\r\n    ];\r\n    const columns = [\r\n      {\r\n        title: \"MONTANT DE PARTICIPATION HT (DH)\",\r\n        dataIndex: \"cotisation\"\r\n      },\r\n      {\r\n        title: \"Montant de taxe (DH)\",\r\n        dataIndex: \"montantTaxe\"\r\n      },\r\n      {\r\n        title: \"Montant de participation TTC (DH)\",\r\n        dataIndex: \"total\"\r\n      }\r\n    ];\r\n    const dataSimulation = [\r\n      {\r\n        key: \"1\",\r\n        cotisation: parseFloat(this.state.montantCotisation).toFixed(2),\r\n        montantTaxe: parseFloat(\r\n          (this.state.montantCotisation * this.state.tauxTaxe) / 100\r\n        ).toFixed(2),\r\n        total: parseFloat(this.state.cotisationTotale).toFixed(2),\r\n        Prorata: parseFloat(this.state.prorata).toFixed(2),\r\n        taxeProrata: parseFloat((this.state.prorata * 10) / 100).toFixed(2),\r\n        ProrataTTC: parseFloat(\r\n          (this.state.prorata * 10) / 100 + this.state.prorata\r\n        ).toFixed(2)\r\n      }\r\n    ];\r\n    const data = [\r\n      {\r\n        key: \"1\",\r\n        cotisation: parseFloat(this.state.montantCotisation).toFixed(2),\r\n        montantTaxe: parseFloat(\r\n          (this.state.montantCotisation * this.state.tauxTaxe) / 100\r\n        ).toFixed(2),\r\n        total: parseFloat(this.state.cotisationTotale).toFixed(2)\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={24} offset={1}>\r\n            <Form\r\n              {...formItemLayout}\r\n              onSubmit={this.handleSabmit}\r\n              id=\"stepthree\"\r\n            >\r\n              <Col span={10}>\r\n                <Form.Item label=\"Différé\">\r\n                  {getFieldDecorator(\"Differe\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"Mois\"\r\n                      onChange={this.onChangeDiffere}\r\n                      className=\"number-input\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Taux surprime\">\r\n                  {getFieldDecorator(\"tauxSurprime\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"%\"\r\n                      className=\"number-input\"\r\n                      onChange={this.onChangetauxSurprime}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Montant surprime\">\r\n                  {getFieldDecorator(\"montantSurprime\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"DH\"\r\n                      className=\"number-input\"\r\n                      onChange={this.onChangemontantSurprime}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Encours\">\r\n                  {getFieldDecorator(\"encours\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"DH\"\r\n                      className=\"number-input\"\r\n                      onChange={this.onChangeEncours}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n\r\n                {this.state.OptionsAssurance.length !== 0 && (\r\n                  <Form.Item label=\"\">\r\n                    <Input\r\n                      style={{ backgroundColor: \"#fafafa\", border: \"none\" }}\r\n                      disabled\r\n                    ></Input>\r\n                  </Form.Item>\r\n                )}\r\n                {/* fin saisie col left */}\r\n                <Form.Item label=\"Montant Taxe\" hidden={true}>\r\n                  {getFieldDecorator(\"montantTaxe\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        message: \"Format invalide!\",\r\n                        required: true\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input addonAfter=\"DH\" className=\"number-input\" disabled />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Taux de taxe\" hidden={true}>\r\n                  {getFieldDecorator(\"tauxTaxe\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"  %  \"\r\n                      className=\"number-input simulation-input\"\r\n                      disabled\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Montant de cotisation\" hidden={true}>\r\n                  {getFieldDecorator(\"montantCotisation\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonBefore=\"MC\"\r\n                      addonAfter=\"DH\"\r\n                      className=\"number-input simulation-input\"\r\n                      disabled\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Frais Acquisition TTC\" hidden={true}>\r\n                  {getFieldDecorator(\"fraisAcquisitionTTC\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"DH\"\r\n                      className=\"number-input simulation-input\"\r\n                      disabled\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Frais gestion TTC\" hidden={true}>\r\n                  {getFieldDecorator(\"fraisGestionTTC\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"DH\"\r\n                      className=\"number-input simulation-input\"\r\n                      disabled\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Contribution Pure\" hidden={true}>\r\n                  {getFieldDecorator(\"contributionPure\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"DH\"\r\n                      className=\"number-input simulation-input\"\r\n                      disabled\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={1}></Col>\r\n              <Col span={11}>\r\n                <Form.Item label=\"Durée du contrat\">\r\n                  {getFieldDecorator(\"dureeContrat\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input addonAfter=\"%\" className=\"number-input\" disabled />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Taux de financement\">\r\n                  {getFieldDecorator(\"tauxInteret\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(<Input addonAfter=\"%\" className=\"number-input\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Capital assuré\">\r\n                  {getFieldDecorator(\"capitalAssure\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"DH\"\r\n                      onChange={this.onChangeCapital}\r\n                      className=\"number-input\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Date de prélèvement\">\r\n                  {getFieldDecorator(\"datePrelevement\", {\r\n                    rules: [\r\n                      { required: true, message: \"ce champ est obligatoire\" }\r\n                    ]\r\n                  })(\r\n                    <DatePicker\r\n                      onChange={this.onChangeDatePrelevement}\r\n                      format={dateFormat}\r\n                      className=\"date-style\"\r\n                    ></DatePicker>\r\n                  )}\r\n                </Form.Item>\r\n\r\n                {/* {this.state.OptionsAssurance.length !== 0 && (\r\n                  <Form.Item label=\"Option Assurance\">\r\n                    {getFieldDecorator(\"optionAssurance\", {\r\n                      valuePropName: \"selected\",\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"Option Assurance\"\r\n                        optionLabelProp=\"label\"\r\n                        labelInValue\r\n                        onChange={this.onChangeOption}\r\n                        defaultValue={\r\n                          this.state.OptionsAssurance.length === 1 && {\r\n                            value: this.state.OptionsAssurance[0].id,\r\n                            label: this.state.OptionsAssurance[0].libelle,\r\n                          }\r\n                        }\r\n                      >\r\n                        {this.state.OptionsAssurance.map((element) => {\r\n                          return (\r\n                            <Option value={element.id} label={element.libelle}>\r\n                              {element.libelle}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                )} */}\r\n                {/* {!this.state.OptionsAssurance.length !== 0 && ( */}\r\n\r\n                {/* )} */}\r\n                {/* {this.state.OptionsAssurance.length !== 0 && (\r\n                <Form.Item label=\"\">\r\n                  <Input style={{ backgroundColor: \"#fafafa\", border: \"none\" }} disabled></Input>\r\n                </Form.Item>\r\n              )} */}\r\n                {/* fin saisie col right */}\r\n                <Form.Item label=\"Montant du frais\" hidden={true}>\r\n                  {getFieldDecorator(\"montantFrais\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        message: \"Format invalide!\",\r\n                        required: true\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input addonAfter=\"DH\" className=\"number-input\" disabled />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Montant taxe parafiscale\" hidden={true}>\r\n                  {getFieldDecorator(\"montantTaxeParafiscale\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        message: \"Format invalide!\",\r\n                        required: true\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input addonAfter=\"DH\" className=\"number-input\" disabled />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Montant Accessoire\" hidden={true}>\r\n                  {getFieldDecorator(\"montantAccessoire\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        message: \"Format invalide!\",\r\n                        required: true\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input addonAfter=\"DH\" className=\"number-input\" disabled />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Cumul\" hidden={true}>\r\n                  {getFieldDecorator(\"cumul\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonAfter=\"DH\"\r\n                      className=\"number-input simulation-input\"\r\n                      disabled\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Cotisation totale\" hidden={true}>\r\n                  {getFieldDecorator(\"cotisationTotale\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      addonBefore=\"CT\"\r\n                      addonAfter=\"DH\"\r\n                      className=\"number-input simulation-input\"\r\n                      disabled\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Prorata\" hidden={true}>\r\n                  {getFieldDecorator(\"prorata\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input addonAfter=\"DH\" className=\"number-input\" disabled />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={10}></Col>\r\n              <Col span={2}>\r\n                <Button\r\n                  type=\"primary\"\r\n                  className=\"nouveau-btn\"\r\n                  style={{ float: \"right\" }}\r\n                  onClick={this.calculer}\r\n                >\r\n                  Calculer\r\n                </Button>\r\n              </Col>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n\r\n        {this.state.calculResultVisibilty ? (\r\n          this.props.preiodicite.value.label === \"Unique\" ? (\r\n            <Row>\r\n              <Table\r\n                className=\"table-simulation\"\r\n                columns={columns}\r\n                dataSource={data}\r\n                pagination={false}\r\n                align=\"center\"\r\n                size=\"middle\"\r\n              />\r\n            </Row>\r\n          ) : (\r\n            <Row>\r\n              <Table\r\n                className=\"table-simulation\"\r\n                columns={columnsSimulation}\r\n                dataSource={dataSimulation}\r\n                pagination={false}\r\n                align=\"center\"\r\n                size=\"middle\"\r\n              />\r\n            </Row>\r\n          )\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      Differe: Form.createFormField({\r\n        ...props.Differe,\r\n        value: props.Differe.value\r\n      }),\r\n      optionAssurance: Form.createFormField({\r\n        ...props.optionAssurance,\r\n        value: props.optionAssurance.value\r\n      }),\r\n      prorata: Form.createFormField({\r\n        ...props.prorata,\r\n        value: props.prorata.value\r\n      }),\r\n      capitalAssure: Form.createFormField({\r\n        ...props.capitalAssure,\r\n        value: props.capitalAssure.value\r\n      }),\r\n      montantSurprime: Form.createFormField({\r\n        ...props.montantSurprime,\r\n        value: props.montantSurprime.value\r\n      }),\r\n      montantFrais: Form.createFormField({\r\n        ...props.montantFrais,\r\n        value: props.montantFrais.value\r\n      }),\r\n      montantTaxe: Form.createFormField({\r\n        ...props.montantTaxe,\r\n        value: props.montantTaxe.value\r\n      }),\r\n      tauxTaxe: Form.createFormField({\r\n        ...props.tauxTaxe,\r\n        value: props.tauxTaxe.value\r\n      }),\r\n      montantCotisation: Form.createFormField({\r\n        ...props.montantCotisation,\r\n        value: props.montantCotisation.value\r\n      }),\r\n      datePrelevement: Form.createFormField({\r\n        ...props.datePrelevement,\r\n        value: props.datePrelevement.value\r\n      }),\r\n      tauxInteret: Form.createFormField({\r\n        ...props.tauxInteret,\r\n        value: props.tauxInteret.value\r\n      }),\r\n      tauxSurprime: Form.createFormField({\r\n        ...props.tauxSurprime,\r\n        value: props.tauxSurprime.value\r\n      }),\r\n      cotisationTotale: Form.createFormField({\r\n        ...props.cotisationTotale,\r\n        value: props.cotisationTotale.value\r\n      }),\r\n      encours: Form.createFormField({\r\n        ...props.encours,\r\n        value: props.encours.value\r\n      }),\r\n      cumul: Form.createFormField({\r\n        ...props.cumul,\r\n        value: props.cumul.value\r\n      }),\r\n      fraisAcquisitionTTC: Form.createFormField({\r\n        ...props.fraisAcquisitionTTC,\r\n        value: props.fraisAcquisitionTTC.value\r\n      }),\r\n      fraisGestionTTC: Form.createFormField({\r\n        ...props.fraisGestionTTC,\r\n        value: props.fraisGestionTTC.value\r\n      }),\r\n      contributionPure: Form.createFormField({\r\n        ...props.contributionPure,\r\n        value: props.contributionPure.value\r\n      }),\r\n      dureeContrat: Form.createFormField({\r\n        ...props.dureeContrat,\r\n        value: props.dureeContrat.value\r\n      }),\r\n      montantTaxeParafiscale: Form.createFormField({\r\n        ...props.montantTaxeParafiscale,\r\n        value: props.montantTaxeParafiscale.value\r\n      }),\r\n      montantAccessoire: Form.createFormField({\r\n        ...props.montantAccessoire,\r\n        value: props.montantAccessoire.value\r\n      })\r\n    };\r\n  }\r\n})(StepThree);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  Row,\r\n  Select,\r\n  InputNumber,\r\n  notification,\r\n  Button\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nconst { Option } = Select;\r\nclass StepTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pointsVentes: this.props.currentUser.pointVentes,\r\n      periodicites: [],\r\n      showField: false,\r\n      produits: [],\r\n      dateEffet:\r\n        this.props.consumeData !== null\r\n          ? moment(this.props.consumeData.dateEffet, \"DD/MM/YYYY\")\r\n          : moment(moment(), \"YYYY-MM-DD\").add(1, \"days\"),\r\n      dateEcheance: this.props.dateEcheance.value,\r\n      dureeContrat: this.props.dureeContrat.value,\r\n      selectedProduct: this.props.selectedProduct.value\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.consumeData !== null) {\r\n      if (this.props.consumeData.dureeContrat === null) {\r\n        notification.open({\r\n          message: \"La durée du contrat manquante.\"\r\n        });\r\n      }\r\n      if (this.props.consumeData.dateEcheance === null) {\r\n        notification.open({\r\n          message: \"Date d'écheance manquant.\"\r\n        });\r\n      }\r\n      if (this.props.consumeData.partenaire === null) {\r\n        notification.open({\r\n          message: \"Le partenaire manquant.\"\r\n        });\r\n      }\r\n      if (this.props.consumeData.produit === null) {\r\n        notification.error({\r\n          message: \"Le produit manquant.\"\r\n        });\r\n      }\r\n      if (this.props.consumeData.preiodicite === null) {\r\n        notification.open({\r\n          message: \"La périodicité manquante.\"\r\n        });\r\n      }\r\n      this.props.form.setFieldsValue({\r\n        dateEffet: moment(this.props.consumeData.dateEffet, \"DD/MM/YYYY\"),\r\n        dureeContrat: this.props.consumeData.dureeContrat,\r\n        dateEcheance: moment(this.props.consumeData.dateEcheance, \"DD/MM/YYYY\"),\r\n        partenaire: {\r\n          key: this.props.consumeData.partenaire.id,\r\n          label: this.props.consumeData.partenaire.raisonSocial\r\n        },\r\n        produit: {\r\n          key: this.props.consumeData.produit.id,\r\n          label: this.props.consumeData.produit.code\r\n        },\r\n        preiodicite: {\r\n          key: this.props.consumeData.preiodicite.id,\r\n          label: this.props.consumeData.preiodicite.libelle\r\n        }\r\n      });\r\n    } else {\r\n      this.props.form.setFieldsValue({\r\n        dateEffet: this.state.dateEffet\r\n      });\r\n    }\r\n    if (this.state.pointsVentes.length === 1) {\r\n      this.props.form.setFieldsValue({\r\n        pointVente: this.state.pointsVentes[0].id\r\n      });\r\n    }\r\n  }\r\n  handleEffetDateChange = value => {\r\n    if (this.state.dateEcheance !== null) {\r\n      let echeanceDate = this.state.dateEcheance;\r\n      this.setState({\r\n        dateEffet: value,\r\n        dureeContrat: echeanceDate.diff(value, \"months\")\r\n      });\r\n    }\r\n  };\r\n  handleEcheanceDateChange = value => {\r\n    let effetDate = this.state.dateEffet;\r\n    this.setState({\r\n      dateEcheance: value,\r\n      dureeContrat: value.diff(effetDate, \"months\")\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dureeContrat: value.diff(effetDate, \"months\")\r\n    });\r\n    const age = moment(value).diff(\r\n      moment(this.props.assure.value.dateNaissance, \"DD-MM-YYYY\").format(),\r\n      \"years\"\r\n    );\r\n\r\n    if (age >= 70) {\r\n      this.props.form.setFieldsValue({\r\n        dureeContrat: \" \"\r\n      });\r\n\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => notification.close(key)}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      );\r\n      notification.error({\r\n        message: \"TAKAFUL\",\r\n        description: \"l'âge du sociètaire à l'échéance dépasse 70.\",\r\n        btn,\r\n        duration: 0,\r\n        key\r\n      });\r\n    }\r\n  };\r\n\r\n  disabledDate = current => {\r\n    return (\r\n      current &&\r\n      current <\r\n        moment(moment().format(\"YYYY-MM-DD\"), \"YYYY-MM-DD\").add(2, \"days\")\r\n    );\r\n  };\r\n\r\n  disabledDateEcheance = current => {\r\n    return current && current < this.state.dateEffet.endOf(\"day\");\r\n  };\r\n\r\n  handleSabmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll();\r\n  };\r\n  onChange = e => {\r\n    let date = moment.addRealMonth(this.state.dateEffet, e.target.value);\r\n    this.setState({\r\n      dureeContrat: e.target.value,\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value)\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value),\r\n      dureeContrat: parseInt(e.target.value)\r\n    });\r\n    const age = moment(date).diff(\r\n      moment(this.props.assure.value.dateNaissance, \"DD-MM-YYYY\").format(),\r\n      \"years\"\r\n    );\r\n\r\n    if (age >= 70) {\r\n      e.target.value = \"\";\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => notification.close(key)}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      );\r\n      notification.error({\r\n        message: \"TAKAFUL\",\r\n        description: \"l'âge du sociètaire à l'echeance dépasse 70.\",\r\n        btn,\r\n        duration: 0,\r\n        key\r\n      });\r\n    }\r\n  };\r\n  onChangeProduit = value => {\r\n    let selectedproduit = this.state.produits.filter(\r\n      item => item.code === value.label\r\n    );\r\n\r\n    if (selectedproduit[0].normes.length === 0) {\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => notification.close(key)}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      );\r\n      this.setState({ booleen: true });\r\n      notification.error({\r\n        message: \"TAKAFUL\",\r\n        description: \"Le produit choisi n'a aucune norme de séléction.\",\r\n        btn,\r\n        duration: 0,\r\n        key\r\n      });\r\n    }\r\n    this.setState({\r\n      periodicites: selectedproduit[0].periodicites,\r\n      selectedProduct: selectedproduit[0].code\r\n    });\r\n  };\r\n  partnerChange = value => {\r\n    this.setState({\r\n      produits: this.props.produits.filter(\r\n        item => item.partenaire.raisonSocial === value.label\r\n      )\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      produit: \"\",\r\n      preiodicite: \"\"\r\n    });\r\n  };\r\n  onChangePointDeVente = () => {\r\n    this.props.form.setFieldsValue({\r\n      produit: \"\",\r\n      preiodicite: \"\",\r\n      partenaire: \"\"\r\n    });\r\n  };\r\n  onChangePeriodicite = value => {\r\n    if (value.label === \"Unique avec étalement\") {\r\n      this.setState({ showField: true });\r\n    } else {\r\n      this.setState({ showField: false });\r\n    }\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayout} onSubmit={this.handleSabmit} id=\"steptwo\">\r\n            <Col span={10}>\r\n              <Form.Item label=\"Date d'effet\" hasFeedback>\r\n                {getFieldDecorator(\"dateEffet\", {\r\n                  valuePropName: \"selected\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entre la Date d'effet\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    className=\"date-style\"\r\n                    format={dateFormat}\r\n                    disabledDate={this.disabledDate}\r\n                    defaultValue={this.state.dateEffet}\r\n                    onChange={this.handleEffetDateChange}\r\n                  ></DatePicker>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Durée de contrat\">\r\n                {getFieldDecorator(\"dureeContrat\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/^[0-9\\b]+$/),\r\n                      message: \"Format invalide !\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    type=\"number\"\r\n                    className=\"number-input\"\r\n                    onChange={this.onChange}\r\n                    addonAfter=\"Mois\"\r\n                    defaultValue={this.state.dureeContrat}\r\n                    placeholder=\"durée de contrat\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Intermédiaire\" hasFeedback>\r\n                {getFieldDecorator(\"partenaire\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez un Intermédiaire\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"Intermédiaire\"\r\n                    onSelect={this.partnerChange}\r\n                    labelInValue\r\n                  >\r\n                    {this.props.partenaires.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.raisonSocial}\r\n                        >\r\n                          {element.raisonSocial}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={1}></Col>\r\n            <Col span={10}>\r\n              <Form.Item label=\"Date d'échéance\" hasFeedback>\r\n                {getFieldDecorator(\"dateEcheance\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une date d'echeance\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    className=\"date-style\"\r\n                    format={dateFormat}\r\n                    disabledDate={this.disabledDateEcheance}\r\n                    onChange={this.handleEcheanceDateChange}\r\n                  ></DatePicker>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Agence\" hasFeedback>\r\n                {getFieldDecorator(\"pointVente\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une agence\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"agence\"\r\n                    defaultValue={\r\n                      this.state.pointsVentes.length === 1 &&\r\n                      this.state.pointsVentes[0].id\r\n                    }\r\n                    onChange={this.onChangePointDeVente}\r\n                  >\r\n                    {this.state.pointsVentes.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Produit\" hasFeedback>\r\n                {getFieldDecorator(\"produit\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez un produit\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"produit\"\r\n                    onChange={this.onChangeProduit}\r\n                    labelInValue\r\n                  >\r\n                    {this.state.produits.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.code}\r\n                        >\r\n                          {element.code}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Préiodicité\" hasFeedback>\r\n                {getFieldDecorator(\"preiodicite\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une preiodicite\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    onChange={this.onChangePeriodicite}\r\n                    placeholder=\"Préiodicité\"\r\n                    labelInValue\r\n                  >\r\n                    {this.state.periodicites.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              {this.state.showField && (\r\n                <Form.Item label=\"Nombre mensualités d’étalement de la prime unique:\">\r\n                  {getFieldDecorator(\r\n                    \"NombreMensualitesEtalementLaPrimeUnique\",\r\n                    {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Format invalide !\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(<InputNumber className=\"number-input\" />)}\r\n                </Form.Item>\r\n              )}\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nmoment.addRealMonth = function addRealMonth(d, m) {\r\n  var fm = moment(d).add(m, \"M\");\r\n  var fmEnd = moment(fm).endOf(\"month\");\r\n  return d.date() !== fm.date() && fm.isSame(fmEnd.format(\"YYYY-MM-DD\"))\r\n    ? fm.add(1, \"d\")\r\n    : fm;\r\n};\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      NombreMensualitesEtalementLaPrimeUnique: Form.createFormField({\r\n        ...props.NombreMensualitesEtalementLaPrimeUnique,\r\n        value: props.NombreMensualitesEtalementLaPrimeUnique.value\r\n      }),\r\n      dateEffet: Form.createFormField({\r\n        ...props.dateEffet,\r\n        value: props.dateEffet.value\r\n      }),\r\n      dureeContrat: Form.createFormField({\r\n        ...props.dureeContrat,\r\n        value: props.dureeContrat.value\r\n      }),\r\n      preiodicite: Form.createFormField({\r\n        ...props.preiodicite,\r\n        value: props.preiodicite.value\r\n      }),\r\n      dateEcheance: Form.createFormField({\r\n        ...props.dateEcheance,\r\n        value: props.dateEcheance.value\r\n      }),\r\n      pointVente: Form.createFormField({\r\n        ...props.pointVente,\r\n        value: props.pointVente.value\r\n      }),\r\n      produit: Form.createFormField({\r\n        ...props.produit,\r\n        value: props.produit.value\r\n      }),\r\n      partenaire: Form.createFormField({\r\n        ...props.partenaire,\r\n        value: props.partenaire.value\r\n      }),\r\n      selectedProduct: Form.createFormField({\r\n        ...props.selectedProduct,\r\n        value: props.selectedProduct.value\r\n      })\r\n    };\r\n  }\r\n})(StepTwo);\r\n","/* eslint-disable react/prop-types */\r\nimport \"./Souscription.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Descriptions,\r\n  Divider,\r\n  notification,\r\n  Steps,\r\n  Input,\r\n  Modal,\r\n  Form,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connectedUserContext } from \"../../../app/App\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport StepFour from \"./StepFour/StepFour\";\r\nimport StepOne from \"./StepOne/StepOne\";\r\nimport StepThree from \"./StepThree/StepThree\";\r\nimport StepTwo from \"./StepTwo/StepTwo\";\r\nimport moment from \"moment\";\r\nimport { getAllPartenaire } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport { getDecesProduit } from \"../../Parametrage/ProduitDeces/ProduitDecesAPI\";\r\nimport {\r\n  createContratDeces,\r\n  getPeriodicite\r\n} from \"../../GestionContrats/ContratsAPI\";\r\nimport {\r\n  getNormeByCapitalAndAge,\r\n  lettreOrientation,\r\n  conditionParticulier,\r\n  getContratById,\r\n  updateDecesContratOrientation\r\n} from \"./SouscriptionAPI\";\r\nimport { getAuxiliairesByType } from \"../../Parametrage/Auxiliaires/AuxiliaireAPI\";\r\nimport {\r\n  STATUS_WAITING_ACCEPTATION,\r\n  MEDECIN_EXAMINATEUR\r\n} from \"../../../constants/index\";\r\nimport { jasperFile } from \"../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nconst { Step } = Steps;\r\nconst { Option } = Select;\r\nvar pointVente = \"\";\r\nvar numeroContrat = \"\";\r\nlet dateCP = new Date();\r\nlet consumeData = null;\r\nclass Souscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      assure: false,\r\n      examinateur: \"\",\r\n      visible: false,\r\n      booleen: false,\r\n      contrat: [],\r\n      souscripteur: false,\r\n      allow: false,\r\n      allowSec: false,\r\n      souscripteurObj: {},\r\n      assureObj: {},\r\n      current: 0,\r\n      produits: [],\r\n      Partenaires: [],\r\n      periodicites: [],\r\n      normes: null,\r\n      encours: 0,\r\n      medecins: [],\r\n      cumul: 0,\r\n      fields: {\r\n        // step one\r\n        radio: { value: \"morale\" },\r\n        cin: { value: \"\" },\r\n        patente: { value: \"\" },\r\n        assure: { value: \"\" },\r\n        numeroDossierFinancement: { value: \"\" },\r\n        souscripteur: { value: \"\" },\r\n        souscripteurIsAssure: { value: \"\" },\r\n        assurePresent: { value: false },\r\n        //stepOne View inputs\r\n\r\n        //step tow\r\n        preiodicite: { value: \"\" },\r\n        dureeContrat: { value: \"\" },\r\n        dateEffet: { value: \"\" },\r\n        dateEcheance: { value: \"\" },\r\n        produit: { value: \"\" },\r\n        pointVente: { value: \"\" },\r\n        NombreMensualitesEtalementLaPrimeUnique: { value: \"\" },\r\n        agence: { value: \"\" },\r\n        partenaire: { value: \"\" },\r\n        selectedProduct: { value: \"\" },\r\n        //step three\r\n        PrelevementSource: { value: false },\r\n        Differe: { value: \"\" },\r\n        optionAssurance: { value: \"\" },\r\n        montantFrais: { value: \"\" },\r\n        capitalAssure: { value: \"\" },\r\n        montantSurprime: { value: \"\" },\r\n        prorata: { value: \"\" },\r\n        tauxTaxe: { value: \"\" },\r\n        montantCotisation: { value: \"\" },\r\n        tauxInteret: { value: \"\" },\r\n        datePrelevement: { value: \"\" },\r\n        montantTaxe: { value: \"\" },\r\n        tauxSurprime: { value: \"\" },\r\n        cotisationTotale: { value: \"\" },\r\n        montantTaxeParafiscale: { value: \"\" },\r\n        montantAccessoire: { value: \"\" },\r\n        encours: { value: \"\" },\r\n        cumul: { value: \"\" },\r\n        fraisAcquisitionTTC: { value: \"\" },\r\n        fraisGestionTTC: { value: \"\" },\r\n        contributionPure: { value: \"\" },\r\n        // stepFour\r\n        invaliditeOuMaladie: { value: false },\r\n        quelleMaladieOuInvalidite: { value: \"\" },\r\n        pensionIncapacite: { value: false },\r\n        suspendreAtiviteDeuxDernierAnnee: { value: false },\r\n        maladiesOuOperationChirurgicaleQuandEtOu: { value: \"\" },\r\n        suspendreAtiviteDeuxDernierAnneePourquiEtTemps: { value: \"\" },\r\n        maladiesOuOperationChirurgicale: { value: false }\r\n      }\r\n    };\r\n  }\r\n  async getDroppDownData() {\r\n    const responsePartenaire = await getAllPartenaire();\r\n    let responsePereiodecite = await getPeriodicite();\r\n    let responseProduit = await getDecesProduit();\r\n\r\n    this.setState({\r\n      Partenaires: responsePartenaire.data.content,\r\n      produits: responseProduit.data.content,\r\n      periodicites: responsePereiodecite.data.content\r\n    });\r\n  }\r\n  async normeCapitalAge(age, capital, produit) {\r\n    let responseNorme = await getNormeByCapitalAndAge(age, capital, produit);\r\n    this.setState({\r\n      normes: responseNorme.data\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDroppDownData();\r\n    this.AuxiliairesByType(MEDECIN_EXAMINATEUR);\r\n  }\r\n  async jasperFiles(requestDevis) {\r\n    let response = await jasperFile(requestDevis);\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  async jasperLettre(requestLettre) {\r\n    let response = await lettreOrientation(requestLettre);\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  async conditionsParticulier(conditions) {\r\n    let response = await conditionParticulier(conditions);\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    console.log(\" done modal :\", e);\r\n    console.log(\" examinateur modal :\", this.state.examinateur);\r\n    console.log(\"fields handle ok :\", this.state.contrat);\r\n    let examens = [];\r\n\r\n    if (this.state.normes !== null) {\r\n      this.state.normes.honoraires.forEach(element => {\r\n        examens.push(element.libelle);\r\n      });\r\n      const listNorme = examens.toString();\r\n      console.log(\"fields :\", this.state.fields);\r\n      let requestLettreOrientation = {\r\n        ville: this.state.contrat.souscripteur.adressVille,\r\n        nomPrenom:\r\n          this.state.contrat.souscripteur.nom +\r\n          \" \" +\r\n          this.state.contrat.souscripteur.prenom,\r\n        cin: this.state.contrat.souscripteur.cin,\r\n        montantFinancement: this.state.contrat.capitalAssure,\r\n        montantEncours: this.state.fields.encours.value,\r\n        montantCumul: this.state.fields.cumul.value,\r\n        differe: this.state.contrat.differe,\r\n        duree: this.state.contrat.dureeContrat,\r\n        taux: this.state.contrat.tauxInteret,\r\n        intermediaire: this.state.contrat.produit.partenaire.raisonSocial,\r\n        agence: this.state.contrat.pointVente.libelle,\r\n        norme: listNorme,\r\n        dateNaissance: this.state.contrat.souscripteur.dateNaissance,\r\n        pointVenteVille: this.state.contrat.pointVente.adressVille,\r\n        examinateurId: this.state.examinateur\r\n      };\r\n      this.jasperLettre(requestLettreOrientation);\r\n      this.updateDecesContrat(this.state.contrat.id, this.state.examinateur);\r\n      this.setState({\r\n        current: 0,\r\n        fields: {\r\n          // step one\r\n          radio: { value: \"morale\" },\r\n          cin: { value: \"\" },\r\n          patente: { value: \"\" },\r\n          assure: { value: \"\" },\r\n          numeroDossierFinancement: { value: \"\" },\r\n          souscripteur: { value: \"\" },\r\n          souscripteurIsAssure: { value: \"\" },\r\n          assurePresent: { value: false },\r\n          //step two\r\n          preiodicite: { value: \"\" },\r\n          dureeContrat: { value: \"\" },\r\n          dateEffet: { value: \"\" },\r\n          dateEcheance: { value: \"\" },\r\n          produit: { value: \"\" },\r\n          pointVente: { value: \"\" },\r\n          NombreMensualitesEtalementLaPrimeUnique: { value: \"\" },\r\n          agence: { value: \"\" },\r\n          partenaire: { value: \"\" },\r\n          //step three\r\n          PrelevementSource: { value: false },\r\n          Differe: { value: \"\" },\r\n          optionAssurance: { value: \"\" },\r\n          montantFrais: { value: \"\" },\r\n          capitalAssure: { value: \"\" },\r\n          montantSurprime: { value: \"\" },\r\n          prorata: { value: \"\" },\r\n          tauxTaxe: { value: \"\" },\r\n          montantCotisation: { value: \"\" },\r\n          tauxInteret: { value: \"\" },\r\n          datePrelevement: { value: \"\" },\r\n          montantTaxe: { value: \"\" },\r\n          tauxSurprime: { value: \"\" },\r\n          cotisationTotale: { value: \"\" },\r\n          encours: { value: \"\" },\r\n          cumul: { value: \"\" },\r\n          montantTaxeParafiscale: { value: \"\" },\r\n          montantAccessoire: { value: \"\" },\r\n          // step four\r\n          invaliditeOuMaladie: { value: false },\r\n          pensionIncapacite: { value: false },\r\n          suspendreAtiviteDeuxDernierAnnee: { value: false },\r\n          maladiesOuOperationChirurgicaleQuandEtOu: { value: \"\" },\r\n          suspendreAtiviteDeuxDernierAnneePourquiEtTemps: { value: \"\" },\r\n          quelleMaladieOuInvalidite: { value: \"\" },\r\n          maladiesOuOperationChirurgicale: { value: false }\r\n        }\r\n      });\r\n      console.log(\"request lettre :\", requestLettreOrientation);\r\n    }\r\n\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleCancel = e => {\r\n    console.log(e);\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  async updateDecesContrat(id, orientation) {\r\n    let response = await updateDecesContratOrientation(id, orientation);\r\n    console.log(\"response update:\", response);\r\n  }\r\n  async AuxiliairesByType(type) {\r\n    let respense = await getAuxiliairesByType(type);\r\n    this.setState({ medecins: respense.data });\r\n  }\r\n  async createDecesContrat(body) {\r\n    // if (this.state.normes !== null) {\r\n\r\n    let response = await createContratDeces(body);\r\n    if (response.status === 200) {\r\n      let responseContrat = await getContratById(response.data.id);\r\n      if (responseContrat.status === 200) {\r\n        let requestCP = {\r\n          // numeroSouscription: responseContrat.data.numeroContrat,\r\n          // dateEffet: moment(responseContrat.data.dateEffet).format(\r\n          //   \"DD-MM-YYYY\"\r\n          // ),\r\n          // dateEcheance: moment(responseContrat.data.dateEcheance).format(\r\n          //   \"DD-MM-YYYY\"\r\n          // ),\r\n          // duree: responseContrat.data.dureeContrat,\r\n          agence: responseContrat.data.produit.partenaire.raisonSocial,\r\n          organisme: responseContrat.data.produit.partenaire.typePartenaire,\r\n          adresse: responseContrat.data.pointVente.partenairepv.siegeSocial,\r\n          intermediaire: responseContrat.data.produit.partenaire.typePartenaire,\r\n          numeroAgrement: responseContrat.data.produit.numeroHomologation,\r\n          dateAgrement: responseContrat.data.produit.dateHomologation,\r\n          adresseInter: responseContrat.data.produit.partenaire.siegeSocial,\r\n          participant:\r\n            responseContrat.data.souscripteur.nom +\r\n            \" \" +\r\n            responseContrat.data.souscripteur.prenom,\r\n          telephone: responseContrat.data.souscripteur.numeroDeTelephone,\r\n          registreCommerce: responseContrat.data.souscripteur.cin,\r\n          adresseSouscripteur: responseContrat.data.souscripteur.adressComplete,\r\n          compteBancaire: responseContrat.data.souscripteur.rib,\r\n          assure:\r\n            responseContrat.data.assure.nom +\r\n            \" \" +\r\n            responseContrat.data.assure.prenom,\r\n          cinAssure: responseContrat.data.assure.cin,\r\n          adresseAssure: responseContrat.data.assure.adressComplete,\r\n          telephoneAssure: responseContrat.data.assure.numeroDeTelephone,\r\n          compteAssure: responseContrat.data.assure.rib,\r\n          compteTakaful: responseContrat.data.produit.numeroCompte,\r\n\r\n          dureeContrat: responseContrat.data.dureeContrat,\r\n          montantFinancement: responseContrat.data.capitalAssure,\r\n          numeroContratFinancement: responseContrat.data.numeroContrat,\r\n          numeroCompte: responseContrat.data.assure.rib,\r\n          dureeMois: responseContrat.data.dureeContrat,\r\n          garantiePaiment: \"true\",\r\n          renouvellement: \"true\",\r\n          garantieInvalidite: \"true\",\r\n          date: moment(dateCP).format(\"DD-MM-YYYY\"),\r\n          montantTTC: this.state.fields.cotisationTotale.value.toFixed(2),\r\n          periodicite: responseContrat.data.periodicite.libelle,\r\n          ageLimiteCouverture: responseContrat.data.produit.ageEcheance,\r\n          ageLimitSouscription: responseContrat.data.produit.ageMaxEligibilite,\r\n          montantAugmentation: responseContrat.data.produit.seuilExaminateur,\r\n          remuneration: responseContrat.data.produit.fraisGestion,\r\n          contributionAnnulle: this.state.fields.prorata.value.toFixed(2),\r\n          fraisAcquisition: responseContrat.data.produit.fraisAcquisition,\r\n          seuilVisite: responseContrat.data.produit.seuilExaminateur,\r\n          suspensionActivite:\r\n            responseContrat.data.suspendreAtiviteDeuxDernierAnneePourquiEtTemps,\r\n          maladieInvalidite: responseContrat.data.quelleMaladieOuInvalidite,\r\n          maladieOuOperation:\r\n            responseContrat.data.maladiesOuOperationChirurgicale\r\n        };\r\n        if (responseContrat.data.status !== \"WAITING_ACCEPTATION\") {\r\n          this.conditionsParticulier(requestCP);\r\n          this.setState({\r\n            current: 0,\r\n            fields: {\r\n              // step one\r\n              radio: { value: \"morale\" },\r\n              cin: { value: \"\" },\r\n              patente: { value: \"\" },\r\n              assure: { value: \"\" },\r\n              numeroDossierFinancement: { value: \"\" },\r\n              souscripteur: { value: \"\" },\r\n              souscripteurIsAssure: { value: \"\" },\r\n              assurePresent: { value: false },\r\n              //step two\r\n              preiodicite: { value: \"\" },\r\n              dureeContrat: { value: \"\" },\r\n              dateEffet: { value: \"\" },\r\n              dateEcheance: { value: \"\" },\r\n              produit: { value: \"\" },\r\n              pointVente: { value: \"\" },\r\n              NombreMensualitesEtalementLaPrimeUnique: { value: \"\" },\r\n              agence: { value: \"\" },\r\n              partenaire: { value: \"\" },\r\n              //step three\r\n              PrelevementSource: { value: false },\r\n              Differe: { value: \"\" },\r\n              optionAssurance: { value: \"\" },\r\n              montantFrais: { value: \"\" },\r\n              capitalAssure: { value: \"\" },\r\n              montantSurprime: { value: \"\" },\r\n              prorata: { value: \"\" },\r\n              tauxTaxe: { value: \"\" },\r\n              montantCotisation: { value: \"\" },\r\n              tauxInteret: { value: \"\" },\r\n              datePrelevement: { value: \"\" },\r\n              montantTaxe: { value: \"\" },\r\n              tauxSurprime: { value: \"\" },\r\n              cotisationTotale: { value: \"\" },\r\n              encours: { value: \"\" },\r\n              cumul: { value: \"\" },\r\n              // step four\r\n              invaliditeOuMaladie: { value: false },\r\n              pensionIncapacite: { value: false },\r\n              suspendreAtiviteDeuxDernierAnnee: { value: false },\r\n              maladiesOuOperationChirurgicaleQuandEtOu: { value: \"\" },\r\n              suspendreAtiviteDeuxDernierAnneePourquiEtTemps: { value: \"\" },\r\n              quelleMaladieOuInvalidite: { value: \"\" },\r\n              maladiesOuOperationChirurgicale: { value: false }\r\n            }\r\n          });\r\n        } else {\r\n          console.log(\"status:\", this.state.fields);\r\n          this.setState({\r\n            visible: true\r\n          });\r\n        }\r\n\r\n        this.setState({ contrat: responseContrat.data });\r\n        const key = `open${Date.now()}`;\r\n        const btn = (\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => notification.close(key)}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        );\r\n        notification.success({\r\n          message: \"CONTRAT ENREGISTRE\",\r\n          description:\r\n            \" CONTRAT NUMERO     : \" +\r\n            responseContrat.data.numeroContrat +\r\n            \" QUITTANCE NUMERO   : \" +\r\n            response.data.numQuittance,\r\n          btn,\r\n          duration: 0,\r\n          key\r\n        });\r\n      }\r\n    } else {\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => notification.close(key)}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      );\r\n      notification.error({\r\n        message: \"erreur d'insertion\",\r\n        description: \"erreur servenu, ,erci d'essayer plus tard.\",\r\n        btn,\r\n        duration: 0,\r\n        key\r\n      });\r\n    }\r\n    // } else {\r\n    //   const key = `open${Date.now()}`;\r\n    //   const btn = (\r\n    //     <Button\r\n    //       type=\"primary\"\r\n    //       size=\"small\"\r\n    //       onClick={() => notification.close(key)}\r\n    //     >\r\n    //       Confirm\r\n    //     </Button>\r\n    //   );\r\n    //   notification.error({\r\n    //     message: \"erreur d'insertion\",\r\n    //     description:\r\n    //       \"Merci de verifier les normes de sélection du produit selectionné.\",\r\n    //     btn,\r\n    //     duration: 0,\r\n    //     key\r\n    //   });\r\n    // }\r\n  }\r\n  checkSelectedPers = (\r\n    souscripteurIsAssure,\r\n    assurePresent,\r\n    souscripteurPresent,\r\n    souscripteurObject,\r\n    assureObject,\r\n    consumeDatas\r\n  ) => {\r\n    if (assurePresent && souscripteurPresent) {\r\n      if (this.state.allow === false) {\r\n        let newStateSouscripteur = this.state.fields.souscripteur;\r\n        newStateSouscripteur.value = souscripteurObject;\r\n        let newStateAssure = this.state.fields.assure;\r\n        newStateAssure.value = assureObject;\r\n        let newStateSouscripteurIsAssure = this.state.fields\r\n          .souscripteurIsAssure;\r\n        newStateSouscripteurIsAssure.value = souscripteurIsAssure;\r\n        let newStateAssurePresent = this.state.fields.assurePresent;\r\n        newStateAssurePresent.value = newStateAssurePresent;\r\n        this.setState({\r\n          allow: true,\r\n          souscripteurObj: souscripteurObject,\r\n          assureObj: assureObject,\r\n          newStateSouscripteur: newStateSouscripteur,\r\n          newStateAssure: newStateAssure,\r\n          newStateSouscripteurIsAssure: newStateSouscripteurIsAssure,\r\n          newStateAssurePresent: newStateAssurePresent\r\n        });\r\n      }\r\n      if (consumeDatas !== \"undefined\") {\r\n        consumeData = consumeDatas;\r\n      }\r\n    } else {\r\n      if (this.state.allow === true) this.setState({ allow: false });\r\n    }\r\n  };\r\n\r\n  next = () => {\r\n    if (this.state.allow && this.state.current === 0) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n    }\r\n    const age = moment(this.state.fields.dateEcheance.value).diff(\r\n      moment(this.state.assureObj.dateNaissance, \"DD-MM-YYYY\").format(),\r\n      \"years\"\r\n    );\r\n\r\n    if (\r\n      this.state.fields.produit.value !== \"\" &&\r\n      this.state.fields.preiodicite.value !== \"\" &&\r\n      this.state.fields.dateEcheance.value !== \"\" &&\r\n      this.state.current === 1\r\n    ) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n    }\r\n    if (\r\n      this.state.fields.Differe.value !== \"\" &&\r\n      this.state.fields.tauxSurprime.value !== \"\" &&\r\n      this.state.fields.capitalAssure.value !== \"\" &&\r\n      this.state.fields.montantSurprime.value !== \"\" &&\r\n      this.state.fields.datePrelevement.value !== \"\" &&\r\n      this.state.fields.encours.value !== \"\" &&\r\n      this.state.fields.tauxTaxe.value !== \"\" &&\r\n      this.state.fields.cumul.value !== \"\" &&\r\n      this.state.fields.cotisationTotale.value !== \"\" &&\r\n      this.state.current === 2\r\n    ) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n    }\r\n    if (this.state.current === 2) {\r\n      if (\r\n        this.state.fields.Differe.value === \"\" ||\r\n        this.state.fields.tauxSurprime.value === \"\" ||\r\n        this.state.fields.capitalAssure.value === \"\" ||\r\n        this.state.fields.montantSurprime.value === \"\" ||\r\n        this.state.fields.datePrelevement.value === \"\" ||\r\n        this.state.fields.encours.value === \"\" ||\r\n        this.state.fields.tauxTaxe.value === \"\" ||\r\n        this.state.fields.cumul.value === \"\" ||\r\n        this.state.fields.cotisationTotale.value === \"\"\r\n      ) {\r\n        const key = `open${Date.now()}`;\r\n        const btn = (\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => notification.close(key)}\r\n          >\r\n            Confirm\r\n          </Button>\r\n        );\r\n        notification.error({\r\n          message: \"Attention!\",\r\n          description:\r\n            \"Ce produit n'a pas une tarification avec les valeurs saisies\",\r\n          btn,\r\n          duration: 0,\r\n          key\r\n        });\r\n      }\r\n    }\r\n    if (this.state.current === 1) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n    }\r\n  };\r\n  handleConfirm = (value, key) => {\r\n    this.createDecesContrat(value);\r\n    notification.close(key);\r\n  };\r\n\r\n  handleConf = request => {\r\n    let requestModel = {\r\n      pointVente: pointVente,\r\n      nomPrenom: request.souscripteur.nom + \" \" + request.souscripteur.prenom,\r\n      dateNaissance: request.souscripteur.dateNaissance,\r\n      capital: request.capitalAssure,\r\n      duree: request.dureeContrat,\r\n      differe: request.differe,\r\n      periodicite: this.state.fields.preiodicite.value.label,\r\n      montantParticipationHT: this.state.fields.montantCotisation.value,\r\n      taxe: request.montantTaxe,\r\n      montantParticipationTTC: this.state.fields.cotisationTotale.value,\r\n      risque: request.produit.risque.libelle,\r\n      produit: request.produit.code\r\n    };\r\n    console.log(request.produit.code);\r\n    debugger;\r\n    this.jasperFiles(requestModel);\r\n  };\r\n\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n  }\r\n\r\n  handleFormChange = changedFields => {\r\n    this.setState(({ fields }) => ({\r\n      fields: { ...fields, ...changedFields }\r\n    }));\r\n  };\r\n\r\n  done(event) {\r\n    console.log(\" done modal :\", event);\r\n    const { fields } = this.state;\r\n    if (\r\n      fields.Differe.value !== \"\" &&\r\n      fields.tauxSurprime.value !== \"\" &&\r\n      fields.tauxInteret.value !== \"\" &&\r\n      fields.capitalAssure.value\r\n    ) {\r\n      let myObject;\r\n      if (fields.optionAssurance.value !== \"\")\r\n        myObject = { id: fields.optionAssurance.value.key };\r\n      else myObject = null;\r\n      const fieldsToRequest = {\r\n        // step one\r\n        assure: this.state.assureObj,\r\n        souscripteur: this.state.souscripteurObj,\r\n        numeroDossierFinancement: fields.numeroDossierFinancement.value,\r\n        souscripteurIsAssure: fields.souscripteurIsAssure.value,\r\n        //step two\r\n        idPeriodicite: fields.preiodicite.value.key,\r\n        dureeContrat: fields.dureeContrat.value,\r\n        dateEffet: fields.dateEffet.value,\r\n        dateEcheance: fields.dateEcheance.value,\r\n        seuilExaminateur: this.state.produits.filter(\r\n          item => item.id === fields.produit.value.key\r\n        )[0].seuilExaminateur,\r\n        seuilConseil: this.state.produits.filter(\r\n          item => item.id === fields.produit.value.key\r\n        )[0].seuilConseil,\r\n        seuilReassurance: this.state.produits.filter(\r\n          item => item.id === fields.produit.value.key\r\n        )[0].seuilReassurance,\r\n        idProd: this.state.produits.filter(\r\n          item => item.id === fields.produit.value.key\r\n        )[0].id,\r\n        idPointVente: fields.pointVente.value,\r\n        partenaire: fields.partenaire.value,\r\n        //step three\r\n        PrelevementSource: fields.Differe.value,\r\n        differe: fields.Differe.value,\r\n        optionAssurance: myObject,\r\n        montantSurprime: fields.montantSurprime.value,\r\n        montantFrais: fields.montantFrais.value,\r\n        capitalAssure: fields.capitalAssure.value,\r\n        prorata: fields.prorata.value,\r\n        montantTaxeParafiscale: fields.montantTaxeParafiscale.value,\r\n        montantAccessoire: fields.montantAccessoire.value,\r\n\r\n        montantCotisation: fields.montantCotisation.value,\r\n        tauxInteret: fields.tauxInteret.value,\r\n        datePrelevement: fields.datePrelevement.value,\r\n        montantTaxe: fields.montantTaxe.value,\r\n        tauxSurprime: fields.tauxSurprime.value,\r\n        encours: fields.encours.value,\r\n        cumul: fields.cumul.value,\r\n        fraisAcquisitionTTC: fields.fraisAcquisitionTTC.value,\r\n        fraisGestionTTC: fields.fraisGestionTTC.value,\r\n        contributionPure: fields.contributionPure.value,\r\n        // step Four fields\r\n        invaliditeOuMaladie: fields.invaliditeOuMaladie.value,\r\n        pensionIncapacite: fields.pensionIncapacite.value,\r\n        suspendreAtiviteDeuxDernierAnnee:\r\n          fields.suspendreAtiviteDeuxDernierAnnee.value,\r\n        maladiesOuOperationChirurgicaleQuandEtOu:\r\n          fields.maladiesOuOperationChirurgicaleQuandEtOu.value,\r\n        suspendreAtiviteDeuxDernierAnneePourquiEtTemps:\r\n          fields.suspendreAtiviteDeuxDernierAnneePourquiEtTemps.value,\r\n        quelleMaladieOuInvalidite: fields.quelleMaladieOuInvalidite.value,\r\n        maladiesOuOperationChirurgicale:\r\n          fields.maladiesOuOperationChirurgicale.value\r\n      };\r\n      console.log(\"request model:\", fieldsToRequest);\r\n      const agee = moment().diff(\r\n        moment(this.state.souscripteurObj.dateNaissance, \"DD-MM-YYYY\").format(),\r\n        \"years\"\r\n      );\r\n      this.normeCapitalAge(\r\n        agee,\r\n        fieldsToRequest.capitalAssure,\r\n        fieldsToRequest.idProd\r\n      );\r\n      if (event === \"SIMULATION\") {\r\n        fieldsToRequest.status = \"SIMULATION\";\r\n      }\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            className=\"multisteps-btn-simulation\"\r\n            style={{ borderRadius: \"0%\", marginRight: \"10px\" }}\r\n            onClick={() => this.handleConf(fieldsToRequest)}\r\n          >\r\n            Editer\r\n          </Button>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleConfirm(fieldsToRequest, key)}\r\n            className=\"not-rounded\"\r\n          >\r\n            Confirmer\r\n          </Button>\r\n          <Button\r\n            onClick={() => notification.close(key)}\r\n            style={{ marginLeft: 8 }}\r\n            className=\"not-rounded\"\r\n          >\r\n            Fermer\r\n          </Button>\r\n        </div>\r\n      );\r\n      notification.info({\r\n        message: \"Confirmation\",\r\n        description: (\r\n          <div>\r\n            <Divider />\r\n\r\n            <Descriptions bordered column={2} size=\"small\">\r\n              <Descriptions.Item label=\"MONTANT FINANCEMENT\">\r\n                {parseFloat(fields.capitalAssure.value).toFixed(2)}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"CUMUL\" span={2}>\r\n                {parseFloat(fields.cumul.value).toFixed(2)}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"DUREE\">\r\n                {fields.dureeContrat.value}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"DIFFERE\" span={2}>\r\n                {fields.Differe.value}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"MONTANT CONTRIBUTION  PRORATISE TTC\">\r\n                {parseFloat(\r\n                  (fields.prorata.value * 10) / 100 + fields.prorata.value\r\n                ).toFixed(2)}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"MONTANT  CONTRIBUTION  PRORATISE HT\">\r\n                {parseFloat(fields.prorata.value).toFixed(2)}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"MONTANT CONTRIBUTION HT\" span={2}>\r\n                {parseFloat(fields.montantCotisation.value).toFixed(2)}\r\n              </Descriptions.Item>\r\n              <Descriptions.Item label=\"MONTANT CONTRIBUTION TTC\">\r\n                {parseFloat(fields.cotisationTotale.value).toFixed(2)}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n          </div>\r\n        ),\r\n        btn,\r\n        key,\r\n        style: {\r\n          width: 880,\r\n          marginLeft: 335 - 1280\r\n        },\r\n        duration: 0\r\n      });\r\n    }\r\n  }\r\n  onChangeMedecin = value => {\r\n    this.setState({ examinateur: value });\r\n  };\r\n\r\n  render() {\r\n    const { current, fields } = this.state;\r\n    const steps = [\r\n      {\r\n        title: \"Première étape\",\r\n        content: (\r\n          <connectedUserContext.Consumer>\r\n            {value => (\r\n              <StepOne\r\n                check={this.checkSelectedPers}\r\n                {...fields}\r\n                onChange={this.handleFormChange}\r\n                currentUser={value}\r\n              />\r\n            )}\r\n          </connectedUserContext.Consumer>\r\n        )\r\n      },\r\n      {\r\n        title: \"Deuxième étape\",\r\n        content: (\r\n          <connectedUserContext.Consumer>\r\n            {value => (\r\n              (pointVente = value.pointVentes[0].libelle),\r\n              (\r\n                <StepTwo\r\n                  produits={this.state.produits}\r\n                  periodicites={this.state.periodicites}\r\n                  partenaires={this.state.Partenaires}\r\n                  {...fields}\r\n                  onChange={this.handleFormChange}\r\n                  currentUser={value}\r\n                  consumeData={consumeData}\r\n                />\r\n              )\r\n            )}\r\n          </connectedUserContext.Consumer>\r\n        )\r\n      },\r\n      {\r\n        title: \"Troisième étape\",\r\n        content: (\r\n          <StepThree\r\n            dateEffet={this.state.fields.dateEffet.value}\r\n            assureObj={this.state.assureObj}\r\n            dureeContrat={this.state.fields.dureeContrat.value}\r\n            selectedproduit={\r\n              this.state.produits.filter(\r\n                item => item.code === this.state.fields.produit.value.label\r\n              )[0]\r\n            }\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n            consumeData={consumeData}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: \"Quatrième étape\",\r\n        content: <StepFour {...fields} onChange={this.handleFormChange} />\r\n      }\r\n    ];\r\n    let title;\r\n    if (fields.produit.value === \"\")\r\n      title = \"Nouvelle souscription décès produit\";\r\n    else {\r\n      title =\r\n        \"Nouvelle souscription décès produit  \" +\r\n        this.state.produits.filter(\r\n          item => item.code === fields.produit.value.label\r\n        )[0].libelle;\r\n    }\r\n\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        <Modal\r\n          title=\"Basic Modal\"\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          okText=\"Valider\"\r\n          cancelText=\"Fermer\"\r\n        >\r\n          <Form hideRequiredMark>\r\n            <Form.Item label=\"Medecin examinateur\" hasFeedback>\r\n              {getFieldDecorator(\"medecin\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"sélectionnez un medecin\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  placeholder=\"sélectionnez\"\r\n                  onChange={this.onChangeMedecin}\r\n                >\r\n                  {this.state.medecins.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.nom}\r\n                      >\r\n                        {element.nom}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Form>\r\n        </Modal>\r\n        <ComponentTitle title={title} />\r\n        <Steps current={current}>\r\n          {steps.map(item => (\r\n            <Step\r\n              key={item.title}\r\n              title={item.title}\r\n              description={item.description}\r\n            />\r\n          ))}\r\n        </Steps>\r\n        <div className=\"steps-content-style\">{steps[current].content}</div>\r\n        <div className=\"steps-action\">\r\n          {current === 0 && (\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"multisteps-btn-next\"\r\n              htmlType=\"submit\"\r\n              form=\"formadd\"\r\n              onClick={() => this.next()}\r\n            >\r\n              Suivant\r\n            </Button>\r\n          )}\r\n          {current === 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"multisteps-btn-next\"\r\n              form=\"steptwo\"\r\n              onClick={() => this.next()}\r\n              disabled={this.state.booleen}\r\n            >\r\n              Suivant\r\n            </Button>\r\n          )}\r\n          {current === 2 && (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"multisteps-btn-next\"\r\n              form=\"stepthree\"\r\n              onClick={() => this.next()}\r\n            >\r\n              Suivant\r\n            </Button>\r\n          )}\r\n          {current === steps.length - 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"multisteps-btn-next\"\r\n              form=\"stepfour\"\r\n              onClick={() => this.done(\"CREATION\")}\r\n            >\r\n              Terminer la création\r\n            </Button>\r\n          )}\r\n          {current === steps.length - 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"multisteps-btn-simulation\"\r\n              form=\"stepfour\"\r\n              onClick={() => this.done(\"SIMULATION\")}\r\n            >\r\n              Terminer la simulation\r\n            </Button>\r\n          )}\r\n          {current > 0 && (\r\n            <Button onClick={() => this.prev()}>Précédent</Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Souscription);\r\n","import {\r\n  ACCESS_TOKEN,\r\n  API_BASE_URL,\r\n  REQUEST as request\r\n} from \"../../constants/index\";\r\n\r\nexport function ajoutCotisation(cotisationRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addCotisation\",\r\n    data: cotisationRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function ajoutCotisations(cotisationListRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addCotisations\",\r\n    data: cotisationListRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function ajoutEncaissement(encaissementRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/addEncaissement\",\r\n    data: encaissementRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\nexport function getCotisationById(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/cotisation/contrat/\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function getEncaissementById(id) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/encaissement/cotisation/\" + id,\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getCompteBancaire() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url:\r\n      API_BASE_URL + \"/private/compteBancaires?page=0&sort=code&direction=asc\",\r\n    method: \"GET\"\r\n  });\r\n}\r\nexport function getPrelevement() {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/cotisations?page=0\",\r\n    method: \"GET\"\r\n  });\r\n}\r\n\r\nexport function AnnulationCotisation(id, cotisationRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/annulationCotisation/\" + id,\r\n    data: cotisationRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table,\r\n  InputNumber\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  ajoutEncaissement,\r\n  getCompteBancaire,\r\n  getCotisationById,\r\n  getEncaissementById,\r\n  AnnulationCotisation\r\n} from \"./CotisationAPI\";\r\n\r\nimport { MyContext } from \"./Comptabilite\";\r\nimport e from \"cors\";\r\n\r\nconst { Option } = Select;\r\nlet id = \"\";\r\nlet ids = \"\";\r\nfunction validatePrimeNumber(number, x) {\r\n  if (number <= x) {\r\n    return {\r\n      validateStatus: \"success\",\r\n      errorMsg: null\r\n    };\r\n  }\r\n  return {\r\n    validateStatus: \"error\",\r\n    errorMsg: \"Vous avez dépassé le solde restant\"\r\n  };\r\n}\r\nclass Cotisation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\",\r\n      data: [],\r\n      visible: false,\r\n      visibled: false,\r\n      comptes: [],\r\n      show: false,\r\n      encaissement: [],\r\n      cotisation: [],\r\n      cotisationId: \"\",\r\n      recordCotisation: [],\r\n      number: { value: \"\" }\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro quittance\",\r\n        dataIndex: \"numQuittance\",\r\n        key: \"numQuittance\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a onClick={() => this.handleChanged(record)}>{text}</a>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Date Prélèvement\",\r\n        dataIndex: \"datePrelevement\",\r\n        key: \"datePrelevement\"\r\n      },\r\n      {\r\n        title: \"Montant cotisation\",\r\n        dataIndex: \"montantCotisation\",\r\n        key: \"montantCotisation\"\r\n      },\r\n      {\r\n        title: \"Etat cotisation\",\r\n        dataIndex: \"etatCotisation\",\r\n        key: \"etatCotisation\"\r\n      },\r\n      {\r\n        title: \"Montant Taxe \",\r\n        dataIndex: \"montantTaxe\",\r\n        key: \"montantTaxe\"\r\n      },\r\n      {\r\n        title: \"Montant Taxe parafiscale \",\r\n        dataIndex: \"montantTaxeParaFiscale\",\r\n        key: \"montantTaxeParafiscale\"\r\n      },\r\n      {\r\n        title: \"Montant TTC \",\r\n        dataIndex: \"montantTTC\",\r\n        key: \"montantTtc\"\r\n      },\r\n      {\r\n        title: \"Frais acquisition TTC \",\r\n        dataIndex: \"fraisAcquisitionTTC\",\r\n        key: \"fraisAcquisitionTTC\"\r\n      },\r\n      {\r\n        title: \"Frais gestion TTC \",\r\n        dataIndex: \"fraisGestionTTC\",\r\n        key: \"fraisGestionTTC\"\r\n      },\r\n      {\r\n        title: \"Contribution Pure \",\r\n        dataIndex: \"contributionPure\",\r\n        key: \"contributionPure\"\r\n      },\r\n      {\r\n        title: \"Solde \",\r\n        dataIndex: \"solde\",\r\n        key: \"solde\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        fixed: \"right\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              {record.etatCotisation == \"EMIS\" ||\r\n              record.etatCotisation == \"PARTIELEMENT_ENCAISSEE\" ? (\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => this.handleChange(record)}\r\n                  size=\"small\"\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    backgroundColor: \"#4ee289\",\r\n                    borderColor: \"#4ee289\",\r\n                    textAlign: \"left\",\r\n                    width: \"100%\"\r\n                  }}\r\n                >\r\n                  <Icon type=\"plus-circle\" />\r\n                  Encaissement\r\n                </Button>\r\n              ) : (\r\n                \"---\"\r\n              )}\r\n              {record.etatCotisation == \"EMIS\" && (\r\n                <Select placeholder=\"Séléctionnez...\" style={{ width: \"100%\" }}>\r\n                  <Option\r\n                    value=\"ANNULER\"\r\n                    onClick={() => this.handleRecord(record)}\r\n                  >\r\n                    ANNULER\r\n                  </Option>\r\n                </Select>\r\n              )}\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    this.columns1 = [\r\n      {\r\n        title: \"Date d'encaissement\",\r\n        dataIndex: \"dateEncaissement\",\r\n        key: \"datePrelevement\"\r\n      },\r\n      {\r\n        title: \"N° d'encaissement\",\r\n        dataIndex: \"numEncaissement\",\r\n        key: \"numeroEncaissement\"\r\n      },\r\n      {\r\n        title: \"Montant Encaissé\",\r\n        dataIndex: \"montantEncaissement\",\r\n        key: \"montantEncaisse\"\r\n      },\r\n      {\r\n        title: \"Montant Taxe \",\r\n        dataIndex: \"montantTaxe\",\r\n        key: \"montantTaxe\"\r\n      },\r\n      {\r\n        title: \"Mode d'encaissement\",\r\n        dataIndex: \"modeEncaissement\",\r\n        key: \"modeEncaissement\"\r\n      },\r\n      {\r\n        title: \"Référence \",\r\n        dataIndex: \"numReference\",\r\n        key: \"reference\"\r\n      }\r\n    ];\r\n  }\r\n  handleRecord = value => {\r\n    console.log(\"record:\", value);\r\n    this.props.form.setFieldsValue({\r\n      montantCotisation: value.montantCotisation * -1,\r\n      montantTTC: value.montantTTC * -1,\r\n      montantTaxe: value.montantTaxe * -1,\r\n      montantTaxeParafiscale: value.montantTaxeParaFiscale * -1,\r\n      solde: value.solde * -1\r\n    });\r\n    value.montantTaxeParaFiscale = value.montantTaxeParaFiscale * -1;\r\n    value.montantCotisation = value.montantCotisation * -1;\r\n    value.montantTTC = value.montantTTC * -1;\r\n    value.montantTaxe = value.montantTaxe * -1;\r\n    value.solde = value.solde * -1;\r\n\r\n    this.setState({\r\n      show: true,\r\n      cotisation: value,\r\n      cotisationId: value.id\r\n    });\r\n  };\r\n  handleChange = value => {\r\n    id = value.id;\r\n    console.log(\"value cotisation:\", value);\r\n    this.props.form.setFieldsValue({\r\n      emissionGlobale: value.montantTTC,\r\n      reste: value.solde\r\n    });\r\n    this.setState({ visible: true, recordCotisation: value }, () => {});\r\n  };\r\n  handleChanged = value => {\r\n    this.getAllEncaissement(value.id);\r\n    this.setState({ visibled: true }, () => {});\r\n  };\r\n  componentDidMount() {\r\n    this.getAllCotisations(ids);\r\n    this.getAllComptes();\r\n  }\r\n  handleOK = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({ show: false });\r\n        console.log(\"ok value:\", values);\r\n\r\n        AnnulationCotisation(this.state.cotisationId, this.state.cotisation)\r\n          .then(response => {\r\n            notification.success({\r\n              message: \"TAKAFUL\",\r\n              description: \"L'annulation est bien faite\"\r\n            });\r\n          })\r\n          .catch(error => {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description:\r\n                error.message || \"Désolé! Quelque chose est mal passé!\"\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleOnClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  async getAllCotisations(contratId) {\r\n    let response = await getCotisationById(contratId);\r\n    this.setState({\r\n      data: response.data\r\n    });\r\n  }\r\n  async getAllEncaissement(cotisationId) {\r\n    let response = await getEncaissementById(cotisationId);\r\n    this.setState({\r\n      encaissement: response.data\r\n    });\r\n  }\r\n  async getAllComptes() {\r\n    let response = await getCompteBancaire();\r\n    this.setState({\r\n      comptes: response.data.content\r\n    });\r\n  }\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({ visible: false });\r\n        let requestModel = {\r\n          dateEncaissement: values.dateEncaissement,\r\n          modeEncaissement: values.modeEncaissement,\r\n          montantEncaissement: values.montantEncaisser,\r\n          montantTaxe: values.montantTaxe,\r\n          numReference: values.numReference,\r\n          compteBancaire: values.numerocompte,\r\n          accessoire: values.montantAccessoire,\r\n          montantQuittance: values.emissionGlobale,\r\n          montantTaxeParafiscale: values.montantTaxeParafiscale,\r\n          montantEmission: values.montantEmission,\r\n          cotisation: id\r\n        };\r\n        console.log(\"request:\", requestModel);\r\n        ajoutEncaissement(requestModel)\r\n          .then(response => {\r\n            notification.success({\r\n              message: \"TAKAFUL\",\r\n              description: \"L'insertion est bien faite\"\r\n            });\r\n          })\r\n          .catch(error => {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description:\r\n                error.message ||\r\n                \"Sorry! Something went wrong. Please try again!\"\r\n            });\r\n          });\r\n      } else {\r\n        message.warning(\"Contrat non couvert au date de sinistre\");\r\n      }\r\n    });\r\n  };\r\n  handleCancel = () => {\r\n    this.setState({ visibled: false });\r\n  };\r\n  handleCanceled = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleNumberChange = value => {\r\n    this.setState({\r\n      number: {\r\n        ...validatePrimeNumber(value, this.state.recordCotisation.solde),\r\n        value\r\n      }\r\n    });\r\n    if (value <= this.state.recordCotisation.solde) {\r\n      let pourcentage = (\r\n        (value * 100) /\r\n        this.state.recordCotisation.montantTTC\r\n      ).toFixed(2);\r\n\r\n      let montantAccessoireEncaissement = (\r\n        (pourcentage * this.state.recordCotisation.montantAccessoire) /\r\n        100\r\n      ).toFixed(2);\r\n\r\n      let montantTaxeEncaissement = (\r\n        (pourcentage * this.state.recordCotisation.montantTaxe) /\r\n        100\r\n      ).toFixed(2);\r\n\r\n      let montantTaxeParafiscaleEncaissement = (\r\n        (pourcentage * this.state.recordCotisation.montantTaxeParaFiscale) /\r\n        100\r\n      ).toFixed(2);\r\n\r\n      let part1 = (\r\n        (this.state.recordCotisation.montantTTC * pourcentage) /\r\n        100\r\n      ).toFixed(2);\r\n      let part2 =\r\n        parseFloat(montantAccessoireEncaissement) +\r\n        parseFloat(montantTaxeEncaissement);\r\n      console.log(\"part1:\", part1);\r\n\r\n      let montantEmissionEncaissement = parseFloat(part1) - parseFloat(part2);\r\n      this.props.form.setFieldsValue({\r\n        montantAccessoire: montantAccessoireEncaissement,\r\n        montantTaxe: montantTaxeEncaissement,\r\n        montantTaxeParafiscale: montantTaxeParafiscaleEncaissement,\r\n        montantEmission: montantEmissionEncaissement.toFixed(2)\r\n      });\r\n    } else {\r\n      this.props.form.setFieldsValue({\r\n        montantAccessoire: \"\",\r\n        montantTaxe: \"\",\r\n        montantTaxeParafiscale: \"\",\r\n        montantEmission: \"\"\r\n      });\r\n    }\r\n  };\r\n  onChangeMontantEncaisser = e => {};\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible, visibled, show } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 12 }\r\n      }\r\n    };\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          (ids = context.state.contrat.id),\r\n          (\r\n            <React.Fragment>\r\n              <div>\r\n                <br />\r\n                <Table\r\n                  rowClassName=\"editable-row\"\r\n                  columns={this.columns}\r\n                  dataSource={this.state.data}\r\n                  pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n                  size=\"small\"\r\n                  scroll={{ x: 800 }}\r\n                />\r\n                <Modal\r\n                  visible={visible}\r\n                  title=\"Veuillez saisir les informations d'une cotisation\"\r\n                  onOk={this.handleSubmited}\r\n                  onCancel={this.handleCanceled}\r\n                  afterClose={this.handleClosed}\r\n                  style={{ top: 20 }}\r\n                  width=\"1000px\"\r\n                  footer={[\r\n                    <Button\r\n                      key=\"back\"\r\n                      onClick={this.handleCancel}\r\n                      className=\"not-rounded\"\r\n                    >\r\n                      Fermer\r\n                    </Button>,\r\n                    <Button\r\n                      key=\"submit\"\r\n                      type=\"primary\"\r\n                      onClick={this.handleSubmited}\r\n                      className=\"not-rounded\"\r\n                    >\r\n                      Ajouter\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                  <Form {...formItemLayout}>\r\n                    <div>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Mode d'encaissement\">\r\n                            {getFieldDecorator(\"modeEncaissement\")(\r\n                              <Select placeholder=\"Veuillez selectionner\">\r\n                                <Option value=\"Chèque\" label=\"Chèque\">\r\n                                  Chèque\r\n                                </Option>\r\n                                <Option value=\"Virement\" label=\"Virement\">\r\n                                  Virement\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Numéro de compte\">\r\n                            {getFieldDecorator(\"numerocompte\")(\r\n                              <Select placeholder=\"Veuillez selectionner\">\r\n                                {this.state.comptes.map(element => {\r\n                                  return (\r\n                                    <Option\r\n                                      key={element.id}\r\n                                      value={element.id}\r\n                                      label={element.code}\r\n                                    >\r\n                                      {element.code}\r\n                                    </Option>\r\n                                  );\r\n                                })}\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"N° reference\">\r\n                            {getFieldDecorator(\"numReference\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Date d'encaissement\">\r\n                            {getFieldDecorator(\"dateEncaissement\")(\r\n                              <DatePicker\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"not-rounded\"\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Emission globale\">\r\n                            {getFieldDecorator(\"emissionGlobale\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Reste à payer\">\r\n                            {getFieldDecorator(\"reste\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item\r\n                            label=\"Montant à encaisser \"\r\n                            validateStatus={this.state.number.validateStatus}\r\n                            help={this.state.number.errorMsg}\r\n                          >\r\n                            {getFieldDecorator(\"montantEncaisser\")(\r\n                              <InputNumber\r\n                                className=\"not-rounded\"\r\n                                max={this.state.recordCotisation.solde}\r\n                                value={this.state.number.value}\r\n                                onChange={this.handleNumberChange}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Montant emission\">\r\n                            {getFieldDecorator(\"montantEmission\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Montant taxe \">\r\n                            {getFieldDecorator(\"montantTaxe\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Montant accessoire \">\r\n                            {getFieldDecorator(\"montantAccessoire\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Montant taxe parafiscale \">\r\n                            {getFieldDecorator(\"montantTaxeParafiscale\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Form>\r\n                </Modal>\r\n                <Modal\r\n                  visible={visibled}\r\n                  title=\"Détails de l'encaissement\"\r\n                  onCancel={this.handleCancel}\r\n                  style={{ top: 20 }}\r\n                  width=\"1000px\"\r\n                  footer={[\r\n                    <Button\r\n                      key=\"back\"\r\n                      onClick={this.handleCancel}\r\n                      className=\"not-rounded\"\r\n                    >\r\n                      Fermer\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                  <Table\r\n                    bordered\r\n                    rowClassName=\"editable-row\"\r\n                    columns={this.columns1}\r\n                    dataSource={this.state.encaissement}\r\n                    pagination={{\r\n                      onChange: this.onPaginationChange,\r\n                      pageSize: 3,\r\n                      total: this.state.totalItems\r\n                    }}\r\n                  />\r\n                </Modal>\r\n                <Modal\r\n                  visible={show}\r\n                  title=\"Annulation de la cotisation\"\r\n                  onOk={this.handleOK}\r\n                  onCancel={this.handleOnClose}\r\n                  style={{ top: 20 }}\r\n                  width=\"1000px\"\r\n                  footer={[\r\n                    <Button\r\n                      key=\"back\"\r\n                      onClick={this.handleOnClose}\r\n                      className=\"not-rounded\"\r\n                    >\r\n                      Fermer\r\n                    </Button>,\r\n                    <Button\r\n                      key=\"submit\"\r\n                      type=\"primary\"\r\n                      onClick={this.handleOK}\r\n                      className=\"not-rounded\"\r\n                    >\r\n                      Ajouter\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                  <Form {...formItemLayout}>\r\n                    <div>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Montant de cotisation\">\r\n                            {getFieldDecorator(\"montantCotisation\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Montant TTC\">\r\n                            {getFieldDecorator(\"montantTTC\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Montant Taxe\">\r\n                            {getFieldDecorator(\"montantTaxe\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={12} offset={1}>\r\n                          <Form.Item label=\"Montant Taxe Parafiscale\">\r\n                            {getFieldDecorator(\"montantTaxeParafiscale\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Solde\">\r\n                            {getFieldDecorator(\"solde\")(\r\n                              <Input className=\"not-rounded\" disabled />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Form>\r\n                </Modal>\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Cotisation);\r\n","import \"antd/dist/antd.css\";\r\nimport { Button, Card, Drawer } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"./Comptabilite.js\";\r\nimport Cotisation from \"./Cotisation\";\r\n\r\nconst tabListNoTitle = [\r\n  {\r\n    key: \"cotisation\",\r\n    tab: \"Cotisation\"\r\n  }\r\n];\r\n\r\nclass DetailsCotisation extends Component {\r\n  state = {\r\n    key: \"cotisation\",\r\n    noTitleKey: \"cotisation\",\r\n    visible: false\r\n  };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n  contentListNoTitle = {\r\n    cotisation: <Cotisation />\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Consumer>\r\n          {context => (\r\n            <React.Fragment>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon=\"edit\"\r\n                size=\"small\"\r\n                onClick={this.showDrawer}\r\n              >\r\n                {context.state.contrat.numeroContrat}\r\n              </a>\r\n              <Drawer\r\n                title={\r\n                  <div style={{ fontSize: \"18px\" }}>\r\n                    Détails du Contrat : {context.state.contrat.numeroContrat}\r\n                  </div>\r\n                }\r\n                width={1400}\r\n                onClose={this.onClose}\r\n                visible={this.state.visible}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n              >\r\n                <Card\r\n                  tabList={tabListNoTitle}\r\n                  activeTabKey={this.state.noTitleKey}\r\n                  onTabChange={key => {\r\n                    this.onTabChange(key, \"noTitleKey\");\r\n                  }}\r\n                >\r\n                  {this.contentListNoTitle[this.state.noTitleKey]}\r\n                </Card>\r\n                <div className=\"submit-cancel\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    className=\"not-rounded\"\r\n                    onClick={this.onClose}\r\n                  >\r\n                    Fermer\r\n                  </Button>\r\n                </div>\r\n              </Drawer>\r\n            </React.Fragment>\r\n          )}\r\n        </MyContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DetailsCotisation;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { NOM_ASSURE, CIN_ASSURE, NUM_CONTRAT } from \"../../constants/index\";\r\nimport { getDecesContrat, searchContrat } from \"../GestionContrats/ContratsAPI\";\r\nimport { getColumnSearchProps } from \"../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nimport { ajoutCotisation, getPrelevement } from \"./CotisationAPI\";\r\nimport DetailsCotisation from \"./DetailsCotisation\";\r\n\r\nexport const MyContext = React.createContext();\r\nvar statuts = \"ACCEPTED\";\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nlet id = \"\";\r\nclass Comptabilite extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      dateCreation: new Date(),\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      selectedRowKeys: [],\r\n      searchby: NUM_CONTRAT,\r\n      searchfor: \"\",\r\n      selectedFile: null,\r\n      record: {},\r\n      contrats: [],\r\n      totalItems: 0,\r\n      pagenumber: 1,\r\n      tauxSurprime: null,\r\n      montantSurprime: null,\r\n      montantCotisation: null,\r\n      cotisationTotale: null\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro quittance\",\r\n        dataIndex: \"numQuittance\",\r\n        key: \"numQuittance\",\r\n        ...getColumnSearchProps(\"numQuittance\", \"numQuittance1\", this)\r\n      },\r\n      {\r\n        title: \"N° de Contrat\",\r\n        dataIndex: NUM_CONTRAT,\r\n        key: \"numcontrat\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <div>\r\n                <MyContext.Provider\r\n                  value={{\r\n                    state: record\r\n                  }}\r\n                >\r\n                  <DetailsCotisation />\r\n                </MyContext.Provider>\r\n              </div>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Durée Contrat\",\r\n        dataIndex: \"contrat.dureeContrat\",\r\n        key: \"dureeContrat\",\r\n        ...getColumnSearchProps(\"dureeContrat\", \"Durée contrat\", this)\r\n      },\r\n      {\r\n        title: \"CIN assuré\",\r\n        dataIndex: \"contrat.assure.cin\",\r\n        key: \"cinAssure\"\r\n      },\r\n      {\r\n        title: \"Nom assuré\",\r\n        dataIndex: \"contrat.assure.nom\",\r\n        key: \"nomAssure\",\r\n        ...getColumnSearchProps(\"assure.nom\", \"Prénom assure\", this)\r\n      },\r\n      {\r\n        title: \"Prénom assuré\",\r\n        dataIndex: \"contrat.assure.prenom\",\r\n        key: \"prenomAssure\"\r\n      },\r\n      {\r\n        title: \"Nom souscripteur\",\r\n        dataIndex: \"contrat.souscripteur.nom\",\r\n        key: \"nomSouscripteur\",\r\n        ...getColumnSearchProps(\"souscripteur.nom\", \"Prénom assure\", this)\r\n      },\r\n      {\r\n        title: \"Prénom souscripteur\",\r\n        dataIndex: \"contrat.souscripteur.prenom\",\r\n        key: \"prenomSouscripteur\"\r\n      },\r\n\r\n      {\r\n        title: \"Date d'effet\",\r\n        dataIndex: \"contrat.dateEffet\",\r\n        key: \"dateEffet\"\r\n      },\r\n      {\r\n        title: \"Date écheance\",\r\n        dataIndex: \"contrat.dateEcheance\",\r\n        key: \"dateEcheance\"\r\n      },\r\n      {\r\n        title: \"Produit\",\r\n        dataIndex: \"contrat.produit.libelle\",\r\n        key: \"produit\"\r\n      },\r\n      {\r\n        title: \"Etat cotisation\",\r\n        dataIndex: \"etatCotisation\",\r\n        key: \"etatCotisation\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        fixed: \"right\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleChange(record)}\r\n                size=\"small\"\r\n                style={{\r\n                  borderRadius: \"0px\",\r\n                  width: \"105px\",\r\n                  backgroundColor: \"#4ee289\",\r\n                  borderColor: \"#4ee289\",\r\n                  textAlign: \"left\"\r\n                }}\r\n              >\r\n                <Icon type=\"plus-circle\" /> Cotisation\r\n              </Button>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  componentDidMount() {\r\n    this.recherchePrelevement();\r\n  }\r\n  recherchePrelevement = () => {\r\n    getPrelevement()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrect. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n  componentDidUpdate(_, prevState) {\r\n    if (\r\n      prevState.montantCotisation !== this.state.montantCotisation &&\r\n      this.state.montantCotisation !== null\r\n    ) {\r\n      this.setState({\r\n        montantSurprime:\r\n          (this.state.tauxSurprime * this.state.montantCotisation) / 100\r\n      });\r\n      this.setState({\r\n        cotisationTotale:\r\n          this.state.montantSurprime + this.state.montantCotisation\r\n      });\r\n    }\r\n  }\r\n  handleChange = value => {\r\n    id = value.contrat.id;\r\n    this.setState({ visible: true, tauxSurprime: value.contrat.tauxSurprime });\r\n  };\r\n  onChangeMontantCotisation = e => {\r\n    this.setState({ montantCotisation: e.target.value });\r\n  };\r\n  async getproprties(statut, page, limit, sort, direction) {\r\n    let contratsResponse = await getDecesContrat(\r\n      statut,\r\n      page,\r\n      limit,\r\n      sort,\r\n      direction\r\n    );\r\n    this.setState({\r\n      contrats: [...contratsResponse.data.content],\r\n      totalItems: contratsResponse.data.totalElements\r\n    });\r\n  }\r\n\r\n  async searchContrats(page, limit, searchby, searchfor) {\r\n    let contratResponse = await searchContrat(page, limit, searchby, searchfor);\r\n\r\n    if (searchby === CIN_ASSURE || searchby === NOM_ASSURE) {\r\n      this.setState({\r\n        data: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.numberOfElements\r\n      });\r\n    } else if (searchby === NUM_CONTRAT) {\r\n      this.setState({\r\n        data: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.totalElements\r\n      });\r\n    }\r\n  }\r\n  onPaginationChange = (pagenumber, pagesize) => {\r\n    this.state.searchfor === \"\"\r\n      ? this.getproprties(statuts, pagenumber - 1, 5, NUM_CONTRAT, \"desc\")\r\n      : this.searchContrats(\r\n          pagenumber - 1,\r\n          5,\r\n          this.state.searchby,\r\n          this.state.searchfor\r\n        );\r\n  };\r\n  selectBefore = (\r\n    <Select\r\n      onChange={value => this.setState({ searchby: value })}\r\n      defaultValue={NUM_CONTRAT}\r\n      style={{ width: 150 }}\r\n    >\r\n      <Option value={NUM_CONTRAT}>N° de contrat</Option>\r\n      <Option value={CIN_ASSURE}>CIN</Option>\r\n      <Option value={NOM_ASSURE}>Nom Assuré</Option>\r\n    </Select>\r\n  );\r\n  search = value => {\r\n    this.setState({ pagenumber: 1, searchfor: value });\r\n    this.searchContrats(\r\n      this.state.pagenumber - 1,\r\n      2,\r\n      this.state.searchby,\r\n      value\r\n    );\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({ visible: false });\r\n        let requestModel = {\r\n          datePrelevement: values.datePrelevement,\r\n          montantCotisation: values.montantCotisation,\r\n          montantTTC: values.montantTTC,\r\n          montantTaxe: values.montantTaxe,\r\n          contrat: id\r\n        };\r\n\r\n        ajoutCotisation(requestModel)\r\n          .then(response => {\r\n            notification.success({\r\n              message: \"TAKAFUL\",\r\n              description: \"L'insertion est bien faite\"\r\n            });\r\n            window.location.reload();\r\n          })\r\n          .catch(error => {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description:\r\n                error.message ||\r\n                \"Sorry! Something went wrong. Please try again!\"\r\n            });\r\n          });\r\n      } else {\r\n        message.warning(\"Contrat non couvert au date de sinistre\");\r\n      }\r\n    });\r\n  };\r\n  handleCanceled = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 12 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Search\r\n            placeholder=\"Entrez le text de recherche\"\r\n            addonBefore={this.selectBefore}\r\n            onSearch={value => this.search(value)}\r\n            enterButton\r\n            style={{ width: 600 }}\r\n          />\r\n        </div>\r\n        <Table\r\n          bordered\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.data}\r\n          pagination={{\r\n            onChange: this.onPaginationChange,\r\n            pageSize: 5,\r\n            total: this.state.totalItems\r\n          }}\r\n          size=\"small\"\r\n          tableLayout=\"unset\"\r\n          scroll={{ x: 1300 }}\r\n        />\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Veuillez saisir les informations d'une cotisation\"\r\n          onOk={this.handleSubmited}\r\n          onCancel={this.handleCanceled}\r\n          afterClose={this.handleClosed}\r\n          style={{ top: 20 }}\r\n          width=\"1000px\"\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCanceled}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={this.handleSubmited}\r\n              className=\"not-rounded\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n            <div>\r\n              <Row>\r\n                <Col span={11}>\r\n                  <Form.Item label=\"Effet Emission\">\r\n                    {getFieldDecorator(\"datePrelevement\")(\r\n                      <DatePicker\r\n                        format={dateFormat}\r\n                        style={{ width: \"100%\" }}\r\n                        className=\"not-rounded\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={11} offset={1}>\r\n                  <Form.Item label=\"Montant Cotisation\">\r\n                    {getFieldDecorator(\"montantCotisation\")(\r\n                      <Input\r\n                        className=\"not-rounded\"\r\n                        onChange={this.onChangeMontantCotisation}\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={11}>\r\n                  <Form.Item label=\"Montant Taxe\">\r\n                    {getFieldDecorator(\"montantTaxe\")(\r\n                      <Input className=\"not-rounded\" />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n                <Col span={11} offset={1}>\r\n                  <Form.Item label=\"Montant TTC\">\r\n                    {getFieldDecorator(\"montantTTC\")(\r\n                      <Input className=\"not-rounded\" />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(Comptabilite);\r\n","import \"antd/dist/antd.css\";\r\nimport { Form, Icon, notification, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getColumnSearchProps } from \"../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps.js\";\r\nimport { getPrelevement } from \"./CotisationAPI.js\";\r\n\r\nclass GestionImpayes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      record: {},\r\n      value: \"\",\r\n      keyRecord: \"\",\r\n      auxiliaire: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro quittance\",\r\n        dataIndex: \"numQuittance\",\r\n        key: \"numQuittance\",\r\n        ...getColumnSearchProps(\"numQuittance\", \"numQuittance1\", this)\r\n      },\r\n      {\r\n        title: \"N° de Contrat\",\r\n        dataIndex: \"contrat.numeroContrat\",\r\n        key: \"numeroContrat\",\r\n        render: text => <a href=\"#top\">{text}</a>\r\n      },\r\n      {\r\n        title: \"Type Cotisation\",\r\n        dataIndex: \"cotisationType\",\r\n        key: \"cotisationType\",\r\n        ...getColumnSearchProps(\"cotisationType\", \"cotisationType1\", this)\r\n      },\r\n      {\r\n        title: \"Date Prélèvement\",\r\n        dataIndex: \"datePrelevement\",\r\n        key: \"datePrelevement\",\r\n        ...getColumnSearchProps(\"datePrelevement\", \"dtePrelevement1\", this)\r\n      },\r\n      {\r\n        title: \"Montant cotisation\",\r\n        dataIndex: \"montantCotisation\",\r\n        key: \"montantCotisation\",\r\n        ...getColumnSearchProps(\"montantCotisation\", \"Montant cotisation\", this)\r\n      },\r\n      {\r\n        title: \"Etat cotisation\",\r\n        dataIndex: \"etatCotisation\",\r\n        key: \"etatCotisation\",\r\n        ...getColumnSearchProps(\"etatCotisation\", \"Etat cotisation\", this)\r\n      },\r\n      {\r\n        title: \"Montant Taxe \",\r\n        dataIndex: \"montantTaxe\",\r\n        key: \"montantTaxe\",\r\n        ...getColumnSearchProps(\"montantTaxe\", \"montantTaxe\", this)\r\n      },\r\n      {\r\n        title: \"Montant TTC \",\r\n        dataIndex: \"montantTTC\",\r\n        key: \"montantTtc\",\r\n        ...getColumnSearchProps(\"montantTtc\", \"montantTtc\", this)\r\n      },\r\n      {\r\n        title: \"Frais acquisition TTC \",\r\n        dataIndex: \"fraisAcquisitionTTC\",\r\n        key: \"fraisAcquisitionTTC\"\r\n      },\r\n      {\r\n        title: \"Frais gestion TTC \",\r\n        dataIndex: \"fraisGestionTTC\",\r\n        key: \"fraisGestionTTC\"\r\n      },\r\n      {\r\n        title: \"Contribution Pure \",\r\n        dataIndex: \"contributionPure\",\r\n        key: \"contributionPure\"\r\n      },\r\n      {\r\n        title: \"Solde \",\r\n        dataIndex: \"solde\",\r\n        key: \"solde\",\r\n        ...getColumnSearchProps(\"solde\", \"solde\", this)\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        dataIndex: \"operation\",\r\n        fixed: \"right\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleSelectChange(record)}\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                <Icon\r\n                  type=\"edit\"\r\n                  style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n                />\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  componentDidMount() {\r\n    this.recherchePrelevement();\r\n  }\r\n  recherchePrelevement = () => {\r\n    getPrelevement()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrect. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <br />\r\n        <br />\r\n        <Table\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.data}\r\n          pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n          scroll={{ x: 1300 }}\r\n          tableLayout=\"unset\"\r\n          size=\"small\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(GestionImpayes);\r\n","import \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  getCotisationById,\r\n  getEncaissementById,\r\n  ajoutEncaissement, \r\n  getCompteBancaire} from \"./CotisationAPI\";\r\nimport { MyContext } from \"./ComptabiliteRetraite\";\r\n\r\nconst { Option } = Select;\r\nlet id = \"\";\r\nlet ids = \"\";\r\nclass CotisationRetraite extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\",\r\n      data: [],\r\n      visible: false,\r\n      visibled: false,\r\n      comptes: [],\r\n      encaissement: [],\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro quittance\",\r\n        dataIndex: \"numQuittance\",\r\n        key: \"numQuittance\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a href=\"#top\" onClick={() => this.handleChanged(record)}>\r\n                {text}\r\n              </a>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n      {\r\n        title: \"Date Prélèvement\",\r\n        dataIndex: \"datePrelevement\",\r\n        key: \"datePrelevement\",\r\n      },\r\n      {\r\n        title: \"Montant cotisation\",\r\n        dataIndex: \"montantCotisation\",\r\n        key: \"montantCotisation\",\r\n      },\r\n      {\r\n        title: \"Etat cotisation\",\r\n        dataIndex: \"etatCotisation\",\r\n        key: \"etatCotisation\",\r\n      },\r\n      {\r\n        title: \"Type cotisation \",\r\n        dataIndex: \"cotisationType\",\r\n        key: \"cotisationType\",\r\n      },\r\n      {\r\n        title: \"Montant TTC \",\r\n        dataIndex: \"montantTTC\",\r\n        key: \"montantTtc\",\r\n      },\r\n      {\r\n        title: \"Contribution Pure \",\r\n        dataIndex: \"contributionPure\",\r\n        key: \"contributionPure\",\r\n      },\r\n      {\r\n        title: \"Solde \",\r\n        dataIndex: \"solde\",\r\n        key: \"solde\",\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              {record.etatCotisation === \"EMIS\" ||\r\n              record.etatCotisation === \"PARTIELEMENT_ENCAISSEE\" ? (\r\n                <Button\r\n                  type=\"primary\"\r\n                  onClick={() => this.handleChange(record)}\r\n                  size=\"small\"\r\n                  style={{\r\n                    borderRadius: \"0px\",\r\n                    width: \"130px\",\r\n                    backgroundColor: \"#4ee289\",\r\n                    borderColor: \"#4ee289\",\r\n                    textAlign: \"left\",\r\n                  }}\r\n                >\r\n                  <Icon type=\"plus-circle\" />\r\n                  Encaissement\r\n                </Button>\r\n              ) : (\r\n                \"---\"\r\n              )}\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n    this.columns1 = [\r\n      {\r\n        title: \"Date d'encaissement\",\r\n        dataIndex: \"dateEncaissement\",\r\n        key: \"datePrelevement\",\r\n      },\r\n      {\r\n        title: \"N° d'encaissement\",\r\n        dataIndex: \"numEncaissement\",\r\n        key: \"numeroEncaissement\",\r\n      },\r\n      {\r\n        title: \"Montant Encaissé\",\r\n        dataIndex: \"montantEncaissement\",\r\n        key: \"montantEncaisse\",\r\n      },\r\n      {\r\n        title: \"Montant Taxe \",\r\n        dataIndex: \"montantTaxe\",\r\n        key: \"montantTaxe\",\r\n      },\r\n      {\r\n        title: \"Mode d'encaissement\",\r\n        dataIndex: \"modeEncaissement\",\r\n        key: \"modeEncaissement\",\r\n      },\r\n      {\r\n        title: \"Référence \",\r\n        dataIndex: \"numReference\",\r\n        key: \"reference\",\r\n      },\r\n    ];\r\n  }\r\n  handleChange = (value) => {\r\n    id = value.id;\r\n    this.setState({ visible: true });\r\n  };\r\n  handleChanged = (value) => {\r\n    this.getAllEncaissement(value.id);\r\n    this.setState({ visibled: true });\r\n  };\r\n  componentDidMount() {\r\n    this.getAllCotisations(ids);\r\n    this.getAllComptes();\r\n  }\r\n  async getAllCotisations(contratId) {\r\n    let response = await getCotisationById(contratId);\r\n    this.setState({\r\n      data: response.data,\r\n    });\r\n  }\r\n  async getAllEncaissement(cotisationId) {\r\n    let response = await getEncaissementById(cotisationId);\r\n    this.setState({\r\n      encaissement: response.data,\r\n    });\r\n  }\r\n  async getAllComptes() {\r\n    let response = await getCompteBancaire();\r\n    this.setState({\r\n      comptes: response.data.content,\r\n    });\r\n  }\r\n  handleSubmited = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({ visible: false });\r\n        let requestModel = {\r\n          dateEncaissement: values.dateEncaissement,\r\n          modeEncaissement: values.modeEncaissement,\r\n          montantEncaissement: values.montantEncaisser,\r\n          montantTaxe: values.montantTaxe,\r\n          numReference: values.numReference,\r\n          compteBancaire: values.numerocompte,\r\n          cotisation: id,\r\n        };\r\n        ajoutEncaissement(requestModel)\r\n          .then((response) => {\r\n            notification.success({\r\n              message: \"TAKAFUL\",\r\n              description: \"L'insertion est bien faite\",\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description:\r\n                error.message ||\r\n                \"Sorry! Something went wrong. Please try again!\",\r\n            });\r\n          });\r\n      } else {\r\n        message.warning(\"Contrat non couvert au date de sinistre\");\r\n      }\r\n    });\r\n  };\r\n  handleCanceled = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n  handleCancel = () => {\r\n    this.setState({ visibled: false });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible, visibled } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 12 },\r\n      },\r\n    };\r\n    return (\r\n      <MyContext.Consumer>\r\n        {(context) => (\r\n          (ids = context.state.id),\r\n          (\r\n            <React.Fragment>\r\n              <div>\r\n                <br />\r\n                <Table\r\n                  rowClassName=\"editable-row\"\r\n                  columns={this.columns}\r\n                  dataSource={this.state.data}\r\n                  pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n                />\r\n                <Modal\r\n                  visible={visible}\r\n                  title=\"Veuillez saisir les informations d'une cotisation\"\r\n                  onOk={this.handleSubmited}\r\n                  onCancel={this.handleCanceled}\r\n                  afterClose={this.handleClosed}\r\n                  style={{ top: 20 }}\r\n                  width=\"1000px\"\r\n                  footer={[\r\n                    <Button\r\n                      key=\"back\"\r\n                      onClick={this.handleCanceled}\r\n                      className=\"not-rounded\"\r\n                    >\r\n                      Fermer\r\n                    </Button>,\r\n                    <Button\r\n                      key=\"submit\"\r\n                      type=\"primary\"\r\n                      onClick={this.handleSubmited}\r\n                      className=\"not-rounded\"\r\n                    >\r\n                      Ajouter\r\n                    </Button>,\r\n                  ]}\r\n                >\r\n                  <Form {...formItemLayout}>\r\n                    <div>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Mode d'encaissement\">\r\n                            {getFieldDecorator(\"modeEncaissement\")(\r\n                              <Select placeholder=\"Veuillez selectionner\">\r\n                                <Option value=\"Chèque\" label=\"Chèque\">\r\n                                  Chèque\r\n                                </Option>\r\n                                <Option value=\"Virement\" label=\"Virement\">\r\n                                  Virement\r\n                                </Option>\r\n                              </Select>\r\n                            )}\r\n                            //SelectOption\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Numéro de compte\">\r\n                            {getFieldDecorator(\"numerocompte\")(\r\n                              <Select placeholder=\"Veuillez selectionner\">\r\n                                {this.state.comptes.map((element) => {\r\n                                  return (\r\n                                    <Option\r\n                                      key={element.id}\r\n                                      value={element.id}\r\n                                      label={element.code}\r\n                                    >\r\n                                      {element.code}\r\n                                    </Option>\r\n                                  );\r\n                                })}\r\n                              </Select>\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"N° reference\">\r\n                            {getFieldDecorator(\"numReference\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Date d'encaissement\">\r\n                            {getFieldDecorator(\"dateEncaissement\")(\r\n                              <DatePicker\r\n                                style={{ width: \"100%\" }}\r\n                                className=\"not-rounded\"\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Emission globale\">\r\n                            {getFieldDecorator(\"emissionGlobale\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Reste à payer\">\r\n                            {getFieldDecorator(\"reste\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Montant à encaisser \">\r\n                            {getFieldDecorator(\"montantEncaisser\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                        <Col span={11} offset={1}>\r\n                          <Form.Item label=\"Montant emission\">\r\n                            {getFieldDecorator(\"montantEmission\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"Montant taxe \">\r\n                            {getFieldDecorator(\"montantTaxe\")(\r\n                              <Input className=\"not-rounded\" />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  </Form>\r\n                </Modal>\r\n                <Modal\r\n                  visible={visibled}\r\n                  title=\"Détails de l'encaissement\"\r\n                  onCancel={this.handleCancel}\r\n                  style={{ top: 20 }}\r\n                  width=\"1000px\"\r\n                  footer={[\r\n                    <Button\r\n                      key=\"back\"\r\n                      onClick={this.handleCancel}\r\n                      className=\"not-rounded\"\r\n                    >\r\n                      Fermer\r\n                    </Button>,\r\n                  ]}\r\n                >\r\n                  <Table\r\n                    bordered\r\n                    rowClassName=\"editable-row\"\r\n                    columns={this.columns1}\r\n                    dataSource={this.state.encaissement}\r\n                    pagination={{\r\n                      onChange: this.onPaginationChange,\r\n                      pageSize: 3,\r\n                      total: this.state.totalItems,\r\n                    }}\r\n                  />\r\n                </Modal>\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(CotisationRetraite);\r\n","import \"antd/dist/antd.css\";\r\nimport { Button, Card, Drawer } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"./ComptabiliteRetraite\";\r\nimport CotisationRetraite from \"./CotisationRetraite\";\r\n\r\nconst tabListNoTitle = [\r\n  {\r\n    key: \"cotisation\",\r\n    tab: \"Cotisation\",\r\n  },\r\n];\r\n\r\nclass DetailsCotisationRetraite extends Component {\r\n  state = {\r\n    key: \"cotisation\",\r\n    noTitleKey: \"cotisation\",\r\n    visible: false,\r\n  };\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true,\r\n    });\r\n  };\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false,\r\n    });\r\n  };\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n  contentListNoTitle = {\r\n    cotisation: <CotisationRetraite />,\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Consumer>\r\n          {(context) => (\r\n            <React.Fragment>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon=\"edit\"\r\n                size=\"small\"\r\n                onClick={this.showDrawer}\r\n              >\r\n                {context.state.numeroContrat}\r\n              </a>\r\n              <Drawer\r\n                title={\r\n                  <div style={{ fontSize: \"18px\" }}>\r\n                    Détails du Contrat : {context.state.numeroContrat}\r\n                  </div>\r\n                }\r\n                width={1400}\r\n                onClose={this.onClose}\r\n                visible={this.state.visible}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n              >\r\n                <Card\r\n                  tabList={tabListNoTitle}\r\n                  activeTabKey={this.state.noTitleKey}\r\n                  onTabChange={(key) => {\r\n                    this.onTabChange(key, \"noTitleKey\");\r\n                  }}\r\n                >\r\n                  {this.contentListNoTitle[this.state.noTitleKey]}\r\n                </Card>\r\n                <div className=\"submit-cancel\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    className=\"not-rounded\"\r\n                    onClick={this.onClose}\r\n                  >\r\n                    Fermer\r\n                  </Button>\r\n                </div>\r\n              </Drawer>\r\n            </React.Fragment>\r\n          )}\r\n        </MyContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DetailsCotisationRetraite;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport DetailsCotisationRetraite from \"./DetailsCotisationRetraite\";\r\nimport {\r\n  getRetraiteContrat,\r\n  searchContrat\r\n} from \"../GestionContrats/ContratsAPI\";\r\nimport { getColumnSearchProps } from \"../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nimport { ajoutCotisation } from \"./CotisationAPI\";\r\n\r\nexport const MyContext = React.createContext();\r\nvar statuts = \"ACCEPTED\";\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nlet id = \"\";\r\nclass ComptabiliteRetraite extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      dateCreation: new Date(),\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      selectedRowKeys: [],\r\n      searchby: \"numeroContrat\",\r\n      searchfor: \"\",\r\n      selectedFile: null,\r\n      record: {},\r\n      contrats: [],\r\n      totalItems: 0,\r\n      pagenumber: 1,\r\n      tauxSurprime: null,\r\n      montantSurprime: null,\r\n      montantCotisation: null,\r\n      cotisationTotale: null,\r\n      natureDeLaCotisaion: \"\"\r\n    };\r\n\r\n    this.columns = [\r\n      {\r\n        title: \"N° de Contrat\",\r\n        dataIndex: \"numeroContrat\",\r\n        key: \"numeroContrat\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <div>\r\n                <MyContext.Provider\r\n                  value={{\r\n                    state: record\r\n                  }}\r\n                >\r\n                  <DetailsCotisationRetraite />\r\n                </MyContext.Provider>\r\n              </div>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Durée Contrat\",\r\n        dataIndex: \"dureeContrat\",\r\n        key: \"dureeContrat\",\r\n        ...getColumnSearchProps(\"dureeContrat\", \"Durée contrat\", this)\r\n      },\r\n      {\r\n        title: \"Nom assuré\",\r\n        dataIndex: \"assure.nom\",\r\n        key: \"nomAssure\",\r\n        ...getColumnSearchProps(\"assure.nom\", \"Prénom assure\", this)\r\n      },\r\n      {\r\n        title: \"Prénom assuré\",\r\n        dataIndex: \"assure.prenom\",\r\n        key: \"prenomAssure\"\r\n      },\r\n      {\r\n        title: \"Nom souscripteur\",\r\n        dataIndex: \"souscripteur.nom\",\r\n        key: \"nomSouscripteur\",\r\n        ...getColumnSearchProps(\"souscripteur.nom\", \"Prénom assure\", this)\r\n      },\r\n      {\r\n        title: \"Prénom souscripteur\",\r\n        dataIndex: \"souscripteur.prenom\",\r\n        key: \"prenomSouscripteur\"\r\n      },\r\n\r\n      {\r\n        title: \"Date d'effet\",\r\n        dataIndex: \"dateEffet\",\r\n        key: \"dateEffet\"\r\n      },\r\n      {\r\n        title: \"Date écheance\",\r\n        dataIndex: \"dateEcheance\",\r\n        key: \"dateEcheance\"\r\n      },\r\n      {\r\n        title: \"Produit\",\r\n        dataIndex: \"produit.libelle\",\r\n        key: \"produit\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleChange(record)}\r\n                size=\"small\"\r\n                style={{\r\n                  borderRadius: \"0px\",\r\n                  width: \"105px\",\r\n                  backgroundColor: \"#4ee289\",\r\n                  borderColor: \"#4ee289\",\r\n                  textAlign: \"left\"\r\n                }}\r\n              >\r\n                <Icon type=\"plus-circle\" /> Cotisation\r\n              </Button>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  onSelectChange = value => {};\r\n  componentDidMount() {\r\n    this.getproprties(statuts, this.state.pagenumber - 1, 3);\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.montantCotisation !== this.state.montantCotisation &&\r\n      this.state.montantCotisation !== null\r\n    ) {\r\n      this.setState(\r\n        {\r\n          montantSurprime:\r\n            (this.state.tauxSurprime * this.state.montantCotisation) / 100\r\n        },\r\n        () => {}\r\n      );\r\n\r\n      this.setState({\r\n        cotisationTotale:\r\n          this.state.montantSurprime + this.state.montantCotisation\r\n      });\r\n    }\r\n  }\r\n  handleChange = value => {\r\n    id = value.id;\r\n    this.setState(\r\n      {\r\n        visible: true,\r\n        tauxSurprime: value.tauxSurprime,\r\n        montantContributionPeriodique: value.montantContributionPeriodique\r\n      },\r\n      () => {}\r\n    );\r\n  };\r\n  onChangeMontantCotisation = e => {\r\n    this.setState({ montantCotisation: e.target.value });\r\n  };\r\n  handleContributionTypeChange = value => {\r\n    this.setState({\r\n      natureDeLaCotisaion: value\r\n    });\r\n    if (value === \"Epargne periodique\") {\r\n      this.setState({\r\n        montantContributionPeriodiqueToShow: this.state\r\n          .montantContributionPeriodique,\r\n        montantCotisation: this.state.montantContributionPeriodique\r\n      });\r\n    }\r\n  };\r\n  async getproprties(statut, page, limit) {\r\n    let contratsResponse = await getRetraiteContrat(statut, page, limit);\r\n    this.setState({\r\n      contrats: [...contratsResponse.data.content],\r\n      totalItems: contratsResponse.data.totalElements\r\n    });\r\n  }\r\n\r\n  async searchContrats(page, limit, searchby, searchfor) {\r\n    let contratResponse = await searchContrat(page, limit, searchby, searchfor);\r\n\r\n    if (searchby === \"cin\" || searchby === \"nom\") {\r\n      this.setState({\r\n        contrats: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.numberOfElements\r\n      });\r\n    } else if (searchby === \"numeroContrat\") {\r\n      this.setState({\r\n        contrats: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.totalElements\r\n      });\r\n    }\r\n  }\r\n  onPaginationChange = (pagenumber, pagesize) => {\r\n    if (this.state.searchfor === \"\")\r\n      this.getproprties(statuts, pagenumber - 1, 3);\r\n    else {\r\n      this.searchContrats(\r\n        pagenumber - 1,\r\n        3,\r\n        this.state.searchby,\r\n        this.state.searchfor\r\n      );\r\n    }\r\n  };\r\n  selectBefore = (\r\n    <Select\r\n      onChange={value => this.setState({ searchby: value })}\r\n      defaultValue=\"numContrat\"\r\n      style={{ width: 150 }}\r\n    >\r\n      <Option value=\"numContrat\">N° de contrat</Option>\r\n      <Option value=\"cin\">CIN</Option>\r\n      <Option value=\"nom\">Nom Assuré</Option>\r\n    </Select>\r\n  );\r\n  search = value => {\r\n    this.setState({ pagenumber: 1, searchfor: value });\r\n    this.searchContrats(\r\n      this.state.pagenumber - 1,\r\n      2,\r\n      this.state.searchby,\r\n      value\r\n    );\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.setState({ visible: false });\r\n        let requestModel = {\r\n          datePrelevement: values.datePrelevement,\r\n          montantCotisation: this.state.montantCotisation,\r\n          montantTTC: this.state.montantCotisation,\r\n          cotisationType: this.state.natureDeLaCotisaion,\r\n          contrat: id\r\n        };\r\n        ajoutCotisation(requestModel)\r\n          .then(response => {\r\n            notification.success({\r\n              message: \"TAKAFUL\",\r\n              description: \"L'insertion est bien faite\"\r\n            });\r\n          })\r\n          .catch(error => {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description:\r\n                error.message ||\r\n                \"Sorry! Something went wrong. Please try again!\"\r\n            });\r\n          });\r\n      } else {\r\n        message.warning(\"Contrat non couvert au date de sinistre\");\r\n      }\r\n    });\r\n  };\r\n  handleCanceled = () => {\r\n    this.setState({ visible: false, natureDeLaCotisaion: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 12 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Search\r\n            placeholder=\"Entrez le text de recherche\"\r\n            addonBefore={this.selectBefore}\r\n            onSearch={value => this.search(value)}\r\n            enterButton\r\n            style={{ width: 600 }}\r\n          />\r\n        </div>\r\n        <Table\r\n          bordered\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.contrats}\r\n          pagination={{\r\n            onChange: this.onPaginationChange,\r\n            pageSize: 3,\r\n            total: this.state.totalItems\r\n          }}\r\n        />\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Veuillez saisir les informations d'une cotisation\"\r\n          onOk={this.handleSubmited}\r\n          onCancel={this.handleCanceled}\r\n          afterClose={this.handleClosed}\r\n          style={{ top: 20 }}\r\n          width=\"1000px\"\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCanceled}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={this.handleSubmited}\r\n              className=\"not-rounded\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n            <div>\r\n              <Row>\r\n                <Col span={11} offset={1}>\r\n                  <Form.Item label=\"Effet Emission\">\r\n                    {getFieldDecorator(\"datePrelevement\", {\r\n                      rules: [\r\n                        { required: true, message: \"La date est obligatoire\" }\r\n                      ]\r\n                    })(\r\n                      <DatePicker\r\n                        format={dateFormat}\r\n                        style={{ width: \"100%\" }}\r\n                        className=\"not-rounded\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col span={11} offset={1}>\r\n                  <Form.Item label=\"Nature Cotisation\">\r\n                    <Select\r\n                      onChange={this.handleContributionTypeChange}\r\n                      style={{ width: \"100%\" }}\r\n                    >\r\n                      <Option value=\"Epargne periodique\">\r\n                        Contribution périodique\r\n                      </Option>\r\n                      <Option value=\"Epargne libre\">Contribution libre</Option>\r\n                    </Select>\r\n                  </Form.Item>\r\n                </Col>\r\n              </Row>\r\n              <Divider />\r\n              <Row>\r\n                <Col span={11} offset={1}>\r\n                  {this.state.natureDeLaCotisaion === \"Epargne libre\" ? (\r\n                    <Form.Item label=\"Montant Cotisation\">\r\n                      {getFieldDecorator(\"montantCotisation\")(\r\n                        <Input\r\n                          className=\"not-rounded\"\r\n                          type=\"number\"\r\n                          onChange={this.onChangeMontantCotisation}\r\n                          addonAfter=\"DH\"\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  ) : null}\r\n                  {this.state.natureDeLaCotisaion === \"Epargne periodique\" ? (\r\n                    <Form.Item label=\"Montant Cotisation\">\r\n                      <Input\r\n                        className=\"not-rounded\"\r\n                        defaultValue={\r\n                          this.state.montantContributionPeriodiqueToShow\r\n                        }\r\n                        disabled\r\n                      />\r\n                    </Form.Item>\r\n                  ) : null}\r\n                </Col>\r\n              </Row>\r\n            </div>\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(ComptabiliteRetraite);\r\n","import \"antd/dist/antd.css\";\r\nimport { Form, Tabs } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport Comptabilite from \"./Comptabilite\";\r\nimport GestionImpayes from \"./GestionImpayes\";\r\nimport ComptabiliteRetraite from \"./ComptabiliteRetraite\";\r\n\r\nconst { TabPane } = Tabs;\r\nclass Global extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"Gestion des impayés\" key=\"1\">\r\n            <GestionImpayes />\r\n          </TabPane>\r\n          <TabPane tab=\"Comptabilité décès \" key=\"2\">\r\n            <Comptabilite />\r\n          </TabPane>\r\n          <TabPane tab=\"Comptabilité épargne retraite\" key=\"3\">\r\n            <ComptabiliteRetraite />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(Global);\r\n","import {\r\n  ACCESS_TOKEN,\r\n  API_BASE_URL,\r\n  REQUEST as request\r\n} from \"../../constants/index\";\r\n\r\nexport function ajoutEvent(eventRequest) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n\r\n  return request({\r\n    url: API_BASE_URL + \"/private/agenda/add\",\r\n    data: eventRequest,\r\n    method: \"POST\"\r\n  });\r\n}\r\n\r\nexport function updateEvent(eventId, updatedEvent) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/agenda/\" + eventId,\r\n    method: \"PUT\",\r\n    data: updatedEvent\r\n  });\r\n}\r\n\r\nexport function deleteEventById(id, userId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/agenda/\" + id + \"/\" + userId,\r\n    method: \"DELETE\"\r\n  });\r\n}\r\nexport function getEventByUser(userId) {\r\n  if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n    return Promise.reject(\"No access token set.\");\r\n  }\r\n  return request({\r\n    url: API_BASE_URL + \"/private/agenda/\" + userId,\r\n    method: \"GET\"\r\n  });\r\n}\r\n","import \"./Agenda.css\";\r\nimport { notification } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { Modal, ReactAgenda, ReactAgendaCtrl } from \"react-agenda\";\r\nimport { connectedUserContext } from \"../../app/App\";\r\nimport { ajoutEvent, deleteEventById, updateEvent } from \"./AgendaAPI\";\r\n\r\nvar now = new Date();\r\nvar now1 = new Date();\r\nvar user_id = \"\";\r\n\r\nrequire(\"moment/locale/fr.js\");\r\nvar colors = {\r\n  \"color-1\": \"rgba(102, 195, 131 , 1)\",\r\n  \"color-2\": \"rgba(242, 177, 52, 1)\",\r\n  \"color-3\": \"rgba(235, 85, 59, 1)\",\r\n  \"color-4\": \"rgba(70, 159, 213, 1)\",\r\n  \"color-5\": \"rgba(170, 59, 123, 1)\"\r\n};\r\n\r\nlet dat = [];\r\nlet datas = [];\r\nlet datas1 = [];\r\n\r\nexport class Agenda extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n      selected: [],\r\n      set: false,\r\n      registre: [],\r\n      cellHeight: 60 / 4,\r\n      showModal: false,\r\n      locale: \"fr\",\r\n      rowsPerHour: 4,\r\n      numberOfDays: 4,\r\n      startDate: new Date()\r\n    };\r\n    this.handleRangeSelection = this.handleRangeSelection.bind(this);\r\n    this.handleItemEdit = this.handleItemEdit.bind(this);\r\n    this.zoomIn = this.zoomIn.bind(this);\r\n    this.zoomOut = this.zoomOut.bind(this);\r\n    this._openModal = this._openModal.bind(this);\r\n    this._closeModal = this._closeModal.bind(this);\r\n    this.addNewEvent = this.addNewEvent.bind(this);\r\n    this.removeEvent = this.removeEvent.bind(this);\r\n    this.editEvent = this.editEvent.bind(this);\r\n    this.changeView = this.changeView.bind(this);\r\n    this.handleCellSelection = this.handleCellSelection.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({});\r\n    let array = [];\r\n    for (let index of dat) {\r\n      now1 = new Date(index.eventStartDate);\r\n      now = new Date(index.eventEndDate);\r\n      datas = {\r\n        _id: index.id,\r\n        name: index.eventDescription,\r\n        startDateTime: new Date(\r\n          now1.getFullYear(),\r\n          now1.getMonth(),\r\n          now1.getDate(),\r\n          now1.getHours(),\r\n          now1.getMinutes()\r\n        ),\r\n        endDateTime: new Date(\r\n          now.getFullYear(),\r\n          now.getMonth(),\r\n          now.getDate(),\r\n          now.getHours(),\r\n          now.getMinutes()\r\n        ),\r\n        classes: index.eventColor\r\n      };\r\n      array.push(datas);\r\n    }\r\n    this.setState({ items: array });\r\n  }\r\n  UNSAFE_componentWillReceiveProps(next, last) {\r\n    if (next.items) {\r\n      this.setState({ items: next.items });\r\n    }\r\n  }\r\n  handleItemEdit(item, openModal) {\r\n    if (item && openModal === true) {\r\n      this.setState({ selected: [item] });\r\n      return this._openModal();\r\n    }\r\n  }\r\n  handleCellSelection(item, openModal) {\r\n    if (this.state.selected && this.state.selected[0] === item) {\r\n      return this._openModal();\r\n    }\r\n    this.setState({ selected: [item] });\r\n  }\r\n  zoomIn() {\r\n    var num = this.state.cellHeight + 15;\r\n    this.setState({ cellHeight: num });\r\n  }\r\n  zoomOut() {\r\n    var num = this.state.cellHeight - 15;\r\n    this.setState({ cellHeight: num });\r\n  }\r\n  handleDateRangeChange(startDate, endDate) {\r\n    this.setState({ startDate: startDate });\r\n  }\r\n  handleRangeSelection(selected) {\r\n    this.setState({ selected: selected, showCtrl: true });\r\n    this._openModal();\r\n  }\r\n  _openModal() {\r\n    this.setState({ showModal: true });\r\n  }\r\n  _closeModal(e) {\r\n    if (e) {\r\n      e.stopPropagation();\r\n      e.preventDefault();\r\n    }\r\n    this.setState({ showModal: false });\r\n  }\r\n  handleItemChange(items, item) {\r\n    this.setState({ items: items });\r\n  }\r\n  handleItemSize(items, item) {\r\n    this.setState({ items: items });\r\n  }\r\n  async deleteEventId(id, userId) {\r\n    try {\r\n      await deleteEventById(id, userId);\r\n      window.location.reload();\r\n    } catch (err) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          err.message || \"Sorry! Something went wrong. Please try again!\"\r\n      });\r\n    }\r\n  }\r\n  removeEvent = (items, item) => {\r\n    const identify = item._id;\r\n    this.deleteEventId(identify, user_id);\r\n    var index = dat.indexOf(identify);\r\n    dat.splice(index, 1);\r\n    this.setState({ registre: dat });\r\n  };\r\n  async addEvents(body) {\r\n    try {\r\n      let response = await ajoutEvent(body);\r\n      if (response.status === 200) {\r\n        dat.push(response.data);\r\n        this.setState({ registre: dat });\r\n        let array1 = [];\r\n        for (let index of dat) {\r\n          var now2;\r\n          var now3;\r\n          now2 = new Date(index.eventStartDate);\r\n          now3 = new Date(index.eventEndDate);\r\n          datas1 = {\r\n            _id: index.id,\r\n            name: index.eventDescription,\r\n            startDateTime: new Date(\r\n              now2.getFullYear(),\r\n              now2.getMonth(),\r\n              now2.getDate(),\r\n              now2.getHours(),\r\n              now2.getMinutes()\r\n            ),\r\n            endDateTime: new Date(\r\n              now3.getFullYear(),\r\n              now3.getMonth(),\r\n              now3.getDate(),\r\n              now3.getHours(),\r\n              now3.getMinutes()\r\n            ),\r\n            classes: index.eventColor\r\n          };\r\n          array1.push(datas1);\r\n        }\r\n        this.setState({ items: array1 });\r\n      }\r\n    } catch (err) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          err.message || \"Sorry! Something went wrong. Please try again!\"\r\n      });\r\n    }\r\n  }\r\n  addNewEvent(test, newItems) {\r\n    const eventRequest = {\r\n      eventDescription: newItems.name,\r\n      eventStartDate: newItems.startDateTime,\r\n      eventEndDate: newItems.endDateTime,\r\n      eventColor: newItems.classes,\r\n      userId: user_id\r\n    };\r\n    this.addEvents(eventRequest);\r\n\r\n    this._closeModal();\r\n  }\r\n  async updateEvents(id, body) {\r\n    try {\r\n      let response = await updateEvent(id, body);\r\n      if (response.status === 200) {\r\n        this.setState({ registre: response.data });\r\n      }\r\n      window.location.reload();\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message ||\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n  editEvent(values, item) {\r\n    const updatedEvent = {\r\n      eventDescription: item.name,\r\n      eventStartDate: item.startDateTime,\r\n      eventEndDate: item.endDateTime,\r\n      eventColor: item.classes,\r\n      userId: user_id\r\n    };\r\n    const identify = item._id;\r\n    this.setState({ items: values });\r\n    this.updateEvents(identify, updatedEvent);\r\n    this.setState({ registre: values });\r\n    this._closeModal();\r\n  }\r\n  changeView(days, event) {\r\n    this.setState({ numberOfDays: days });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"content-expanded \">\r\n        <connectedUserContext.Consumer>\r\n          {value => (\r\n            (user_id = value.id),\r\n            (dat = value.events),\r\n            (this.state.registre = value.events)\r\n          )}\r\n        </connectedUserContext.Consumer>\r\n        <div className=\"control-buttons\">\r\n          <button className=\"button-control\" onClick={this.zoomIn}>\r\n            {\" \"}\r\n            <i className=\"zoom-plus-icon\"></i>{\" \"}\r\n          </button>\r\n          <button className=\"button-control\" onClick={this.zoomOut}>\r\n            {\" \"}\r\n            <i className=\"zoom-minus-icon\"></i>{\" \"}\r\n          </button>\r\n          <button className=\"button-control\" onClick={this._openModal}>\r\n            {\" \"}\r\n            <i className=\"schedule-icon\"></i>{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"button-control\"\r\n            onClick={this.changeView.bind(null, 7)}\r\n          >\r\n            {\" \"}\r\n            {moment.duration(7, \"days\").humanize()}{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"button-control\"\r\n            onClick={this.changeView.bind(null, 4)}\r\n          >\r\n            {\" \"}\r\n            {moment.duration(4, \"days\").humanize()}{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"button-control\"\r\n            onClick={this.changeView.bind(null, 3)}\r\n          >\r\n            {\" \"}\r\n            {moment.duration(3, \"days\").humanize()}{\" \"}\r\n          </button>\r\n          <button\r\n            className=\"button-control\"\r\n            onClick={this.changeView.bind(null, 1)}\r\n          >\r\n            {\" \"}\r\n            {moment.duration(1, \"day\").humanize()}{\" \"}\r\n          </button>\r\n        </div>\r\n        <ReactAgenda\r\n          minDate={new Date(now.getFullYear(), now.getMonth() - 3)}\r\n          maxDate={new Date(now.getFullYear(), now.getMonth() + 3)}\r\n          startDate={this.state.startDate}\r\n          startAtTime={8}\r\n          endAtTime={23}\r\n          cellHeight={this.state.cellHeight}\r\n          locale=\"fr\"\r\n          items={this.state.items}\r\n          numberOfDays={this.state.numberOfDays}\r\n          headFormat={\"ddd DD MMM\"}\r\n          rowsPerHour={this.state.rowsPerHour}\r\n          itemColors={colors}\r\n          helper={true}\r\n          view=\"calendar\"\r\n          autoScale={false}\r\n          fixedHeader={true}\r\n          onRangeSelection={this.handleRangeSelection.bind(this)}\r\n          onChangeEvent={this.handleItemChange.bind(this)}\r\n          onChangeDuration={this.handleItemSize.bind(this)}\r\n          onItemEdit={this.handleItemEdit.bind(this)}\r\n          onCellSelect={this.handleCellSelection.bind(this)}\r\n          onItemRemove={this.removeEvent.bind(this)}\r\n          onDateRangeChange={this.handleDateRangeChange.bind(this)}\r\n        />\r\n        {this.state.showModal ? (\r\n          <Modal clickOutside={this._closeModal}>\r\n            <div className=\"modal-content\">\r\n              <ReactAgendaCtrl\r\n                items={this.state.items}\r\n                itemColors={colors}\r\n                selectedCells={this.state.selected}\r\n                Addnew={this.addNewEvent}\r\n                edit={this.editEvent}\r\n              />\r\n            </div>\r\n          </Modal>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Agenda;\r\n","import \"antd/dist/antd.css\";\r\nimport { Collapse, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getAvenant } from \"../../../Parametrage/avenant/AvenantAPI\";\r\n\r\nimport { MyContext } from \"../ConsultRetraiteContrat/ConsultRetraiteContrat\";\r\nconst { Panel } = Collapse;\r\nvar id = \"\";\r\nclass Avenants extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\",\r\n      data: [],\r\n      contratID: \"\"\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro d'avenant\",\r\n        dataIndex: \"numeroAvenant\",\r\n        key: \"numeroAvenant\"\r\n      },\r\n      {\r\n        title: \"Date d'effet\",\r\n        dataIndex: \"dateEffet\",\r\n        key: \"dateEffet\"\r\n      },\r\n      {\r\n        title: \"Type d'avenant\",\r\n        dataIndex: \"typeAvenant.libelle\",\r\n        key: \"typeAvenant\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAvenants(id);\r\n  }\r\n\r\n  getAvenants = idContrat => {\r\n    getAvenant(idContrat).then(response => {\r\n      let newDataList = [];\r\n      response.data.forEach(element => {\r\n        let key = { key: element.id };\r\n        element = { ...element, ...key };\r\n        newDataList.push(element);\r\n      });\r\n      this.setState({ data: newDataList });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          (id = context.state.id),\r\n          (\r\n            <React.Fragment>\r\n              <div>\r\n                <Collapse\r\n                  defaultActiveKey={[\"1\"]}\r\n                  expandIconPosition={expandIconPosition}\r\n                >\r\n                  <Panel header=\"Liste des Avenants\" key=\"1\">\r\n                    <div>\r\n                      <Table\r\n                        rowClassName=\"editable-row\"\r\n                        columns={this.columns}\r\n                        dataSource={this.state.data}\r\n                        pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n                      />\r\n                    </div>\r\n                  </Panel>\r\n                </Collapse>\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Avenants;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"../ConsultRetraiteContrat/ConsultRetraiteContrat\";\r\nconst { Panel } = Collapse;\r\nclass Contrats extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Contrat\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      N° contrat : {context.state.numeroContrat}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - N° de compte bancaire\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>---</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Numéro du contrat\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.numeroContrat}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Date d&apos;effet\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.dateEffet}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Date d&apos;écheance\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.dateEcheance}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Durée (mois)</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.dureeContrat}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Montant de la cotisation périodique retraite\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.montantContributionPeriodique}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Périodicité</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.periodicite.libelle}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Montant des frais d&apos;acquisition\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.fraisAcquisition}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Montant Contribution Initiale\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.montantContributionInitiale}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Option fiscale</h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        {context.state.produit.natureFiscale !== \"null\" ? (\r\n                          <p>{context.state.produit.natureFiscale}</p>\r\n                        ) : (\r\n                          <p>0</p>\r\n                        )}\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Deductibilite Fiscale\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.deductibiliteFiscale}</p>\r\n                      </Col>\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Type de Contrat\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.contratType}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contrats;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { MyContext } from \"../ConsultRetraiteContrat/ConsultRetraiteContrat\";\r\nconst { Panel } = Collapse;\r\n\r\nclass General extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Souscripteur\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      CIN : {context.state.souscripteur.cin}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.nom}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prénom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.prenom}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- CIN</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.cin}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Date naissance</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.dateNaissance}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Situation familiale\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.situationFamiliale}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Profession</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.profession}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nationalité</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.nationalite}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Matricule</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.souscripteur.matricule}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n                <Panel\r\n                  header=\"Assuré\"\r\n                  key=\"2\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      CIN : {context.state.assure.cin}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.nom}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Prénom</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.prenom}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- CIN</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.cin}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Date naissance</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.dateNaissance}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Situation familiale\r\n                        </h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.situationFamiliale}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Profession</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.profession}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={4} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Nationalité</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.nationalite}</p>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Matricule</h4>\r\n                      </Col>\r\n                      <Col span={4} offset={2}>\r\n                        <p>{context.state.assure.matricule}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n                <Panel header=\"Bénéficiaire(s)\" key=\"3\">\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col>\r\n                        <div>\r\n                          <Table\r\n                            rowClassName=\"editable-row\"\r\n                            columns={[\r\n                              {\r\n                                title: \"CIN\",\r\n                                dataIndex: \"cin\",\r\n                                key: \"cin\"\r\n                              },\r\n                              {\r\n                                title: \"RIB\",\r\n                                dataIndex: \"rib\",\r\n                                key: \"rib\"\r\n                              },\r\n                              {\r\n                                title: \"Nom\",\r\n                                dataIndex: \"nom\",\r\n                                key: \"nom\"\r\n                              },\r\n                              {\r\n                                title: \"Prenom\",\r\n                                dataIndex: \"prenom\",\r\n                                key: \"prenom\"\r\n                              }\r\n                            ]}\r\n                            dataSource={context.state.beneficiaireEnDeces}\r\n                            pagination={{\r\n                              defaultCurrent: 1,\r\n                              defaultPageSize: 5\r\n                            }}\r\n                          />\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default General;\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { MyContext } from \"../ConsultRetraiteContrat/ConsultRetraiteContrat\";\r\nconst { Panel } = Collapse;\r\n\r\nclass Produits extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\"\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { expandIconPosition } = this.state;\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Collapse\r\n                defaultActiveKey={[\"1\"]}\r\n                expandIconPosition={expandIconPosition}\r\n              >\r\n                <Panel\r\n                  header=\"Produit\"\r\n                  key=\"1\"\r\n                  extra={\r\n                    <div style={{ fontSize: \"13px\" }}>\r\n                      Libelle : {context.state.produit.libelle}\r\n                    </div>\r\n                  }\r\n                >\r\n                  <div>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Libelle</h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.libelle}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Code</h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.code}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Frais d&aposacquisition\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.fraisAcquisition}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Risque</h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.risque.libelle}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Catégorie</h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.categorie.libelle}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Durée min contrat (Mois)\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.dureeMinimalSouscription}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Numéro de compte\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.numeroCompte}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Nature Condition Disciplinaire Rachat Total\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>\r\n                          {\r\n                            context.state.produit\r\n                              .natureConditionDisciplinaireTotale\r\n                          }\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Nature Condition Disciplinaire Rachat Partiel\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>\r\n                          {\r\n                            context.state.produit\r\n                              .natureConditionDisciplinairePartiel\r\n                          }\r\n                        </p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Valeur Condition Disciplinaire Totale\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>\r\n                          {\r\n                            context.state.produit\r\n                              .valeurConditionDisciplinaireTotale\r\n                          }\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Valeur Condition Disciplinaire Partiel\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>\r\n                          {\r\n                            context.state.produit\r\n                              .valeurConditionDisciplinairePartiel\r\n                          }\r\n                        </p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Pool Investissment\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.poolInvestissment.libelle}</p>\r\n                      </Col>\r\n                    </Row>\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Revenu Global</h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.revenuGlobal}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Montant Min de la Contribution\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.montantMinContribution}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.00)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Taux de Rendement Avant Imposition\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>\r\n                          {context.state.produit.tauxRendementAvantImposition}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Mode de Gestion\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>{context.state.produit.modeGestion}</p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Frais Fixe WakalabilIstithmar\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>\r\n                          {context.state.produit.fraisFixeWakalabilIstithmar}\r\n                        </p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Surperformance WakalabilIstithmar\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>\r\n                          {\r\n                            context.state.produit\r\n                              .surperformanceWakalabilIstithmar\r\n                          }\r\n                        </p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Profit Moudaraba\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.profitMoudaraba}</p>\r\n                      </Col>\r\n                    </Row>\r\n\r\n                    <Row\r\n                      style={{\r\n                        backgroundColor: \"rgb(0,0,0,0.03)\",\r\n                        marginTop: \"10px\"\r\n                      }}\r\n                    >\r\n                      <Col span={6} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>\r\n                          - Mode Calcul de Capital Constitue\r\n                        </h4>\r\n                      </Col>\r\n\r\n                      <Col span={4} offset={1}>\r\n                        <p>\r\n                          {context.state.produit.modeCalculCapitalConstitue}\r\n                        </p>\r\n                      </Col>\r\n\r\n                      <Col span={7} offset={1}>\r\n                        <h4 style={{ fontWeight: \"blod\" }}>- Regime Fiscal</h4>\r\n                      </Col>\r\n\r\n                      <Col span={3} offset={1}>\r\n                        <p>{context.state.produit.regimeFiscal}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </Panel>\r\n              </Collapse>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Produits;\r\n","/* eslint-disable react/prop-types */\r\nimport \"./Sinistre.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Checkbox,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Modal,\r\n  notification,\r\n  Radio,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  getSinistre,\r\n  setStatut,\r\n  deleteSinistre\r\n} from \"../../DetailsTabs/SinistreAPI\";\r\nimport { updatePrestationSinistre } from \"../../../Parametrage/TypePrestation/PrestationAPI\";\r\nimport {\r\n  getExclusion,\r\n  getPieceJoint\r\n} from \"../../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nimport { MyContext } from \"../ConsultRetraiteContrat/ConsultRetraiteContrat\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nvar id = \"\";\r\nvar id_sinistre = \"\";\r\nvar statut = \"\";\r\nvar beneficiaire = {};\r\nvar famille = \"Deces\";\r\nclass Sinistre extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandIconPosition: \"left\",\r\n      data: [],\r\n      add: false,\r\n      remplie: \"\",\r\n      visible: false,\r\n      visibled: false,\r\n      exclusions: [],\r\n      pieceJointe: [],\r\n      keyRecord: \"\",\r\n      agenceBancaire: true\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Numéro de sinistre\",\r\n        dataIndex: \"numeroSinistre\",\r\n        key: \"numeroSinistre\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleChange(record)}\r\n                size=\"small\"\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                {text}\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Date de survenance\",\r\n        dataIndex: \"dateSurvenance\",\r\n        key: \"dateServenance\"\r\n      },\r\n      {\r\n        title: \"date déclaration sinistre\",\r\n        dataIndex: \"dateDeclarationSinistre\",\r\n        key: \"dateDeclarationSinistre\"\r\n      },\r\n      {\r\n        title: \"Statut\",\r\n        dataIndex: \"status\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Select\r\n                placeholder=\"Please select\"\r\n                onChange={this.handleChangeed}\r\n                style={{ width: \"100%\" }}\r\n                defaultValue={text}\r\n              >\r\n                <Option\r\n                  value=\"EN_COURS\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  EN COURS\r\n                </Option>\r\n                <Option\r\n                  value=\"A_signer\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  À SIGNER\r\n                </Option>\r\n                <Option\r\n                  value=\"ANNULER\"\r\n                  onClick={() => this.handleRecord(record)}\r\n                >\r\n                  ANNULER\r\n                </Option>\r\n              </Select>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    this.columns1 = [\r\n      {\r\n        title: \"Numéro de sinistre\",\r\n        dataIndex: \"numeroSinistre\",\r\n        key: \"numeroSinistre\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                onClick={() => this.handleChange(record)}\r\n                size=\"small\"\r\n                style={{ borderRadius: \"0px\" }}\r\n              >\r\n                {text}\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Date de survenance\",\r\n        dataIndex: \"dateSurvenance\",\r\n        key: \"dateServenance\"\r\n      },\r\n      {\r\n        title: \"date déclaration sinistre\",\r\n        dataIndex: \"dateDeclarationSinistre\",\r\n        key: \"dateDeclarationSinistre\"\r\n      },\r\n      {\r\n        title: \"Statut\",\r\n        dataIndex: \"status\",\r\n        key: \"statut\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getSinistres(id);\r\n    this.getAllExclusion(famille);\r\n    this.getAllPiece();\r\n  }\r\n\r\n  onChanged = e => {\r\n    this.setState({\r\n      agenceBancaire: e.target.value\r\n    });\r\n  };\r\n\r\n  handleChangeed = value => {\r\n    statut = value;\r\n    if (value === \"A_signer\") {\r\n      this.setState({\r\n        visible: true\r\n      });\r\n    } else if (value === \"EN_COURS\") {\r\n      let request = { motif: \"\" };\r\n      this.setStatuts(id_sinistre, value, request);\r\n    } else if (value === \"ANNULER\") {\r\n      this.setState({\r\n        visibled: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleOk = () => {\r\n    let request = { motif: \"\" };\r\n    this.setStatuts(id_sinistre, statut, request);\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let request = { motif: values.motif };\r\n        this.setStatuts(id_sinistre, statut, request);\r\n        this.setState({ visibled: false });\r\n      }\r\n    });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  async updatePrestationSinistres(body, id_prestation) {\r\n    let response = await updatePrestationSinistre(body, id_prestation);\r\n    let dataSource = [];\r\n    dataSource.push(response.data);\r\n    this.setState({\r\n      data: dataSource\r\n    });\r\n  }\r\n\r\n  async setStatuts(idSinistre, statuts, model) {\r\n    await setStatut(idSinistre, statuts, model);\r\n  }\r\n\r\n  async getAllExclusion(exclusionFamille) {\r\n    let response = await getExclusion(exclusionFamille);\r\n    this.setState({\r\n      exclusions: response.data.content\r\n    });\r\n  }\r\n\r\n  getSinistres = idContrat => {\r\n    getSinistre(idContrat).then(response => {\r\n      let newDataList = [];\r\n      response.data.forEach(element => {\r\n        let key = { key: element.id };\r\n        element = { ...element, ...key };\r\n        newDataList.push(element);\r\n      });\r\n      this.setState({ data: newDataList });\r\n      if (this.state.data[0] === undefined) {\r\n        //instruction to do\r\n      } else {\r\n        this.setState({ remplie: this.state.data[0].status });\r\n      }\r\n    });\r\n  };\r\n\r\n  async deletePrestationSinistre(idPrestation) {\r\n    try {\r\n      let response = await deleteSinistre(idPrestation);\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"Sinistre annulé !\"\r\n        });\r\n      }\r\n    } catch (err) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          err.message || \"Désolé! Un problème est survenu. Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  handleRecord = value => {\r\n    id_sinistre = value.id;\r\n  };\r\n\r\n  handleChange = value => {\r\n    this.setState({ add: true, keyRecord: value.id }, () => {\r\n      var dateDeclaration = new Date(\r\n        moment(value.dateDeclarationSinistre, \"DD/MM/YYYY \")\r\n      );\r\n      var dateSurvenance = new Date(\r\n        moment(value.dateSurvenance, \"DD/MM/YYYY \")\r\n      );\r\n      var dateApres = new Date(moment(value.creationDate, \"DD/MM/YYYY \"));\r\n      var diffDeclaration = dateApres.getTime() - dateDeclaration.getTime();\r\n      var dureeDeclaration = (diffDeclaration / (1000 * 60 * 60 * 24)).toFixed(\r\n        0\r\n      );\r\n      var diffSurvenance = dateApres.getTime() - dateSurvenance.getTime();\r\n      var dureeSurvenance = (diffSurvenance / (1000 * 60 * 60 * 24)).toFixed(0);\r\n      this.props.form.setFieldsValue({\r\n        dateCreation: moment(value.creationDate, \"DD/MM/YYYY \"),\r\n        numeroSinistre: value.numeroSinistre,\r\n        dateDeclarationSinistre: moment(\r\n          value.dateDeclarationSinistre,\r\n          \"DD/MM/YYYY\"\r\n        ),\r\n        dateSurvenance: moment(value.dateSurvenance, \"DD/MM/YYYY\"),\r\n        dureeDeclaration: dureeDeclaration,\r\n        dureeSurvenance: dureeSurvenance,\r\n        commentaire: value.commentaire,\r\n        crd: value.crd,\r\n        montantRegler: value.montantRegler,\r\n        typeSinistre: value.natureSinistre,\r\n        nbrEcheanceImpayees: value.nbrEcheanceImpaye,\r\n        numeroCompte: value.numeroCompte,\r\n        reglementPartiel: value.reglementPartiel,\r\n        tauxInvalidite: value.tauxInvalidite,\r\n        modeReglement: value.modeReglement,\r\n        beneficiaire: beneficiaire.id\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let request = {\r\n          dateSurvenance: values.dateSurvenance,\r\n          dateDeclarationSinistre: values.dateDeclarationSinistre,\r\n          dureeDeclaration: values.dureeDeclaration,\r\n          dureeSurvenance: values.dureeSurvenance,\r\n          commentaire: values.commentaire,\r\n          crd: values.crd,\r\n          montantRegler: values.montantRegler,\r\n          natureSinistre: values.typeSinistre,\r\n          nbrEcheanceImpaye: values.nbrEcheanceImpayees,\r\n          numeroCompte: values.numeroCompte,\r\n          reglementPartiel: values.reglementPartiel,\r\n          tauxInvalidite: values.tauxInvalidite,\r\n          modeReglement: values.modeReglement,\r\n          exclusion: values.exclusion,\r\n          numeroSinistre: values.numeroSinistre,\r\n          beneficiaireAgenceBancaire: this.state.agenceBancaire,\r\n          pointVente: values.beneficiaire,\r\n          remplie: true\r\n        };\r\n        this.updatePrestationSinistres(request, this.state.keyRecord);\r\n        this.setState({ remplie: true });\r\n      }\r\n    });\r\n  };\r\n\r\n  async getAllPiece() {\r\n    let response = await getPieceJoint();\r\n    this.setState({\r\n      pieceJointe: response.data.content\r\n    });\r\n  }\r\n\r\n  handleDelete = key => {\r\n    this.deletePrestationSinistre(key);\r\n    const dataSource = [...this.state.data];\r\n    this.setState({ data: dataSource.filter(item => item.key !== key) });\r\n  };\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 11\r\n      },\r\n      wrapperCol: {\r\n        span: 12\r\n      }\r\n    };\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible, visibled } = this.state;\r\n\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          <React.Fragment>\r\n            <div>\r\n              <Modal\r\n                visible={visible}\r\n                title=\"Confirmation\"\r\n                onOk={this.handleOk}\r\n                onCancel={this.handleCancel}\r\n                footer={[\r\n                  <Button key=\"back\" onClick={this.handleCancel}>\r\n                    Non\r\n                  </Button>,\r\n                  <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\r\n                    Oui\r\n                  </Button>\r\n                ]}\r\n              >\r\n                <p>Étes-vous sûre de changer ce statut ?</p>\r\n              </Modal>\r\n              <Modal\r\n                visible={visibled}\r\n                title=\"Motif d'annulation\"\r\n                onOk={this.handleSubmited}\r\n                onCancel={this.handleCancel}\r\n                width=\"600px\"\r\n                footer={[\r\n                  <Button key=\"back\" onClick={this.handleCancel}>\r\n                    Fermer\r\n                  </Button>,\r\n                  <Button\r\n                    key=\"submit\"\r\n                    type=\"primary\"\r\n                    onClick={this.handleSubmited}\r\n                  >\r\n                    Valider\r\n                  </Button>\r\n                ]}\r\n              >\r\n                <Form>\r\n                  <Form.Item label=\"Le motif \">\r\n                    {getFieldDecorator(\"motif\", {\r\n                      rules: [{ message: \"Champs Obligatoire!\" }]\r\n                    })(<TextArea rows={2} />)}\r\n                  </Form.Item>\r\n                </Form>\r\n              </Modal>\r\n              {this.state.remplie === \"A_SIGNER\" ||\r\n              this.state.remplie === \"EN_COURS\" ? (\r\n                <Table\r\n                  rowClassName=\"editable-row\"\r\n                  columns={this.columns}\r\n                  dataSource={this.state.data}\r\n                  pagination={false}\r\n                />\r\n              ) : (\r\n                <Table\r\n                  rowClassName=\"editable-row\"\r\n                  columns={this.columns1}\r\n                  dataSource={this.state.data}\r\n                  pagination={false}\r\n                />\r\n              )}\r\n              {this.state.add ? (\r\n                <div>\r\n                  <Col span={24}>\r\n                    <Divider orientation=\"left\">Données sinistre</Divider>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Form onSubmit={this.handleSubmit}>\r\n                      <Col span={12}>\r\n                        <Form.Item label=\"Date création\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"dateCreation\")(\r\n                            <DatePicker\r\n                              format=\"DD-MM-YYYY\"\r\n                              style={{ width: \"100%\" }}\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"N° de sinistre\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"numeroSinistre\")(\r\n                            <Input className=\"not-rounded\" />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          label=\"Date déclaration sinistre\"\r\n                          {...formItemLayout}\r\n                        >\r\n                          {getFieldDecorator(\"dateDeclarationSinistre\")(\r\n                            <DatePicker\r\n                              format=\"DD-MM-YYYY\"\r\n                              style={{ width: \"100%\" }}\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Exclusion\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"exclusion\")(\r\n                            <Select placeholder=\"Selectionnez ...\">\r\n                              {this.state.exclusions.map(element => {\r\n                                return (\r\n                                  <Option\r\n                                    key={element.id}\r\n                                    value={element.id}\r\n                                    label={element.exclusion}\r\n                                  >\r\n                                    {element.exclusion}\r\n                                  </Option>\r\n                                );\r\n                              })}\r\n                            </Select>\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          label=\"Durée avant survenance\"\r\n                          {...formItemLayout}\r\n                        >\r\n                          {getFieldDecorator(\"dureeSurvenance\")(\r\n                            <Input className=\"not-rounded\" />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Montant à régler\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"montantRegler\")(\r\n                            <Input\r\n                              placeholder=\"0.00 \"\r\n                              className=\"not-rounded\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          label=\"Taux d'invalidité\"\r\n                          {...formItemLayout}\r\n                        >\r\n                          {getFieldDecorator(\"tauxInvalidite\")(\r\n                            <Input\r\n                              placeholder=\"0.00 \"\r\n                              className=\"not-rounded\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          label=\"Réglement partiel\"\r\n                          {...formItemLayout}\r\n                        >\r\n                          {getFieldDecorator(\"reglementPartiel\", {\r\n                            initialValue: \"Non\"\r\n                          })(\r\n                            <Select placeholder=\"Séléctionnez \">\r\n                              <Option value=\"Oui\" label=\"oui\">\r\n                                Oui\r\n                              </Option>\r\n                              <Option value=\"Non\" label=\"non\">\r\n                                Non\r\n                              </Option>\r\n                            </Select>\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Bénéficiaire\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"beneficiaire\")(\r\n                            <Select placeholder=\"Selectionnez ...\">\r\n                              <Option\r\n                                value={beneficiaire.id}\r\n                                label={beneficiaire.libelle}\r\n                              >\r\n                                {beneficiaire.libelle}\r\n                              </Option>\r\n                            </Select>\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={12}>\r\n                        <Form.Item label=\"Type de sinistre\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"typeSinistre\", {\r\n                            initialValue: \"Décès\"\r\n                          })(\r\n                            <Select placeholder=\"Séléctionnez \">\r\n                              <Option value=\"Décès\" label=\"deces\">\r\n                                Décès\r\n                              </Option>\r\n                              <Option\r\n                                value=\"INVALIDITE TOTALE ET DEFINITIVE\"\r\n                                label=\"ITD\"\r\n                              >\r\n                                INVALIDITE TOTALE ET DEFINITIVE\r\n                              </Option>\r\n                            </Select>\r\n                          )}\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                          label=\"Date de survenanve sinistre\"\r\n                          {...formItemLayout}\r\n                        >\r\n                          {getFieldDecorator(\"dateSurvenance\")(\r\n                            <DatePicker\r\n                              format=\"DD-MM-YYYY\"\r\n                              style={{ width: \"100%\" }}\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Cause sinistre\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"causeSinistre\")(\r\n                            <Input className=\"not-rounded\" />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          label=\"Durée avant déclaration\"\r\n                          {...formItemLayout}\r\n                        >\r\n                          {getFieldDecorator(\"dureeDeclaration\")(\r\n                            <Input className=\"not-rounded\" />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"CRD\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"crd\")(\r\n                            <Input\r\n                              placeholder=\"0.00 \"\r\n                              className=\"not-rounded\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          label=\"Nombre d'écheances impayées\"\r\n                          {...formItemLayout}\r\n                        >\r\n                          {getFieldDecorator(\"nbrEcheanceImpayees\")(\r\n                            <Input className=\"not-rounded\" />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item\r\n                          label=\"Mode de réglement\"\r\n                          {...formItemLayout}\r\n                        >\r\n                          {getFieldDecorator(\"modeReglement\", {\r\n                            initialValue: \"Virement\"\r\n                          })(\r\n                            <Select placeholder=\"Séléctionnez \">\r\n                              <Option value=\"Virement\" label=\"virement\">\r\n                                Virement\r\n                              </Option>\r\n                              <Option value=\"Chèque\" label=\"cheque\">\r\n                                Chéque\r\n                              </Option>\r\n                            </Select>\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"N° Compte\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"numeroCompte\")(\r\n                            <Input className=\"not-rounded\" />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"Agence bancaire\" {...formItemLayout}>\r\n                          {getFieldDecorator(\"agenceBancaire\", {\r\n                            valuePropName: \"unchecked\",\r\n                            initialValue: false\r\n                          })(\r\n                            <Radio.Group\r\n                              buttonStyle=\"solid\"\r\n                              defaultValue={true}\r\n                              onChange={this.onChanged}\r\n                            >\r\n                              <Radio.Button value={true}>Oui</Radio.Button>\r\n                              <Radio.Button value={false}>Non</Radio.Button>\r\n                            </Radio.Group>\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={24}>\r\n                        <Divider orientation=\"left\">\r\n                          Pièces justificatives\r\n                        </Divider>\r\n                      </Col>\r\n                      <table id=\"customers\">\r\n                        <tr>\r\n                          <th>Libelle</th>\r\n                          <th>A fournir</th>\r\n                          <th>O/F</th>\r\n                          <th>Reçu</th>\r\n                          <th>Date réception</th>\r\n                        </tr>\r\n                        {this.state.pieceJointe.map(element => {\r\n                          return (\r\n                            <tr key={element.id}>\r\n                              <td>\r\n                                <Form.Item>\r\n                                  {\" \"}\r\n                                  {getFieldDecorator(\"libelle\")(\r\n                                    <label>{element.libelle}</label>\r\n                                  )}\r\n                                </Form.Item>\r\n                              </td>\r\n                              <td>\r\n                                <Form.Item>\r\n                                  {\" \"}\r\n                                  {getFieldDecorator(\"fournir\")(<Checkbox />)}\r\n                                </Form.Item>\r\n                              </td>\r\n                              <td>\r\n                                <Form.Item>\r\n                                  {\" \"}\r\n                                  {getFieldDecorator(\"o/f\")(<label></label>)}\r\n                                </Form.Item>\r\n                              </td>\r\n                              <td>\r\n                                <Form.Item>\r\n                                  {\" \"}\r\n                                  {getFieldDecorator(\"reçu\")(<Checkbox />)}\r\n                                </Form.Item>\r\n                              </td>\r\n                              <td>\r\n                                <Form.Item>\r\n                                  {\" \"}\r\n                                  {getFieldDecorator(\"dateReception\")(\r\n                                    <DatePicker\r\n                                      format=\"DD-MM-YYYY\"\r\n                                      style={{ width: \"100%\" }}\r\n                                    />\r\n                                  )}\r\n                                </Form.Item>\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                      </table>\r\n                      <Col span={14}>\r\n                        <Form.Item label=\"Commentaire\">\r\n                          {getFieldDecorator(\"commentaire\")(\r\n                            <TextArea\r\n                              placeholder=\"Commentaire\"\r\n                              autoSize={{ minRows: 2, maxRows: 6 }}\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n                      <Col span={4} offset={21}>\r\n                        <Form.Item>\r\n                          <Button\r\n                            type=\"primary\"\r\n                            htmlType=\"submit\"\r\n                            className=\"not-rounded\"\r\n                          >\r\n                            <Icon type=\"save\" />\r\n                            Enregistrer\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </Form>\r\n                  </Col>\r\n                </div>\r\n              ) : null}\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(Sinistre);\r\n","import \"antd/dist/antd.css\";\r\nimport { Table } from \"antd\";\r\nimport React from \"react\";\r\nimport { getPrestationRachatTotal } from \"../../../Parametrage/TypePrestation/PrestationAPI\";\r\n\r\nimport { MyContext } from \"../ConsultRetraiteContrat/ConsultRetraiteContrat\";\r\nlet id = \"\";\r\nclass Prestation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      id: \"\",\r\n      expandIconPosition: \"left\"\r\n    };\r\n\r\n    this.columns = [\r\n      {\r\n        title: \"Date de la création\",\r\n        dataIndex: \"creationDate\",\r\n        key: \"creationDate\"\r\n      },\r\n      {\r\n        title: \"Date de depart\",\r\n        dataIndex: \"dateDepart\",\r\n        key: \"dateDepart\"\r\n      },\r\n      {\r\n        title: \"Montant Brut de Rachat Total\",\r\n        dataIndex: \"montantBrutRachatTotal\",\r\n        key: \"montantBrutRachatTotal\"\r\n      },\r\n      {\r\n        title: \"Montant Net de Rachat Total\",\r\n        dataIndex: \"montantNetRachatTotal\",\r\n        key: \"montantNetRachatTotal\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateData(id);\r\n  }\r\n\r\n  async updateData(id) {\r\n    const result = await getPrestationRachatTotal(id).then(data => data);\r\n    this.setState({\r\n      data: result.data\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <MyContext.Consumer>\r\n        {context => (\r\n          (id = context.state.id),\r\n          (\r\n            <React.Fragment>\r\n              <div>\r\n                <Table\r\n                  columns={this.columns}\r\n                  dataSource={this.state.data}\r\n                  pagination={{\r\n                    defaultCurrent: 1,\r\n                    defaultPageSize: 5\r\n                  }}\r\n                ></Table>\r\n              </div>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </MyContext.Consumer>\r\n    );\r\n  }\r\n}\r\nPrestation.contextType = MyContext;\r\nexport default Prestation;\r\n","import \"antd/dist/antd.css\";\r\nimport { Button, Card, Drawer } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport Avenants from \"../DetailsTabs/Avenants\";\r\nimport Contrats from \"../DetailsTabs/Contrats\";\r\nimport General from \"../DetailsTabs/General\";\r\nimport Produits from \"../DetailsTabs/Produits\";\r\nimport Sinistre from \"../DetailsTabs/Sinistre\";\r\nimport Prestation from \"../DetailsTabs/Prestation\";\r\nimport { MyContext } from \"./ConsultRetraiteContrat\";\r\n\r\nconst tabListNoTitle = [\r\n  {\r\n    key: \"general\",\r\n    tab: \"Général\"\r\n  },\r\n  {\r\n    key: \"contrat\",\r\n    tab: \"Contrat\"\r\n  },\r\n  {\r\n    key: \"produit\",\r\n    tab: \"Produit\"\r\n  },\r\n  {\r\n    key: \"avenant\",\r\n    tab: \"Avenant(s)\"\r\n  },\r\n  {\r\n    key: \"prestation\",\r\n    tab: \"Prestation\"\r\n  }\r\n];\r\n\r\nclass DetailsRetraiteContrat extends Component {\r\n  state = {\r\n    key: \"general\",\r\n    noTitleKey: \"general\",\r\n    visible: false\r\n  };\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  contentListNoTitle = {\r\n    general: <General />,\r\n    contrat: <Contrats />,\r\n    produit: <Produits />,\r\n    avenant: <Avenants />,\r\n    sinistre: <Sinistre />,\r\n    prestation: <Prestation />\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Consumer>\r\n          {context => (\r\n            <React.Fragment>\r\n              <a\r\n                href=\"#top\"\r\n                type=\"primary\"\r\n                shape=\"circle\"\r\n                icon=\"edit\"\r\n                size=\"small\"\r\n                onClick={this.showDrawer}\r\n              >\r\n                {context.state.numeroContrat}\r\n              </a>\r\n              <Drawer\r\n                title={\r\n                  <div style={{ fontSize: \"18px\" }}>\r\n                    Détails du Contrat : {context.state.numeroContrat}\r\n                  </div>\r\n                }\r\n                width={1000}\r\n                onClose={this.onClose}\r\n                visible={this.state.visible}\r\n                bodyStyle={{ paddingBottom: 80 }}\r\n              >\r\n                <Card\r\n                  tabList={tabListNoTitle}\r\n                  activeTabKey={this.state.noTitleKey}\r\n                  onTabChange={key => {\r\n                    this.onTabChange(key, \"noTitleKey\");\r\n                  }}\r\n                >\r\n                  {this.contentListNoTitle[this.state.noTitleKey]}\r\n                </Card>\r\n                <div className=\"submit-cancel\">\r\n                  <Button\r\n                    type=\"primary\"\r\n                    className=\"not-rounded\"\r\n                    onClick={this.onClose}\r\n                  >\r\n                    Fermer\r\n                  </Button>\r\n                </div>\r\n              </Drawer>\r\n            </React.Fragment>\r\n          )}\r\n        </MyContext.Consumer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default DetailsRetraiteContrat;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Descriptions,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Modal,\r\n  notification,\r\n  Row,\r\n  Select,\r\n  Table\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../../util/Title/ComponentTitle\";\r\nimport DetailsRetraiteContrat from \"./DetailsRetraiteContrat\";\r\nimport { getTarification } from \"../../../Parametrage/ProduitDeces/ProduitDecesAPI\";\r\nimport {\r\n  addAvenantRetrait,\r\n  getCodeTypeAvenantById,\r\n  getTypeAvenant\r\n} from \"../../../Parametrage/avenant/AvenantAPI\";\r\nimport {\r\n  addBeneficiaire,\r\n  getBeneficiaireById,\r\n  getRetraiteContrat,\r\n  searchRetraitContrat,\r\n  updateRetraiteContratStatus\r\n} from \"../../ContratsAPI\";\r\nimport { ajoutPrestationRachatTotal } from \"../../../Parametrage/TypePrestation/PrestationAPI\";\r\nimport { getColumnSearchProps } from \"../../../Parametrage/ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nimport { getCotisationById } from \"../../../TableauBord/CotisationAPI\";\r\nexport const MyContext = React.createContext();\r\nvar statuts = \"ACCEPTED\";\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nvar typeProduit = \"\";\r\nclass ConsultRetraiteContrat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      visibled: false,\r\n      show: false,\r\n      avenantOneShow: false,\r\n      avenantTwoShow: false,\r\n      avenantFourShow: false,\r\n      avenantFiveShow: false,\r\n      avenantOne: false,\r\n      avenantTwo: false,\r\n      avenantFour: false,\r\n      avenantFive: false,\r\n      showed: false,\r\n      sinistre: false,\r\n      restitution: false,\r\n      dateCreation: new Date(),\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      selectedRowKeys: [],\r\n      searchby: \"numeroContrat\",\r\n      searchfor: \"\",\r\n      selectedFile: null,\r\n      record: {},\r\n      contrats: [],\r\n      totalItems: 0,\r\n      pagenumber: 1,\r\n      value: \"\",\r\n      differe: null,\r\n      dateEcheance: \"\",\r\n      duree: null,\r\n      keyRecord: \"\",\r\n      capital: null,\r\n      tauxSurprime: null,\r\n      tauxReduction: null,\r\n      tauxTaxe: null,\r\n      tarification: {},\r\n      montantSurprime: null,\r\n      montantCotisation: null,\r\n      cotisationTotale: null,\r\n      montantTaxe: null,\r\n      prorata: null,\r\n      typeAvenant: [],\r\n      periodicite: \"\",\r\n      ajouterBenef: false,\r\n      modifierBenef: false,\r\n      supprimerBenef: false,\r\n      beneficiareAModifierId: \"\",\r\n      beneficiareAModifier: {},\r\n      beneficiareASupprimerId: \"\",\r\n      beneficiareASupprimer: {},\r\n      contratPrestation: {},\r\n      rachatTotalVisible: false,\r\n      rachatPartielVisible: false,\r\n      rachatTotal: false,\r\n      rachatPartiel: false,\r\n      liquidation: false,\r\n      avance: false,\r\n      montantCotisationBrut: 0,\r\n      aSimuler: false\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"N° de Contrat\",\r\n        dataIndex: \"id\",\r\n        key: \"idContrat\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <div>\r\n                <MyContext.Provider\r\n                  value={{\r\n                    state: record\r\n                  }}\r\n                >\r\n                  <DetailsRetraiteContrat />\r\n                </MyContext.Provider>\r\n              </div>\r\n            </span>\r\n          );\r\n        }\r\n      },\r\n      {\r\n        title: \"Durée Contrat\",\r\n        dataIndex: \"dureeContrat\",\r\n        key: \"dureeContrat\",\r\n        ...getColumnSearchProps(\"dureeContrat\", \"Durée contrat\", this)\r\n      },\r\n      {\r\n        title: \"Nom assuré\",\r\n        dataIndex: \"assure.nom\",\r\n        key: \"nomAssure\",\r\n        ...getColumnSearchProps(\"assure.nom\", \"Nom assure\", this)\r\n      },\r\n      {\r\n        title: \"Prénom assuré\",\r\n        dataIndex: \"assure.prenom\",\r\n        key: \"prenomAssure\"\r\n      },\r\n      {\r\n        title: \"Nom souscripteur\",\r\n        dataIndex: \"souscripteur.nom\",\r\n        key: \"nomSouscripteur\",\r\n        ...getColumnSearchProps(\"souscripteur.nom\", \"Nom souscripteur\", this)\r\n      },\r\n      {\r\n        title: \"Prénom souscripteur\",\r\n        dataIndex: \"souscripteur.prenom\",\r\n        key: \"prenomSouscripteur\"\r\n      },\r\n\r\n      {\r\n        title: \"Date d'effet\",\r\n        dataIndex: \"dateEffet\",\r\n        key: \"dateEffet\"\r\n      },\r\n      {\r\n        title: \"Date écheance\",\r\n        dataIndex: \"dateEcheance\",\r\n        key: \"dateEcheance\"\r\n      },\r\n      {\r\n        title: \"Produit\",\r\n        dataIndex: \"produit.libelle\",\r\n        key: \"produit\"\r\n      },\r\n      {\r\n        title: \"Action\",\r\n        dataIndex: \"operation\",\r\n        width: \"22%\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleSelectChange(record)}\r\n                size=\"small\"\r\n                style={{\r\n                  borderRadius: \"0px\",\r\n                  width: \"105px\",\r\n                  backgroundColor: \"rgb(236 131 91)\",\r\n                  borderColor: \"rgb(236 131 91)\",\r\n                  textAlign: \"left\",\r\n                  marginBottom: \"2px\"\r\n                }}\r\n              >\r\n                <Icon type=\"plus-circle\" /> Avenant\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleChangePrestation(record)}\r\n                size=\"small\"\r\n                style={{\r\n                  borderRadius: \"0px\",\r\n                  width: \"105px\",\r\n                  backgroundColor: \"#4ee289\",\r\n                  borderColor: \"#4ee289\",\r\n                  textAlign: \"left\"\r\n                }}\r\n              >\r\n                <Icon type=\"plus-circle\" /> Prestation\r\n              </Button>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n    this.typeAvenants = [\r\n      {\r\n        id: \"11\",\r\n        code: \"AVN01\",\r\n        libelle:\r\n          \"La modification de la périodicité de versement de la contribution\"\r\n      },\r\n      {\r\n        id: \"2\",\r\n        code: \"AVN02\",\r\n        libelle: \"La modification du montant de la contribution périodique\"\r\n      },\r\n      {\r\n        id: \"4\",\r\n        code: \"AVN04\",\r\n        libelle:\r\n          \"La modification du bénéficiaire du contrat par un autre bénéficiaire\"\r\n      },\r\n      {\r\n        id: \"5\",\r\n        code: \"AVN05\",\r\n        libelle: \"La modification du la durée du contrat\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  async getTariffication(capital, differe) {\r\n    const age = moment().diff(\r\n      moment(this.state.record.assure.dateNaissance),\r\n      \"years\"\r\n    );\r\n    const duree = this.state.duree;\r\n    typeProduit = this.state.record.produit.produitType;\r\n    let response = await getTarification(\r\n      duree,\r\n      age,\r\n      capital,\r\n      differe,\r\n      typeProduit,\r\n      this.state.record.produit.id\r\n    );\r\n    this.setState({ tarification: response.data });\r\n  }\r\n\r\n  handleChanged = value => {\r\n    if (value === \"Rachat total\") {\r\n      this.setState({\r\n        rachatTotal: true,\r\n        rachatPartiel: false,\r\n        liquidation: false,\r\n        avance: false\r\n      });\r\n    } else if (value === \"Rachat partiel\") {\r\n      this.setState({\r\n        rachatTotal: false,\r\n        rachatPartiel: true,\r\n        liquidation: false,\r\n        avance: false\r\n      });\r\n    } else if (value === \"Liquidation\") {\r\n      this.setState({\r\n        rachatTotal: false,\r\n        rachatPartiel: false,\r\n        liquidation: true,\r\n        avance: false\r\n      });\r\n    } else if (value === \"Avance\") {\r\n      this.setState({\r\n        rachatTotal: false,\r\n        rachatPartiel: false,\r\n        liquidation: false,\r\n        avance: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleChangeBenefAction = value => {\r\n    if (value === \"Ajouter\") {\r\n      this.setState(\r\n        {\r\n          ajouterBenef: true,\r\n          modifierBenef: false,\r\n          supprimerBenef: false,\r\n          beneficiareAModifier: {},\r\n          beneficiareASupprimer: {},\r\n          beneficiareAModifierId: \"\",\r\n          beneficiareASupprimerId: \"\"\r\n        },\r\n        () => {\r\n          this.props.form.setFieldsValue({\r\n            nomBeneficiaire: \"\",\r\n            prenomBeneficiaire: \"\",\r\n            ribBeneficiaire: \"\"\r\n          });\r\n        }\r\n      );\r\n    } else if (value === \"Modifier\") {\r\n      this.setState({\r\n        ajouterBenef: false,\r\n        modifierBenef: true,\r\n        supprimerBenef: false,\r\n        beneficiareAModifier: {},\r\n        beneficiareASupprimer: {},\r\n        beneficiareAModifierId: \"\",\r\n        beneficiareASupprimerId: \"\"\r\n      });\r\n    } else {\r\n      this.setState({\r\n        ajouterBenef: false,\r\n        modifierBenef: false,\r\n        supprimerBenef: true\r\n      });\r\n    }\r\n  };\r\n\r\n  handleBenefeciairesToEditChange = async value => {\r\n    const request = await getBeneficiaireById(value);\r\n    this.setState(\r\n      {\r\n        beneficiareAModifier: request.data,\r\n        beneficiareAModifierId: value\r\n      },\r\n      () => {\r\n        this.props.form.setFieldsValue({\r\n          nomBeneficiaire: this.state.beneficiareAModifier.nom,\r\n          prenomBeneficiaire: this.state.beneficiareAModifier.prenom,\r\n          ribBeneficiaire: this.state.beneficiareAModifier.rib,\r\n          cinBeneficiaire: this.state.beneficiareAModifier.cin\r\n        });\r\n      }\r\n    );\r\n  };\r\n\r\n  addBeneficiaireImpl = async (data, model) => {\r\n    const request = await addBeneficiaire(data);\r\n    model.beneficiaireEnDeces.push(request.data);\r\n  };\r\n\r\n  handleBenefeciairesToDelete = async value => {\r\n    const request = await getBeneficiaireById(value);\r\n    this.setState({\r\n      beneficiareASupprimer: request.data,\r\n      beneficiareASupprimerId: value\r\n    });\r\n  };\r\n\r\n  handleChange = id => {\r\n    if (id === \"11\") {\r\n      this.setState(\r\n        {\r\n          show: true,\r\n          avenantOneShow: true,\r\n          avenantOne: true,\r\n          avenantTwoShow: false,\r\n          avenantTwo: false,\r\n          avenantFour: false,\r\n          avenantFourShow: false,\r\n          avenantFiveShow: false,\r\n          avenantFive: false,\r\n          beneficiareAModifier: {},\r\n          beneficiareASupprimer: {},\r\n          beneficiareAModifierId: \"\",\r\n          beneficiareASupprimerId: \"\"\r\n        },\r\n        () => {\r\n          this.props.form.setFieldsValue({\r\n            periodicite: this.state.record.periodicite.libelle,\r\n            periodicites: this.state.record.produit.periodicite,\r\n            nombrePeriodicite: this.state.record.nombrePeriodicite\r\n          });\r\n        }\r\n      );\r\n    } else if (id === \"2\") {\r\n      this.setState(\r\n        {\r\n          show: false,\r\n          avenantOneShow: false,\r\n          avenantTwoShow: true,\r\n          avenantFiveShow: false,\r\n          avenantFour: false,\r\n          avenantFourShow: false,\r\n          avenantOne: false,\r\n          avenantTwo: true,\r\n          avenantFive: false,\r\n          beneficiareAModifier: {},\r\n          beneficiareASupprimer: {},\r\n          beneficiareAModifierId: \"\",\r\n          beneficiareASupprimerId: \"\"\r\n        },\r\n        () => {\r\n          this.props.form.setFieldsValue({\r\n            montantContributionPeriodique: this.state.record\r\n              .montantContributionPeriodique,\r\n            nouveauMontantContributionPeriodique: this.state.record\r\n              .montantContributionPeriodique\r\n          });\r\n        }\r\n      );\r\n    } else if (id === \"4\") {\r\n      this.setState({\r\n        show: false,\r\n        avenantTwoShow: false,\r\n        avenantOneShow: false,\r\n        avenantFiveShow: false,\r\n        avenantOne: false,\r\n        avenantTwo: false,\r\n        avenantFive: false,\r\n        avenantFour: true,\r\n        avenantFourShow: true\r\n      });\r\n    } else if (id === \"5\") {\r\n      this.setState(\r\n        {\r\n          show: false,\r\n          avenantTwoShow: false,\r\n          avenantOneShow: false,\r\n          avenantFiveShow: true,\r\n          avenantOne: false,\r\n          avenantTwo: false,\r\n          avenantFive: true,\r\n          avenantFour: false,\r\n          avenantFourShow: false,\r\n          beneficiareAModifier: {},\r\n          beneficiareASupprimer: {},\r\n          beneficiareAModifierId: \"\",\r\n          beneficiareASupprimerId: \"\"\r\n        },\r\n        () => {\r\n          this.props.form.setFieldsValue({\r\n            dureeContrat: this.state.record.dureeContrat,\r\n            nouveauDureeContrat: this.state.record.dureeContrat\r\n          });\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getproprties(statuts, this.state.pagenumber - 1, 3);\r\n    this.getTypeAvenants();\r\n  }\r\n\r\n  async getproprties(statut, page, limit) {\r\n    let contratsResponse = await getRetraiteContrat(statut, page, limit);\r\n    this.setState({\r\n      contrats: [...contratsResponse.data.content],\r\n      totalItems: contratsResponse.data.totalElements\r\n    });\r\n  }\r\n\r\n  handleSelectChange = value => {\r\n    this.setState({\r\n      visible: true,\r\n      record: value\r\n    });\r\n    this.setState({\r\n      deductibiliteFiscale: value.deductibiliteFiscale,\r\n      souscripteurIsAssure: value.souscripteurIsAssure,\r\n      attributionIrrevocable: value.attributionIrrevocable,\r\n      tauxRedubenificiareCasDecesction: value.benificiareCasDeces,\r\n      montantContributionInitiale: value.montantContributionInitiale,\r\n      montantContributionPeriodique: value.montantContributionPeriodique,\r\n      beneficiaireEnDeces: value.beneficiaireEnDeces,\r\n      nombrePeriodicite: value.nombrePeriodicite,\r\n      periodicite: value.periodicite.id,\r\n      montantCotisation: value.montantCotisation\r\n    });\r\n  };\r\n\r\n  handleChangePrestation = value => {\r\n    this.setState({\r\n      visibled: true,\r\n      dateEcheance: value.dateEcheance,\r\n      keyRecord: value.id,\r\n      contratPrestation: value,\r\n      rachatTotalVisible: value.produit.rachatTotal,\r\n      rachatPartielVisible: value.produit.rachatPartiel\r\n    });\r\n    this.setState({ visibled: true, dateEcheance: value.dateEcheance });\r\n  };\r\n\r\n  handleConfirm = (value, key, values) => {\r\n    notification.close(key);\r\n    this.updatedContrat(this.state.record.id, value);\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  componentDidUpdate(_, prevState) {\r\n    const date = moment(this.state.record.dateEffet, \"DD/MM/YYYY\");\r\n    const effetMonth = date.format(\"M\");\r\n    const effet = date.format(\"D\");\r\n    if (this.state.show) {\r\n      if (\r\n        this.state.capital !== prevState.capital ||\r\n        (this.state.differe !== prevState.differe &&\r\n          this.state.capital !== \"\" &&\r\n          this.state.differe !== \"\" &&\r\n          this.state.differe !== null &&\r\n          this.state.capital !== null)\r\n      ) {\r\n        this.getTariffication(this.state.capital, this.state.differe);\r\n      }\r\n      if (\r\n        prevState.tarification !== this.state.tarification &&\r\n        typeProduit === \"taux\"\r\n      ) {\r\n        const capital = this.props.form.getFieldValue(\"capitalAssure\");\r\n        this.setState({\r\n          montantCotisation: (this.state.tarification.taux * capital) / 100\r\n        });\r\n        this.props.form.setFieldsValue({\r\n          montantCotisation: (this.state.tarification.taux * capital) / 100\r\n        });\r\n      } else if (\r\n        prevState.tarification !== this.state.tarification &&\r\n        typeProduit === \"forfait\"\r\n      ) {\r\n        this.setState({ montantCotisation: this.state.tarification.forfait });\r\n        this.props.form.setFieldsValue({\r\n          montantCotisation: this.state.tarification.forfait\r\n        });\r\n      }\r\n      if (\r\n        prevState.tauxSurprime !== this.state.tauxSurprime &&\r\n        this.state.montantCotisation !== null\r\n      ) {\r\n        this.props.form.setFieldsValue({\r\n          montantSurprime:\r\n            (this.state.tauxSurprime * this.state.montantCotisation) / 100\r\n        });\r\n        this.setState({\r\n          montantSurprime:\r\n            (this.state.tauxSurprime * this.state.montantCotisation) / 100\r\n        });\r\n      }\r\n      if (\r\n        prevState.montantSurprime !== this.state.montantSurprime ||\r\n        this.state.montantCotisation !== prevState.montantCotisation\r\n      ) {\r\n        if (\r\n          this.state.montantSurprime !== null &&\r\n          this.state.montantCotisation !== null\r\n        ) {\r\n          this.props.form.setFieldsValue({\r\n            cotisationTotale:\r\n              this.state.montantSurprime + this.state.montantCotisation\r\n          });\r\n\r\n          this.setState({\r\n            cotisationTotale:\r\n              this.state.montantSurprime + this.state.montantCotisation\r\n          });\r\n        }\r\n      }\r\n      if (prevState.cotisationTotale !== this.state.cotisationTotale) {\r\n        if (\r\n          this.state.cotisationTotale !== null &&\r\n          this.state.record.periodicite.libelle !== \"Unique\"\r\n        ) {\r\n          if (effet <= 15) {\r\n            this.props.form.setFieldsValue({\r\n              prorata: this.state.cotisationTotale * ((13 - effetMonth) / 12)\r\n            });\r\n            this.setState({\r\n              prorata: this.state.cotisationTotale * ((13 - effetMonth) / 12)\r\n            });\r\n          } else {\r\n            this.props.form.setFieldsValue({\r\n              prorata: this.state.cotisationTotale * ((12 - effetMonth) / 12)\r\n            });\r\n            this.setState({\r\n              prorata: this.state.cotisationTotale * ((12 - effetMonth) / 12)\r\n            });\r\n          }\r\n        }\r\n      }\r\n      if (\r\n        prevState.prorata !== this.state.prorata &&\r\n        this.state.tauxTaxe !== null\r\n      ) {\r\n        this.props.form.setFieldsValue({\r\n          montantTaxe: (this.state.prorata * this.state.tauxTaxe) / 100\r\n        });\r\n        this.setState({\r\n          montantTaxe: (this.state.prorata * this.state.tauxTaxe) / 100\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  async searchContrats(page, limit, searchby, searchfor) {\r\n    let contratResponse = await searchRetraitContrat(\r\n      page,\r\n      limit,\r\n      searchby,\r\n      searchfor\r\n    );\r\n    if (searchby === \"cin\" || searchby === \"nom\") {\r\n      this.setState({\r\n        contrats: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.numberOfElements\r\n      });\r\n    } else if (searchby === \"numeroContrat\") {\r\n      this.setState({\r\n        contrats: [...contratResponse.data.content],\r\n        totalItems: contratResponse.data.totalElements\r\n      });\r\n    }\r\n  }\r\n\r\n  async getTypeAvenants() {\r\n    let response = await getTypeAvenant();\r\n    this.setState({\r\n      typeAvenant: response.data.content\r\n    });\r\n  }\r\n\r\n  async getCodeById(id) {\r\n    return getCodeTypeAvenantById(id);\r\n  }\r\n\r\n  onChangeNombrePeriodicite = e => {\r\n    this.setState({ nombrePeriodicite: e.target.value });\r\n  };\r\n\r\n  onChangeContributionPeriodique = e => {\r\n    this.setState({ montantContributionPeriodique: e.target.value });\r\n  };\r\n\r\n  onChangeDureeContrat = e => {\r\n    this.setState({ dureeContrat: e.target.value });\r\n  };\r\n\r\n  onPaginationChange = (pagenumber, pagesize) => {\r\n    if (this.state.searchfor === \"\")\r\n      this.getproprties(statuts, pagenumber - 1, 3);\r\n    else {\r\n      this.searchContrats(\r\n        pagenumber - 1,\r\n        3,\r\n        this.state.searchby,\r\n        this.state.searchfor\r\n      );\r\n    }\r\n  };\r\n\r\n  selectBefore = (\r\n    <Select\r\n      onChange={value => this.setState({ searchby: value })}\r\n      defaultValue=\"numContrat\"\r\n      style={{ width: 150 }}\r\n    >\r\n      <Option value=\"numContrat\">N° de contrat</Option>\r\n      <Option value=\"cin\">CIN</Option>\r\n      <Option value=\"nom\">Nom Assuré</Option>\r\n    </Select>\r\n  );\r\n\r\n  search = value => {\r\n    this.setState({ pagenumber: 1, searchfor: value });\r\n    this.searchContrats(\r\n      this.state.pagenumber - 1,\r\n      2,\r\n      this.state.searchby,\r\n      value\r\n    );\r\n  };\r\n\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.form.setFieldsValue({\r\n      avenants: \"\"\r\n    });\r\n    this.setState({\r\n      show: false,\r\n      avenantTwoShow: false,\r\n      avenantOneShow: false,\r\n      avenantFiveShow: false,\r\n      avenantFourShow: false,\r\n      ajouterBenef: false,\r\n      modifierBenef: false,\r\n      supprimerBenef: false,\r\n      beneficiareAModifier: {},\r\n      beneficiareASupprimer: {},\r\n      beneficiareAModifierId: \"\",\r\n      beneficiareASupprimerId: \"\"\r\n    });\r\n  };\r\n\r\n  handleClosed = () => {\r\n    this.setState({\r\n      showed: false,\r\n      sinistre: false,\r\n      restitution: false,\r\n      aSimuler: false,\r\n      montantCotisationBrut: 0\r\n    });\r\n  };\r\n\r\n  handleCanceled = () => {\r\n    this.props.form.setFieldsValue({\r\n      typePrestation: \" Séléctionnez \"\r\n    });\r\n    this.setState({\r\n      visibled: false,\r\n      rachatPartiel: false,\r\n      rachatTotal: false,\r\n      liquidation: false,\r\n      avance: false,\r\n      montantCotisationBrut: 0\r\n    });\r\n  };\r\n\r\n  async updatedContrat(id, body) {\r\n    await addAvenantRetrait(id, body);\r\n  }\r\n\r\n  async updatedContratStatus(id, body) {\r\n    await updateRetraiteContratStatus(id, body);\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        if (this.state.avenantOne) {\r\n          let request = this.state.record;\r\n          request.nombrePeriodicite = values.nouveauNombrePeriodicite;\r\n          request.periodicite.id = this.state.periodicite.key;\r\n          request.typeAvenantId = values.avenants;\r\n          const close = () => {};\r\n          const key = `open${Date.now()}`;\r\n          const btn = (\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleConfirm(request, key)}\r\n                className=\"not-rounded\"\r\n              >\r\n                Confirmer\r\n              </Button>\r\n              <Button\r\n                onClick={() => notification.close(key)}\r\n                style={{ marginLeft: 8 }}\r\n                className=\"not-rounded\"\r\n              >\r\n                Fermer\r\n              </Button>\r\n            </div>\r\n          );\r\n          notification.info({\r\n            message: \"Confirmation\",\r\n            description: (\r\n              <div>\r\n                <Divider />\r\n                <Descriptions bordered>\r\n                  <Descriptions.Item label=\"Nombre de periodicite\">\r\n                    {this.state.nombrePeriodicite}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Periodicite\" span={2}>\r\n                    {this.state.periodicite.label}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n              </div>\r\n            ),\r\n            btn,\r\n            key,\r\n            onClose: close,\r\n            style: {\r\n              width: 880,\r\n              marginLeft: 335 - 1280\r\n            },\r\n            duration: 0\r\n          });\r\n        } else if (this.state.avenantTwo) {\r\n          let request = this.state.record;\r\n          request.montantContributionPeriodique = this.state.montantContributionPeriodique;\r\n          request.typeAvenantId = values.avenants;\r\n          const key = `open${Date.now()}`;\r\n          const btn = (\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleConfirm(request, key)}\r\n                className=\"not-rounded\"\r\n              >\r\n                Confirmer\r\n              </Button>\r\n              <Button\r\n                onClick={() => notification.close(key)}\r\n                style={{ marginLeft: 8 }}\r\n                className=\"not-rounded\"\r\n              >\r\n                Fermer\r\n              </Button>\r\n            </div>\r\n          );\r\n          notification.info({\r\n            message: \"Confirmation\",\r\n            description: (\r\n              <div>\r\n                <Divider />\r\n                <Descriptions bordered>\r\n                  <Descriptions.Item label=\"Montant de la contribution periodique\">\r\n                    {this.state.montantContributionPeriodique}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n              </div>\r\n            ),\r\n            btn,\r\n            key,\r\n            style: {\r\n              width: 880,\r\n              marginLeft: 335 - 1280\r\n            },\r\n            duration: 0\r\n          });\r\n        } else if (this.state.avenantFour) {\r\n          let request = this.state.record;\r\n          if (this.state.ajouterBenef) {\r\n            const beneficiareToAdd = {\r\n              nom: values.nomBeneficiaire,\r\n              prenom: values.prenomBeneficiaire,\r\n              rib: values.ribBeneficiaire,\r\n              cin: values.cinBeneficiaire\r\n            };\r\n            this.addBeneficiaireImpl(beneficiareToAdd, request);\r\n          }\r\n          request.typeAvenantId = values.avenants;\r\n          const key = `open${Date.now()}`;\r\n          const btn = (\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleConfirm(request, key, values)}\r\n                className=\"not-rounded\"\r\n              >\r\n                Confirmer\r\n              </Button>\r\n              <Button\r\n                onClick={() => notification.close(key)}\r\n                style={{ marginLeft: 8 }}\r\n                className=\"not-rounded\"\r\n              >\r\n                Fermer\r\n              </Button>\r\n            </div>\r\n          );\r\n          notification.info({\r\n            message: \"Confirmation\",\r\n            description: (\r\n              <div>\r\n                <Divider />\r\n                <h2>Bénéficiaire à ajouter :</h2>\r\n                <Descriptions bordered>\r\n                  <Descriptions.Item label=\"Prenom :\" span={3}>\r\n                    {values.prenomBeneficiaire}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"Nom :\" span={3}>\r\n                    {values.nomBeneficiaire}\r\n                  </Descriptions.Item>\r\n                  <Descriptions.Item label=\"RIB :\" span={3}>\r\n                    {values.ribBeneficiaire}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n              </div>\r\n            ),\r\n            btn,\r\n            key,\r\n            style: {\r\n              width: 880,\r\n              marginLeft: 335 - 1280\r\n            },\r\n            duration: 0\r\n          });\r\n        } else if (this.state.avenantFive) {\r\n          let request = this.state.record;\r\n          request.dureeContrat = this.state.dureeContrat;\r\n          request.typeAvenantId = values.avenants;\r\n          const key = `open${Date.now()}`;\r\n          const btn = (\r\n            <div>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => this.handleConfirm(request, key)}\r\n                className=\"not-rounded\"\r\n              >\r\n                Confirmer\r\n              </Button>\r\n              <Button\r\n                onClick={() => notification.close(key)}\r\n                style={{ marginLeft: 8 }}\r\n                className=\"not-rounded\"\r\n              >\r\n                Fermer\r\n              </Button>\r\n            </div>\r\n          );\r\n          notification.info({\r\n            message: \"Confirmation\",\r\n            description: (\r\n              <div>\r\n                <Divider />\r\n                <Descriptions bordered>\r\n                  <Descriptions.Item label=\"Duree du contrat\">\r\n                    {this.state.dureeContrat}\r\n                  </Descriptions.Item>\r\n                </Descriptions>\r\n              </div>\r\n            ),\r\n            btn,\r\n            key,\r\n            style: {\r\n              width: 880,\r\n              marginLeft: 335 - 1280\r\n            },\r\n            duration: 0\r\n          });\r\n        }\r\n      }\r\n    });\r\n  };\r\n  handleSimulation = async e => {\r\n    let total = 0;\r\n    const result = await (await getCotisationById(this.state.keyRecord)).data;\r\n    result.forEach(o => {\r\n      if (o.solde === 0) {\r\n        total = total + o.montantCotisation;\r\n      }\r\n    });\r\n    this.setState({\r\n      montantCotisationBrut: total,\r\n      aSimuler: true\r\n    });\r\n  };\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        let requestmodel = {\r\n          contratId: this.state.keyRecord,\r\n          dateDepart: moment(values.dateDepart, \"DD/MM/YYYY\"),\r\n          ir: 0,\r\n          montantBrutRachatTotal: this.state.montantCotisationBrut,\r\n          montantNetRachatTotal: this.state.montantCotisationBrut\r\n        };\r\n        this.setState({ visibled: false, rachatTotalVisible: false });\r\n        ajoutPrestationRachatTotal(requestmodel)\r\n          .then(response => {\r\n            notification.success({\r\n              message: \"TAKAFUL\",\r\n              description: \"L'insertion est bien faite\"\r\n            });\r\n            this.props.record.history.push(\"/consultRetraiteContrat\");\r\n          })\r\n          .catch(error => {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description:\r\n                error.message ||\r\n                \"Sorry! Something went wrong. Please try again!\"\r\n            });\r\n          });\r\n      }\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible, visibled } = this.state;\r\n    const beneficiaireEnDeces = this.state.record.beneficiaireEnDeces;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 14 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Gestion des contrats\" />\r\n        <div style={{ marginBottom: 16 }}>\r\n          <Search\r\n            placeholder=\"Entrez le text de recherche\"\r\n            addonBefore={this.selectBefore}\r\n            onSearch={value => this.search(value)}\r\n            enterButton\r\n            style={{ width: 600 }}\r\n          />\r\n        </div>\r\n        <Table\r\n          bordered\r\n          rowClassName=\"editable-row\"\r\n          columns={this.columns}\r\n          dataSource={this.state.contrats}\r\n          pagination={{\r\n            onChange: this.onPaginationChange,\r\n            pageSize: 3,\r\n            total: this.state.totalItems\r\n          }}\r\n        />\r\n\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Ajouter Avenant\"\r\n          onOk={this.handleSubmit}\r\n          onCancel={this.handleCancel}\r\n          afterClose={this.handleClose}\r\n          style={{ top: 20 }}\r\n          width=\"880px\"\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCancel}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={this.handleSubmit}\r\n              className=\"not-rounded\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Liste des avenants \">\r\n                  {getFieldDecorator(\"avenants\", {\r\n                    rules: [\r\n                      { message: \"Please input the title of collection!\" }\r\n                    ]\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"Sélectionnez \"\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      {this.typeAvenants.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.code}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>{\" \"}\r\n            {this.state.avenantOneShow ? (\r\n              <div>\r\n                <h3>\r\n                  {\" \"}\r\n                  Changement de la périodicité de versement de la contribution\r\n                </h3>\r\n                <Divider />\r\n                <Row>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"Date création\">\r\n                      {getFieldDecorator(\"dateCreation\", {\r\n                        initialValue: moment(\r\n                          this.state.dateCreation,\r\n                          dateFormat\r\n                        )\r\n                      })(<DatePicker format={dateFormat} disabled />)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={11} offset={1}>\r\n                    <Form.Item label=\"N° Avenant\">\r\n                      {getFieldDecorator(\"numeroAvenant\")(\r\n                        <Input className=\"not-rounded\" disabled />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"Ancien Periodicite\">\r\n                      {getFieldDecorator(\"periodicite\")(\r\n                        <Input className=\"not-rounded\" disabled />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n\r\n                  <Col span={11} offset={1}>\r\n                    <Form.Item label=\"Préiodicité\" hasFeedback>\r\n                      {getFieldDecorator(\"nouveauPeriodicite\", {\r\n                        rules: [\r\n                          {\r\n                            required: true\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          onChange={value => {\r\n                            this.setState({ periodicite: value });\r\n                          }}\r\n                          placeholder=\"Choisir une periodicite\"\r\n                          optionLabelProp=\"label\"\r\n                          labelInValue\r\n                        >\r\n                          {this.state.record.produit.periodicites.map(\r\n                            element => {\r\n                              return (\r\n                                <Option\r\n                                  key={element.id}\r\n                                  value={element.id}\r\n                                  label={element.libelle}\r\n                                >\r\n                                  {element.libelle}\r\n                                </Option>\r\n                              );\r\n                            }\r\n                          )}\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"Ancien n°periodicite\">\r\n                      {getFieldDecorator(\"nombrePeriodicite\")(\r\n                        <Input className=\"not-rounded\" disabled />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={11} offset={1}>\r\n                    <Form.Item label=\"n°periodicite\">\r\n                      {getFieldDecorator(\"nouveauNombrePeriodicite\")(\r\n                        <Input\r\n                          className=\"not-rounded\"\r\n                          onChange={this.onChangeNombrePeriodicite}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"Date effet avenant\">\r\n                      {getFieldDecorator(\"dateEffetAvenant\", {\r\n                        initialValue: moment(\r\n                          this.state.dateCreation,\r\n                          dateFormat\r\n                        )\r\n                      })(<DatePicker format={dateFormat} />)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            ) : null}\r\n            {this.state.avenantTwoShow ? (\r\n              <div>\r\n                <h3> Changement du montant de la contribution periodique</h3>\r\n                <Divider />\r\n                <Row>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"Ancien contribution\">\r\n                      {getFieldDecorator(\r\n                        \"montantContributionPeriodique\",\r\n                        {}\r\n                      )(<Input className=\"not-rounded\" disabled />)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={11} offset={1}>\r\n                    <Form.Item label=\"Nouveau contribution\">\r\n                      {getFieldDecorator(\r\n                        \"nouveauMontantContributionPeriodique\"\r\n                      )(\r\n                        <Input\r\n                          className=\"not-rounded\"\r\n                          type=\"number\"\r\n                          onChange={this.onChangeContributionPeriodique}\r\n                          addonAfter=\"DH\"\r\n                          min={this.state.record.produit.montantMinContribution}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            ) : null}\r\n            {this.state.avenantFourShow ? (\r\n              <div>\r\n                <h3>La modification du bénéficiaire du contrat</h3>\r\n                <Divider />\r\n                <Row>\r\n                  <Select\r\n                    placeholder=\"Séléctionnez une action\"\r\n                    onChange={this.handleChangeBenefAction}\r\n                    style={{ width: \"45%\" }}\r\n                  >\r\n                    <Option value=\"Ajouter\" label=\"ajouter\">\r\n                      Ajouter\r\n                    </Option>\r\n                    <Option value=\"Modifier\" label=\"modifier\">\r\n                      Modifier\r\n                    </Option>\r\n                  </Select>\r\n                </Row>\r\n                <Divider />\r\n                <Row>\r\n                  {this.state.ajouterBenef ? (\r\n                    <div>\r\n                      <h3>Ajouter un nouveau bénéficiaire</h3>\r\n                      <Col span={11}>\r\n                        <Form.Item label=\"cin\">\r\n                          {getFieldDecorator(\"cinBeneficiaire\", {\r\n                            rules: [\r\n                              {\r\n                                required: true,\r\n                                message: \"Entrer le cin\"\r\n                              }\r\n                            ]\r\n                          })(\r\n                            <Input\r\n                              className=\"not-rounded\"\r\n                              placeholder={\"CIN du bénéficiare\"}\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"nom\">\r\n                          {getFieldDecorator(\"nomBeneficiaire\", {\r\n                            rules: [\r\n                              {\r\n                                required: true,\r\n                                message: \"Entrer le nom\"\r\n                              }\r\n                            ]\r\n                          })(\r\n                            <Input\r\n                              className=\"not-rounded\"\r\n                              placeholder={\"Nom du bénéficiare\"}\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"prenom\">\r\n                          {getFieldDecorator(\"prenomBeneficiaire\", {\r\n                            rules: [\r\n                              {\r\n                                required: true,\r\n                                message: \"Entrer le prenom\"\r\n                              }\r\n                            ]\r\n                          })(\r\n                            <Input\r\n                              className=\"not-rounded\"\r\n                              placeholder={\"Prenom du bénéficiare\"}\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                        <Form.Item label=\"rib\">\r\n                          {getFieldDecorator(\r\n                            \"ribBeneficiaire\",\r\n                            {}\r\n                          )(\r\n                            <Input\r\n                              className=\"not-rounded\"\r\n                              placeholder={\"RIB du bénéficiare\"}\r\n                              type=\"number\"\r\n                            />\r\n                          )}\r\n                        </Form.Item>\r\n                      </Col>\r\n                    </div>\r\n                  ) : null}\r\n                  {this.state.modifierBenef ? (\r\n                    <div>\r\n                      <h3>Modifier un bénéficiaire</h3>\r\n                      <Select\r\n                        placeholder=\"Séléctionnez le bénéficiaire à modifier\"\r\n                        onChange={this.handleBenefeciairesToEditChange}\r\n                        style={{ width: \"45%\" }}\r\n                      >\r\n                        {beneficiaireEnDeces.map(b => {\r\n                          return (\r\n                            <Option key={b.id} value={b.id} label={b.nom}>\r\n                              {b.nom + \" \" + b.prenom}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                      <Divider />\r\n                      <Row>\r\n                        <Col span={11}>\r\n                          <Form.Item label=\"cin\">\r\n                            {getFieldDecorator(\"cinBeneficiaire\", {\r\n                              rules: [\r\n                                {\r\n                                  required: true,\r\n                                  message: \"Entrer le cin\"\r\n                                }\r\n                              ]\r\n                            })(\r\n                              <Input\r\n                                className=\"not-rounded\"\r\n                                placeholder={\"CIN du bénéficiare\"}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"nom\">\r\n                            {getFieldDecorator(\"nomBeneficiaire\", {\r\n                              rules: [\r\n                                {\r\n                                  required: true,\r\n                                  message: \"Entrer le nom\"\r\n                                }\r\n                              ]\r\n                            })(\r\n                              <Input\r\n                                className=\"not-rounded\"\r\n                                placeholder={\"Nom du bénéficiare\"}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"prenom\">\r\n                            {getFieldDecorator(\"prenomBeneficiaire\", {\r\n                              rules: [\r\n                                {\r\n                                  required: true,\r\n                                  message: \"Entrer le prenom\"\r\n                                }\r\n                              ]\r\n                            })(\r\n                              <Input\r\n                                className=\"not-rounded\"\r\n                                placeholder={\"Prenom du bénéficiare\"}\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                          <Form.Item label=\"rib\">\r\n                            {getFieldDecorator(\r\n                              \"ribBeneficiaire\",\r\n                              {}\r\n                            )(\r\n                              <Input\r\n                                className=\"not-rounded\"\r\n                                placeholder={\"RIB du bénéficiare\"}\r\n                                type=\"number\"\r\n                              />\r\n                            )}\r\n                          </Form.Item>\r\n                        </Col>\r\n                      </Row>\r\n                    </div>\r\n                  ) : null}\r\n                  {this.state.supprimerBenef ? (\r\n                    <div>\r\n                      <h3>Supprimer un bénéficiaire</h3>\r\n                      <Select\r\n                        placeholder=\"Séléctionnez le bénéficiaire à supprimer\"\r\n                        onChange={this.handleBenefeciairesToDelete}\r\n                        style={{ width: \"45%\" }}\r\n                      >\r\n                        {beneficiaireEnDeces.map(b => {\r\n                          return (\r\n                            <Option key={b.id} value={b.id} label={b.nom}>\r\n                              {b.nom + \" \" + b.prenom}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                      <Divider />\r\n                      <Row>\r\n                        <Descriptions bordered>\r\n                          <Descriptions.Item label=\"Nom\">\r\n                            {this.state.beneficiareASupprimer.nom}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Prenom\" span={2}>\r\n                            {this.state.beneficiareASupprimer.prenom}\r\n                          </Descriptions.Item>\r\n                          <Descriptions.Item label=\"Rib\" span={2}>\r\n                            {this.state.beneficiareASupprimer.rib}\r\n                          </Descriptions.Item>\r\n                        </Descriptions>\r\n                      </Row>\r\n                    </div>\r\n                  ) : null}\r\n                </Row>\r\n              </div>\r\n            ) : null}\r\n            {this.state.avenantFiveShow ? (\r\n              <div>\r\n                <h3>La modification du la durée du contrat</h3>\r\n                <Divider />\r\n                <Row>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"Ancien durée\">\r\n                      {getFieldDecorator(\r\n                        \"dureeContrat\",\r\n                        {}\r\n                      )(\r\n                        <Input\r\n                          className=\"not-rounded\"\r\n                          disabled\r\n                          addonAfter=\"Mois\"\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={11} offset={1}>\r\n                    <Form.Item label=\"Nouveau duree\">\r\n                      {getFieldDecorator(\"nouveauDureeContrat\")(\r\n                        <Input\r\n                          className=\"not-rounded\"\r\n                          type=\"number\"\r\n                          onChange={this.onChangeDureeContrat}\r\n                          addonAfter=\"Mois\"\r\n                          min={\r\n                            this.state.record.produit.dureeMinimalSouscription\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            ) : null}\r\n          </Form>\r\n        </Modal>\r\n        <Modal\r\n          visible={visibled}\r\n          title=\"Veuillez saisir les informations de la prestation\"\r\n          onOk={this.handleSubmited}\r\n          onCancel={this.handleCanceled}\r\n          afterClose={this.handleClosed}\r\n          style={{ top: 20 }}\r\n          width=\"900px\"\r\n          footer={[\r\n            <Button\r\n              key=\"simuler\"\r\n              type=\"link\"\r\n              onClick={this.handleSimulation}\r\n              className=\"not-rounded\"\r\n            >\r\n              Simuler\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={this.handleSubmited}\r\n              className=\"not-rounded\"\r\n              disabled={!this.state.aSimuler}\r\n            >\r\n              Ajouter\r\n            </Button>,\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCanceled}\r\n              className=\"not-rounded\"\r\n            >\r\n              Fermer\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout}>\r\n            <Row>\r\n              <Col span={16} offset={6}>\r\n                <Form.Item>\r\n                  {getFieldDecorator(\"typePrestation\")(\r\n                    <Select\r\n                      placeholder=\"Séléctionnez \"\r\n                      onChange={this.handleChanged}\r\n                    >\r\n                      {this.state.rachatTotalVisible ? (\r\n                        <Option value=\"Rachat total\" label=\"Rachat total\">\r\n                          Rachat total\r\n                        </Option>\r\n                      ) : null}\r\n\r\n                      {this.state.rachatPartielVisible ? (\r\n                        <Option value=\"Rachat partiel\" label=\"Rachat total\">\r\n                          Rachat partiel\r\n                        </Option>\r\n                      ) : null}\r\n\r\n                      <Option value=\"Liquidation\" label=\"Liquidation\">\r\n                        Liquidation\r\n                      </Option>\r\n                      <Option value=\"Avance\" label=\"Avance\">\r\n                        Avance\r\n                      </Option>\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            {this.state.rachatTotal ? (\r\n              <div>\r\n                <h3> AJOUT PRESTATION RACHAT TOTAL</h3>\r\n                <Divider />\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Date Prestation\">\r\n                      {getFieldDecorator(\"datePrestation\", {\r\n                        initialValue: moment(\r\n                          this.state.dateCreation,\r\n                          dateFormat\r\n                        )\r\n                      })(\r\n                        <DatePicker\r\n                          format={dateFormat}\r\n                          style={{ width: \"60%\" }}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Date Départ\">\r\n                      {getFieldDecorator(\"dateDepart\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Date de départ est obligatoire\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <DatePicker\r\n                          format={dateFormat}\r\n                          style={{ width: \"60%\" }}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Mode de Paiement\">\r\n                      {getFieldDecorator(\"modeReglement\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            message: \"Mode de virement est obligatoire\"\r\n                          }\r\n                        ]\r\n                      })(\r\n                        <Select\r\n                          placeholder=\"Séléctionnez \"\r\n                          style={{ width: \"60%\" }}\r\n                        >\r\n                          <Option value=\"Virement\" label=\"Virement\">\r\n                            Virement\r\n                          </Option>\r\n                        </Select>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Banque\">\r\n                      {getFieldDecorator(\"banque\", {\r\n                        initialValue: this.state.contratPrestation.produit\r\n                          .partenaire.raisonSocial\r\n                      })(\r\n                        <Input style={{ width: \"60%\" }} type=\"text\" disabled />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"N° de compte bancaire\">\r\n                      {getFieldDecorator(\"compteBancaire\", {\r\n                        initialValue: this.state.contratPrestation.produit\r\n                          .partenaire.numeroCompte\r\n                      })(\r\n                        <Input style={{ width: \"60%\" }} type=\"text\" disabled />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Divider />\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Montant rachat brut à la date du jour\">\r\n                      <Input\r\n                        style={{ width: \"60%\" }}\r\n                        type=\"number\"\r\n                        value={this.state.montantCotisationBrut}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"IR\">\r\n                      {getFieldDecorator(\"ir\", { initialValue: 0 })(\r\n                        <Input\r\n                          style={{ width: \"60%\" }}\r\n                          type=\"number\"\r\n                          disabled\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col span={22} offset={2}>\r\n                    <Form.Item label=\"Montant rachat net à la date du jour\">\r\n                      <Input\r\n                        style={{ width: \"60%\" }}\r\n                        type=\"number\"\r\n                        value={this.state.montantCotisationBrut}\r\n                      />\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            ) : null}\r\n            {this.state.restitution ? (\r\n              <div>\r\n                <h3> AJOUT restitution</h3>\r\n                <Divider />\r\n              </div>\r\n            ) : null}\r\n          </Form>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(ConsultRetraiteContrat);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  InputNumber,\r\n  notification,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { createPersonneMorale } from \"../../../../../Participants/ParticipantAPI\";\r\nimport { getAllVille } from \"../../../../../../util/VillesAPI\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddPerMorale extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      villes: [],\r\n      visible: false,\r\n      pays: \"\",\r\n      ville: \"\",\r\n      vois: \"\",\r\n      complement: \"\",\r\n      numero: \"\",\r\n      adresscomplet: \"\"\r\n    };\r\n  }\r\n\r\n  async getAllVilles() {\r\n    let responseVille = await getAllVille();\r\n    this.setState({ villes: responseVille.data });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllVilles();\r\n  }\r\n\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        values.typePersonneMorale = { id: values.typePersonneMorale };\r\n        values.secteurActivite = { id: values.secteurActivite };\r\n        this.createPersonMorale(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  async createPersonMorale(model) {\r\n    try {\r\n      let response = await createPersonneMorale(model);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"personne bien ajoute\"\r\n        });\r\n        this.props.personCreation(response.data);\r\n      }\r\n    } catch (error) {\r\n      this.onClose();\r\n      console.log(error);\r\n      if (error.response.data.message === \"souscripteur already exists\") {\r\n        notification.error({\r\n          message: \"une personne et deja inscrit avec la meme patente .\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangeVille = value => {\r\n    this.setState({\r\n      ville: value,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        {this.props.titre === \"Création d'un nouveau Participant\" ? (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.showDrawer}\r\n            style={{ borderRadius: \"0px\", marginBottom: \"10px\" }}\r\n            className=\"nouveau-btn\"\r\n          >\r\n            <Icon type=\"user-add\" /> Nouveau participant\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"#77cc6d\", borderColor: \"#77cc6d\" }}\r\n            shape=\"circle\"\r\n            icon=\"plus\"\r\n            onClick={this.showDrawer}\r\n          />\r\n        )}\r\n        <Drawer\r\n          title={this.props.titre}\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Raison sociale\">\r\n                  {getFieldDecorator(\"raisonSociale\", {\r\n                    rules: [\r\n                      { required: true, message: \"Tapez la Raison Sociale\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez la Raison Sociale\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Abréviation\">\r\n                  {getFieldDecorator(\"abb\", {\r\n                    rules: [{ required: true, message: \"Tapez l abb\" }]\r\n                  })(\r\n                    <Input className=\"not-rounded\" placeholder=\"Tapez l abb\" />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Siège social\">\r\n                  {getFieldDecorator(\"Siegesociale\", {\r\n                    rules: [\r\n                      { required: true, message: \"Tapez le siège social\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le siège social\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°de Patente\">\r\n                  {getFieldDecorator(\"patente\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Svp entré patente\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez patente\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N°ice\">\r\n                  {getFieldDecorator(\"ice\", {\r\n                    rules: [{ required: true, message: \"Tapez le N°ice\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le N°ice\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code\">\r\n                  {getFieldDecorator(\"code\", {\r\n                    rules: [{ required: true, message: \"Tapez le code\" }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le code\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Type personne morale\">\r\n                  {getFieldDecorator(\"typePersonneMorale\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez un type personne morale\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Type personne morale\">\r\n                      {this.props.typePersonneMoral.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.id}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Secteur d'activité\">\r\n                  {getFieldDecorator(\"secteurActivite\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez le secteur d'activité\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Sélectionnez le secteur d'activité\">\r\n                      {this.props.secteurActivite.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.id}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Téléphone\">\r\n                  {getFieldDecorator(\"numeroDeTelephone\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(\"^[0][5-7]{1}[0-9]{8}$\"),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Numero de telephone\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <h4>Adress :</h4>\r\n                <Divider></Divider>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Pays\">\r\n                  {getFieldDecorator(\"adressPays\", {\r\n                    rules: [{ required: true, message: \"selecte un pays\" }]\r\n                  })(<Input />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Ville\">\r\n                  {getFieldDecorator(\"adressVille\", {\r\n                    rules: [{ required: true, message: \"selecte une ville\" }]\r\n                  })(\r\n                    <Select placeholder=\"Villes\" onChange={this.onChangeVille}>\r\n                      {this.state.villes.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.name}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Vois\">\r\n                  {getFieldDecorator(\"adressVois\", {\r\n                    rules: [{ required: true, message: \"selecte une vois\" }]\r\n                  })(\r\n                    <Select placeholder=\"Vois\">\r\n                      {this.props.vois.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Postal\">\r\n                  {getFieldDecorator(\"adressCodePostal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Code Postal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Numero\">\r\n                  {getFieldDecorator(\"adressNumero\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Numero\"\r\n                      onChange={this.onChangeNumero}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Complement\">\r\n                  {getFieldDecorator(\"adressComplement\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le un complement\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Adress Complete\">\r\n                  {getFieldDecorator(\"adressComplete\")(\r\n                    <Input\r\n                      value={this.state.adresscomplet}\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                width: \"100%\",\r\n                borderTop: \"1px solid #e9e9e9\",\r\n                padding: \"10px 16px\",\r\n                background: \"#fff\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Annuler\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Enregistrer\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddPerMorale);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Drawer,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  InputNumber,\r\n  notification,\r\n  Radio,\r\n  Row,\r\n  Select,\r\n  AutoComplete\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { createPersonnePhysique } from \"../../../../../Participants/ParticipantAPI\";\r\nimport { getAllVille } from \"../../../../../../util/VillesAPI\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddSouscripteur extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { visible: false, villes: [] };\r\n  }\r\n  async getAllVilles() {\r\n    let responseVille = await getAllVille();\r\n    let helpArray = [];\r\n    responseVille.data.forEach(element => {\r\n      const object = element.name;\r\n      helpArray.push(object);\r\n    });\r\n    this.setState({ villes: helpArray });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllVilles();\r\n  }\r\n  showDrawer = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  onClose = () => {\r\n    this.setState({\r\n      visible: false\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        values.dateNaissance = values.dateNaissance.format(\"DD-MM-YYYY\");\r\n        values.adressVille = values.adressVille.label;\r\n        this.createPersonnePhysique(values);\r\n      }\r\n    });\r\n  };\r\n  onChangeVille = value => {\r\n    console.log(value);\r\n    this.setState({\r\n      ville: value.label,\r\n      adresscomplet:\r\n        this.state.vois +\r\n        \" \" +\r\n        this.state.complement +\r\n        \" \" +\r\n        this.state.numero +\r\n        \" \" +\r\n        this.state.ville +\r\n        \" \" +\r\n        this.state.pays\r\n    });\r\n  };\r\n\r\n  async createPersonnePhysique(model) {\r\n    try {\r\n      let response = await createPersonnePhysique(model);\r\n\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"personne bien ajoute\"\r\n        });\r\n        this.props.personCreation(response.data);\r\n      }\r\n    } catch (error) {\r\n      this.onClose();\r\n\r\n      if (error.response.data.message === \"souscripteur already exists\") {\r\n        notification.error({\r\n          message: \"une personne et deja inscrit avec le meme cin .\"\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <div>\r\n        {this.props.titre === \"Création d'un nouveau Participant\" ? (\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={this.showDrawer}\r\n            style={{ borderRadius: \"0px\", marginBottom: \"10px\" }}\r\n            className=\"nouveau-btn\"\r\n          >\r\n            <Icon type=\"user-add\" /> Nouveau participant\r\n          </Button>\r\n        ) : (\r\n          <Button\r\n            type=\"primary\"\r\n            style={{ backgroundColor: \"#77cc6d\", borderColor: \"#77cc6d\" }}\r\n            shape=\"circle\"\r\n            icon=\"plus\"\r\n            onClick={this.showDrawer}\r\n          />\r\n        )}\r\n\r\n        <Drawer\r\n          title={this.props.titre}\r\n          width={720}\r\n          onClose={this.onClose}\r\n          visible={this.state.visible}\r\n          bodyStyle={{ paddingBottom: 80 }}\r\n        >\r\n          <Form layout=\"vertical\" hideRequiredMark onSubmit={this.handleSubmit}>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prospect\">\r\n                  {getFieldDecorator(\"isProspect\", {\r\n                    valuePropName: \"checked\",\r\n                    initialValue: true\r\n                  })(\r\n                    <Radio.Group buttonStyle=\"solid\" defaultValue={true}>\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Prénom\">\r\n                  {getFieldDecorator(\"prenom\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le prénom de souscripteur\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le prénom de souscripteur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nom\">\r\n                  {getFieldDecorator(\"nom\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Tapez le prénom de souscripteur\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Tapez le nom de souscripteur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"CIN\">\r\n                  {getFieldDecorator(\"cin\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Svp entré votre CIN!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le CIN de souscripteur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Date de naissance\" hasFeedback>\r\n                  {getFieldDecorator(\"dateNaissance\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"entre la date de naissance\"\r\n                      }\r\n                    ]\r\n                  })(<DatePicker></DatePicker>)}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Matricule\">\r\n                  {getFieldDecorator(\"matricule\", {\r\n                    rules: [{ required: false }]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      placeholder=\"Tapez le matricule de souscripteur\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Profession\">\r\n                  {getFieldDecorator(\"profession\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez une profession\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Profession\">\r\n                      {this.props.professions.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.libelle}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Situation familiale \">\r\n                  {getFieldDecorator(\"situationFamiliale\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Sélectionnez une Situation familiale\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Select placeholder=\"Situation familiale\">\r\n                      {this.props.setuation.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Sexe\">\r\n                  {getFieldDecorator(\"sexe\", {\r\n                    rules: [{ required: true, message: \"Sélectionnez le sexe\" }]\r\n                  })(\r\n                    <Select placeholder=\"Sélectionnez le sexe\">\r\n                      {this.props.sexe.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nationalité\">\r\n                  {getFieldDecorator(\"nationalite\", {\r\n                    rules: [\r\n                      { required: true, message: \"Entrez une Nationalité\" }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Entrez une Nationalité\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Nombre d'enfants\">\r\n                  {getFieldDecorator(\"nombreEnfants\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le nombre d'enfants\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"RIB\">\r\n                  {getFieldDecorator(\"rib\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"RIB\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Téléphone\">\r\n                  {getFieldDecorator(\"numeroDeTelephone\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(\"^[0][5-7]{1}[0-9]{8}$\"),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"Numero de telephone\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"N° Tiers\">\r\n                  {getFieldDecorator(\"numTiers\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"N° Tiers\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <h4>Adress :</h4>\r\n                <Divider></Divider>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Pays\">\r\n                  {getFieldDecorator(\"adressPays\", {\r\n                    rules: [{ required: true, message: \"selecte un pays\" }]\r\n                  })(<Input />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Ville\">\r\n                  {getFieldDecorator(\"adressVille\", {\r\n                    rules: [{ required: true, message: \"selecte une ville\" }]\r\n                  })(\r\n                    <AutoComplete\r\n                      size=\"default\"\r\n                      dataSource={this.state.villes}\r\n                      onSelect={this.onChangeVille}\r\n                      allowClear={false}\r\n                      labelInValue\r\n                      placeholder=\"ajouter une ville\"\r\n                      filterOption={(inputValue, option) =>\r\n                        option.props.children\r\n                          .toUpperCase()\r\n                          .indexOf(inputValue.toUpperCase()) !== -1\r\n                      }\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Vois\">\r\n                  {getFieldDecorator(\"adressVois\", {\r\n                    rules: [{ required: true, message: \"selecte une vois\" }]\r\n                  })(\r\n                    <Select placeholder=\"Vois\">\r\n                      {this.props.vois.map(element => {\r\n                        return (\r\n                          <Option key={element.id} value={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Code Postal\">\r\n                  {getFieldDecorator(\"adressCodePostal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Code Postal\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Numero\">\r\n                  {getFieldDecorator(\"adressNumero\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide !\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <InputNumber\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le Numero\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label=\"Complement\">\r\n                  {getFieldDecorator(\"adressComplement\")(\r\n                    <Input\r\n                      className=\"not-rounded\"\r\n                      style={{ width: \"100%\" }}\r\n                      placeholder=\"entrez le un complement\"\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={16}>\r\n              <Col span={24}>\r\n                <Form.Item label=\"Adress Complete\">\r\n                  {getFieldDecorator(\"adressComplete\")(\r\n                    <Input className=\"not-rounded\" style={{ width: \"100%\" }} />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <div\r\n              style={{\r\n                position: \"absolute\",\r\n                right: 0,\r\n                bottom: 0,\r\n                width: \"100%\",\r\n                borderTop: \"1px solid #e9e9e9\",\r\n                padding: \"10px 16px\",\r\n                background: \"#fff\",\r\n                textAlign: \"right\"\r\n              }}\r\n            >\r\n              <Button\r\n                className=\"not-rounded\"\r\n                onClick={this.onClose}\r\n                style={{ marginRight: 8 }}\r\n              >\r\n                Annuler\r\n              </Button>\r\n              <Button className=\"not-rounded\" type=\"primary\" htmlType=\"submit\">\r\n                Enregistrer\r\n              </Button>\r\n            </div>\r\n          </Form>\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AddSouscripteur);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  AutoComplete,\r\n  Checkbox,\r\n  Col,\r\n  Descriptions,\r\n  Divider,\r\n  Empty,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Radio,\r\n  Row\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../../../util/Title/ComponentTitle\";\r\nimport AddPerMorale from \"./AddPerMorale/AddPerMorale\";\r\nimport AddSouscripteur from \"./AddPerPhysique/AddSouscripteur\";\r\nimport {\r\n  ajoutProfession,\r\n  createPersonneMorale,\r\n  createPersonnePhysique,\r\n  getallperson,\r\n  getallPersonMorale,\r\n  getAllSecteurActivite,\r\n  getAllTypePersonneMorales,\r\n  getProfession,\r\n  getSetuation,\r\n  getSexe,\r\n  getVois\r\n} from \"../../../../Participants/ParticipantAPI\";\r\nimport { getConsumeDataByCodeClientOrRefDossier } from \"../../../ContratsAPI\";\r\nimport { PERSONNE_MORALE, PERSONNE_PHYSIQUE } from \"../../../../../constants\";\r\nconst { Option } = AutoComplete;\r\nclass StepOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      moraleOuPhysique: this.props.moraleOuPhysique.value,\r\n      souscripteur: this.props.souscripteur.value,\r\n      permorale: false,\r\n      perphysique: false,\r\n      sexe: [],\r\n      assure: this.props.assure.value,\r\n      setuations: [],\r\n      professions: [],\r\n      vois: [],\r\n      dataloaded: false,\r\n      personlist: [],\r\n      personlistForAuto: [],\r\n      selectedPatente: [],\r\n      selectedCinSouscripteur: [],\r\n      selectedCinAsuree: [],\r\n      assurePresent: this.props.assurePresent.value,\r\n      typePersonneMoral: [],\r\n      secteurActivite: [],\r\n      personMoraleList: [],\r\n      personMoraleListForAuto: [],\r\n      souscripteurIsAssure: this.props.souscripteurIsAssure.value,\r\n      disableSouscripteuretAssure: this.props.souscripteurIsAssure.value,\r\n      dossierFinnancementForAuto: [],\r\n      selectedRefDossier: []\r\n    };\r\n    this.handleChangeCinSouscripteur = this.handleChangeCinSouscripteur.bind(\r\n      this\r\n    );\r\n    this.clearAutocompleteFields = this.clearAutocompleteFields.bind(this);\r\n  }\r\n\r\n  async getproprties() {\r\n    let vois = await getVois();\r\n    let personslist = await getallperson();\r\n    let gander = await getSexe();\r\n    let setuation = await getSetuation();\r\n    let profrssionResponse = await getProfession();\r\n    let personsMoraleListResponse = await getallPersonMorale();\r\n    let typePersonneMoraleResponse = await getAllTypePersonneMorales();\r\n    let secteurActiviteResponse = await getAllSecteurActivite();\r\n\r\n    let helpArray = [];\r\n    let refDossierFinancement = [];\r\n\r\n    personslist.data.content.forEach(element => {\r\n      const object = element.cin;\r\n      helpArray.push(object);\r\n    });\r\n    let helpArraymorale = [];\r\n    personsMoraleListResponse.data.content.forEach(element => {\r\n      const object = element.patente;\r\n      helpArraymorale.push(object);\r\n    });\r\n    this.setState({\r\n      personMoraleList: [...personsMoraleListResponse.data.content],\r\n      sexe: [...gander.data],\r\n      setuations: [...setuation.data],\r\n      vois: [...vois.data],\r\n      dataloaded: true,\r\n      professions: [...profrssionResponse.data.content],\r\n      personlist: [...personslist.data.content],\r\n      personlistForAuto: [...helpArray],\r\n      dossierFinnancementForAuto: [...refDossierFinancement],\r\n      personMoraleListForAuto: [...helpArraymorale],\r\n      typePersonneMoral: [...typePersonneMoraleResponse.data],\r\n      secteurActivite: [...secteurActiviteResponse.data.content]\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getproprties();\r\n  }\r\n\r\n  searchPersonnemorale = value => {\r\n    const dataSource = [...this.state.personMoraleList];\r\n    this.setState({\r\n      souscripteur: dataSource.filter(item => item.patente === value.key)[0],\r\n      patente: value.key\r\n    });\r\n  };\r\n\r\n  searchPersonnePhysique = value => {\r\n    console.log(\r\n      \"souscripteuuuuur\",\r\n      this.state.personlist.filter(item => item.cin === value.key)[0]\r\n    );\r\n\r\n    const dataSource = [...this.state.personlist];\r\n    if (dataSource != null) {\r\n      this.setState({\r\n        souscripteur: dataSource.filter(item => item.cin === value.key)[0],\r\n        cin: value.key\r\n      });\r\n      console.log(\"souscripteur\", this.state.souscripteur);\r\n    }\r\n  };\r\n\r\n  onChangeSelect = value => {\r\n    const dataSource = [...this.state.personlist];\r\n    this.setState({\r\n      assurePresent: true,\r\n      assure: dataSource.filter(item => item.cin === value.key)[0]\r\n    });\r\n  };\r\n\r\n  handleSabmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll();\r\n  };\r\n\r\n  handleChangeCinSouscripteur(value) {\r\n    this.setState({ selectedCinSouscripteur: value });\r\n  }\r\n\r\n  handleChangeRefDossier(value) {\r\n    this.setState({ selectedRefDossier: value });\r\n  }\r\n\r\n  clearAutocompleteFields() {\r\n    this.props.form.setFieldsValue({\r\n      patente: \"\",\r\n      cin: \"\",\r\n      cinAssure: \"\",\r\n      numeroDossierFinancement: \"\"\r\n    });\r\n  }\r\n\r\n  handlePersonphyCreationSousctipteur = data => {\r\n    this.setState({ souscripteur: data, perphysique: true, permorale: false });\r\n    this.props.form.setFieldsValue({\r\n      cin: { key: data.cin, label: data.cin }\r\n    });\r\n  };\r\n\r\n  handlePersonMoraleCreationSousctipteur = data => {\r\n    this.setState({ souscripteur: data, permorale: true, perphysique: false });\r\n    this.props.form.setFieldsValue({\r\n      patente: { key: data.patente, label: data.patente }\r\n    });\r\n  };\r\n\r\n  handlePersonphyCreationAssure = data => {\r\n    let list = [...this.state.personlist];\r\n    list.push(data);\r\n    this.setState({ assure: data, assurePresent: true, personlist: [...list] });\r\n    this.props.form.setFieldsValue({\r\n      assure: { key: data.cin, label: data.cin }\r\n    });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    this.props.check(\r\n      this.state.souscripteurIsAssure,\r\n      this.state.souscripteurIsAssure || this.state.assurePresent,\r\n      this.state.souscripteur !== \"\",\r\n      this.state.souscripteur,\r\n      this.state.assure\r\n    );\r\n  }\r\n\r\n  handlechange = e => {\r\n    this.setState({\r\n      moraleOuPhysique: e.target.value,\r\n      souscripteur: \"\",\r\n      assure: \"\",\r\n      souscripteurIsAssure: \"\",\r\n      disableSouscripteuretAssure: \"\"\r\n    });\r\n    this.clearAutocompleteFields();\r\n  };\r\n\r\n  onChange = e => {\r\n    if (this.state.moraleOuPhysique === \"physique\" && e.target.checked) {\r\n      this.setState({\r\n        assure: this.state.souscripteur,\r\n        souscripteurIsAssure: true,\r\n        disableSouscripteuretAssure: true\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        assure: {\r\n          key: this.state.souscripteur.cin,\r\n          label: this.state.souscripteur.cin\r\n        },\r\n        cinAssure: this.state.selectedCinSouscripteur\r\n      });\r\n    } else\r\n      this.setState({\r\n        souscripteurIsAssure: false,\r\n        disableSouscripteuretAssure: false\r\n      });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Row>\r\n        <Col offset={1} span={23}>\r\n          <ComponentTitle level={4} title=\"Le souscripteur\" />\r\n          <Form layout=\"inline\" onSubmit={this.handleSabmit} id=\"formadd\">\r\n            <div style={{ minHeight: \"200px\" }}>\r\n              <Row>\r\n                <Col span={8}>\r\n                  <Col span={24}>\r\n                    <Form.Item>\r\n                      {getFieldDecorator(\"moraleOuPhysique\", {\r\n                        rules: [{ required: false }],\r\n                        initialValue: this.state.moraleOuPhysique\r\n                      })(\r\n                        <Radio.Group\r\n                          style={{ marginBottom: 25 }}\r\n                          buttonStyle=\"solid\"\r\n                          defaultValue={this.state.moraleOuPhysique}\r\n                          onChange={this.handlechange}\r\n                        >\r\n                          <Radio.Button value=\"morale\">\r\n                            Personne morale\r\n                          </Radio.Button>\r\n                          <Radio.Button value=\"physique\">\r\n                            Personne physique\r\n                          </Radio.Button>\r\n                        </Radio.Group>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    {this.state.moraleOuPhysique === \"physique\" && (\r\n                      <Form.Item label=\"CIN\">\r\n                        {getFieldDecorator(\"cin\", {\r\n                          rules: [\r\n                            { required: true, message: \"CIN is required!\" }\r\n                          ]\r\n                        })(\r\n                          <AutoComplete\r\n                            disabled={this.state.disableSouscripteuretAssure}\r\n                            defaultActiveFirstOption\r\n                            size=\"default\"\r\n                            style={{ width: 200 }}\r\n                            dataSource={this.state.personlistForAuto}\r\n                            onSelect={this.searchPersonnePhysique}\r\n                            allowClear={true}\r\n                            value={this.state.selectedCinSouscripteur}\r\n                            onChange={this.handleChangeCinSouscripteur}\r\n                            labelInValue\r\n                            placeholder=\"CIN\"\r\n                            filterOption={(inputValue, option) =>\r\n                              option.props.children\r\n                                .toUpperCase()\r\n                                .indexOf(inputValue.toUpperCase()) !== -1\r\n                            }\r\n                          />\r\n                        )}\r\n                      </Form.Item>\r\n                    )}\r\n                    {this.state.moraleOuPhysique === \"morale\" && (\r\n                      <Form.Item label=\"Patente\">\r\n                        {getFieldDecorator(\"patente\", {\r\n                          rules: [\r\n                            { required: true, message: \"patente is required!\" }\r\n                          ]\r\n                        })(\r\n                          <AutoComplete\r\n                            size=\"default\"\r\n                            className=\"not-rounded\"\r\n                            style={{ width: 182 }} // 192 pc bureau\r\n                            dataSource={this.state.personMoraleListForAuto}\r\n                            onSelect={this.searchPersonnemorale}\r\n                            allowClear={true}\r\n                            labelInValue\r\n                            placeholder=\"Numéro de patente\"\r\n                            filterOption={(inputValue, option) =>\r\n                              option.props.children\r\n                                .toUpperCase()\r\n                                .indexOf(inputValue.toUpperCase()) !== -1\r\n                            }\r\n                          />\r\n                        )}\r\n                      </Form.Item>\r\n                    )}\r\n                    <Form.Item style={{ float: \"right\" }}>\r\n                      {this.state.dataloaded &&\r\n                        this.state.moraleOuPhysique === \"physique\" && (\r\n                          <AddSouscripteur\r\n                            titre=\"Création d'un nouveau souscripteur physique\"\r\n                            personCreation={\r\n                              this.handlePersonphyCreationSousctipteur\r\n                            }\r\n                            professions={this.state.professions}\r\n                            sexe={this.state.sexe}\r\n                            setuation={this.state.setuations}\r\n                            vois={this.state.vois}\r\n                          />\r\n                        )}\r\n                      {this.state.dataloaded &&\r\n                        this.state.moraleOuPhysique === \"morale\" && (\r\n                          <AddPerMorale\r\n                            titre=\"Création d'un nouveau souscripteur morale\"\r\n                            personCreation={\r\n                              this.handlePersonMoraleCreationSousctipteur\r\n                            }\r\n                            typePersonneMoral={this.state.typePersonneMoral}\r\n                            secteurActivite={this.state.secteurActivite}\r\n                            vois={this.state.vois}\r\n                          />\r\n                        )}\r\n                    </Form.Item>\r\n                    {this.state.moraleOuPhysique === \"physique\" && (\r\n                      <Checkbox\r\n                        style={{ marginTop: \"10px\" }}\r\n                        onChange={this.onChange}\r\n                        checked={this.state.souscripteurIsAssure}\r\n                        disabled={!this.state.moraleOuPhysique === \"physique\"}\r\n                      >\r\n                        Le souscripteur est l&apos;assuré lui même ?\r\n                      </Checkbox>\r\n                    )}\r\n                    <Divider style={{ marginTop: \"20px\" }}></Divider>\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <Form.Item label=\"N° Dossier de financement/Id Client\">\r\n                      {getFieldDecorator(\"numeroDossierFinancement\")(\r\n                        <Input placeholder=\"N° Dossier de financement\"></Input>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </Col>\r\n                <Col offset={1} span={14}>\r\n                  {this.state.moraleOuPhysique === \"physique\" &&\r\n                    this.state.souscripteur !== \"\" && (\r\n                      <Descriptions\r\n                        size=\"small\"\r\n                        column={2}\r\n                        bordered={true}\r\n                        title=\"Informations du souscripteur physique\"\r\n                      >\r\n                        <Descriptions.Item label=\"Prénom\">\r\n                          {this.state.souscripteur.prenom}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Nom\">\r\n                          {this.state.souscripteur.nom}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Date de naissance\">\r\n                          {this.state.souscripteur.dateNaissance}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Sexe\">\r\n                          {this.state.souscripteur.sexe}{\" \"}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"CIN\">\r\n                          {this.state.souscripteur.cin}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Nombre d'enfants\">\r\n                          {this.state.souscripteur.nombreEnfants}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Ville\">\r\n                          {this.state.souscripteur.adressVille}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"RIB\">\r\n                          {this.state.souscripteur.rib}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Matricule\">\r\n                          {this.state.souscripteur.matricule}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"N° Tiers\">\r\n                          {this.state.souscripteur.numTiers}\r\n                        </Descriptions.Item>\r\n                      </Descriptions>\r\n                    )}\r\n\r\n                  {this.state.souscripteur === \"\" && (\r\n                    <Empty\r\n                      description=\"Merci de mentionner le numéro de patente ou cin\"\r\n                      style={{\r\n                        margin: \"3% auto\",\r\n                        color: \"rgba(0, 0, 0, 0.45)\"\r\n                      }}\r\n                    />\r\n                  )}\r\n                  {this.state.moraleOuPhysique === \"morale\" &&\r\n                    this.state.souscripteur !== \"\" && (\r\n                      <Descriptions\r\n                        size=\"small\"\r\n                        column={2}\r\n                        bordered={true}\r\n                        title=\"Informations du souscripteur morale\"\r\n                      >\r\n                        <Descriptions.Item label=\"Abb\">\r\n                          {this.state.souscripteur.abb}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Raison sociale\">\r\n                          {this.state.souscripteur.raisonSociale}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Patente\">\r\n                          {this.state.souscripteur.patente}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Ice\">\r\n                          {this.state.souscripteur.ice}\r\n                        </Descriptions.Item>\r\n                        <Descriptions.Item label=\"Code\">\r\n                          {this.state.souscripteur.code}\r\n                        </Descriptions.Item>\r\n                      </Descriptions>\r\n                    )}\r\n                </Col>\r\n                <Col offset={1} span={1}></Col>\r\n              </Row>\r\n            </div>\r\n            <div style={{ minHeight: \"200px\" }}>\r\n              <Row style={{ marginTop: \"20px\" }}>\r\n                <ComponentTitle level={4} title=\"L'assuré\" />\r\n                <Col span={8}>\r\n                  <Col span={24}>\r\n                    <Form.Item label=\"L'assuré\">\r\n                      {getFieldDecorator(\"cinAssure\", {\r\n                        rules: [\r\n                          { required: true, message: \"assuree is required!\" }\r\n                        ]\r\n                      })(\r\n                        <AutoComplete\r\n                          disabled={\r\n                            this.state.disableSouscripteuretAssure &&\r\n                            this.state.moraleOuPhysique === \"physique\"\r\n                          }\r\n                          size=\"default\"\r\n                          style={{ width: 182 }} // 192 pc bureau\r\n                          dataSource={this.state.personlistForAuto}\r\n                          onSelect={this.onChangeSelect}\r\n                          allowClear={true}\r\n                          labelInValue\r\n                          placeholder=\"ajouter un assuré\"\r\n                          filterOption={(inputValue, option) =>\r\n                            option.props.children\r\n                              .toUpperCase()\r\n                              .indexOf(inputValue.toUpperCase()) !== -1\r\n                          }\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                    <Form.Item style={{ float: \"right\" }}>\r\n                      {this.state.dataloaded && (\r\n                        <AddSouscripteur\r\n                          titre=\"Création d'un nouveau assuré\"\r\n                          personCreation={this.handlePersonphyCreationAssure}\r\n                          professions={this.state.professions}\r\n                          sexe={this.state.sexe}\r\n                          setuation={this.state.setuations}\r\n                          vois={this.state.vois}\r\n                        />\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={24}></Col>\r\n                </Col>\r\n                <Col offset={1} span={14}>\r\n                  {this.state.assure !== \"\" && (\r\n                    <Descriptions\r\n                      size=\"small\"\r\n                      column={2}\r\n                      bordered={true}\r\n                      title=\"Informations de l'assuré\"\r\n                    >\r\n                      <Descriptions.Item label=\"Prénom\">\r\n                        {this.state.assure.prenom}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Nom\">\r\n                        {this.state.assure.nom}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Date de naissance\">\r\n                        {this.state.assure.dateNaissance}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Sexe\">\r\n                        {this.state.assure.sexe}{\" \"}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"CIN\">\r\n                        {this.state.assure.cin}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Nombre d'enfants\">\r\n                        {this.state.assure.nombreEnfants}\r\n                      </Descriptions.Item>\r\n                      <Descriptions.Item label=\"Matricule\">\r\n                        {this.state.assure.matricule}\r\n                      </Descriptions.Item>\r\n                    </Descriptions>\r\n                  )}\r\n                  {this.state.assure === \"\" && (\r\n                    <Empty\r\n                      description=\"Merci de remplir la partie assure\"\r\n                      style={{\r\n                        margin: \"3% auto\",\r\n                        color: \"rgba(0, 0, 0, 0.45)\"\r\n                      }}\r\n                    />\r\n                  )}\r\n                </Col>\r\n                <Col offset={1} span={1}></Col>\r\n              </Row>\r\n            </div>\r\n          </Form>\r\n        </Col>\r\n        <Col offset={1} span={1}></Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      numeroDossierFinancement: Form.createFormField({\r\n        ...props.numeroDossierFinancement,\r\n        value: props.numeroDossierFinancement.value\r\n      }),\r\n      cin: Form.createFormField({\r\n        ...props.cin,\r\n        value: props.cin.value\r\n      }),\r\n      patente: Form.createFormField({\r\n        ...props.patente,\r\n        value: props.patente.value\r\n      }),\r\n      assure: Form.createFormField({\r\n        ...props.assure,\r\n        value: props.assure.value\r\n      }),\r\n      cinAssure: Form.createFormField({\r\n        ...props.cinAssure,\r\n        value: props.cinAssure.value\r\n      }),\r\n      moraleOuPhysique: Form.createFormField({\r\n        ...props.moraleOuPhysique,\r\n        value: props.moraleOuPhysique.value\r\n      })\r\n    };\r\n  }\r\n})(StepOne);\r\n","import React, { Component, Fragment } from \"react\";\r\nimport { Form, Icon, Button } from \"antd\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass DynamicFields extends Component {\r\n  id = 1;\r\n\r\n  add = () => {\r\n    const { getFieldValue, setFieldsValue, name } = this.props,\r\n      keys = getFieldValue(`${name}List`),\r\n      nextKeys = keys.concat(this.id++);\r\n\r\n    setFieldsValue({\r\n      [`${name}List`]: nextKeys,\r\n    });\r\n  };\r\n\r\n  remove = (k) => () => {\r\n    const { getFieldValue, setFieldsValue, name } = this.props,\r\n      keys = getFieldValue(`${name}List`);\r\n\r\n    if (keys.length === 1) return;\r\n    setFieldsValue({\r\n      [`${name}List`]: keys.filter((key) => key !== k),\r\n    });\r\n  };\r\n\r\n  defaultValidation = (name) => ({\r\n    validateTrigger: [\"onChange\", \"onBlur\"],\r\n\r\n    rules: [\r\n      {\r\n        required: true,\r\n        whitespace: true,\r\n        message: `Champ Obligatoire ... `,\r\n      },\r\n    ],\r\n  });\r\n\r\n  addSingleField = () => {\r\n    const { getFieldDecorator, getFieldValue, fields: obj, name } = this.props;\r\n    getFieldDecorator(`${name}List`, { initialValue: [0] });\r\n    const fieldCounter = getFieldValue(`${name}List`);\r\n    return fieldCounter.map((k) => (\r\n      <Form.Item key={k}>\r\n        {getFieldDecorator(\r\n          `${name}[${k}]`,\r\n          obj.validation || this.defaultValidation(name)\r\n        )(obj.field())}\r\n        {fieldCounter.length > 1 ? (\r\n          <Icon\r\n            className=\"dynamic-delete-button\"\r\n            type=\"minus-circle-o\"\r\n            onClick={this.remove(k)}\r\n          />\r\n        ) : null}\r\n      </Form.Item>\r\n    ));\r\n  };\r\n\r\n  addMultipleFields = () => {\r\n    const { getFieldDecorator, getFieldValue, fields, name } = this.props;\r\n    getFieldDecorator(`${name}List`, { initialValue: [0] });\r\n    const fieldCounter = getFieldValue(`${name}List`);\r\n\r\n    return fieldCounter.reduce((preResult, k) => {\r\n      const row = fields.map((obj, i) => (\r\n        <Form.Item key={`${k}${obj.name}`}>\r\n          {getFieldDecorator(\r\n            `${name}[${k}][${obj.name}]`,\r\n            obj.validation || this.defaultValidation(name)\r\n          )(obj.field())}\r\n          {fieldCounter.length > 1 && fields.length - 1 === i ? (\r\n            <Icon\r\n              className=\"dynamic-delete-button\"\r\n              type=\"minus-circle-o\"\r\n              onClick={this.remove(k)}\r\n            />\r\n          ) : null}\r\n        </Form.Item>\r\n      ));\r\n\r\n      return [...preResult, ...row];\r\n    }, []);\r\n  };\r\n\r\n  render() {\r\n    const { fields, name } = this.props;\r\n    return (\r\n      <Fragment>\r\n        {Array.isArray(fields)\r\n          ? this.addMultipleFields()\r\n          : this.addSingleField()}\r\n        <Form.Item>\r\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"30%\" }}>\r\n            <Icon type=\"plus\" /> Add &nbsp; {name}\r\n          </Button>\r\n        </Form.Item>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nDynamicFields.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  fields: PropTypes.oneOfType([\r\n    PropTypes.object,\r\n    PropTypes.arrayOf(PropTypes.object),\r\n    //TODO: add object shape validation.\r\n  ]).isRequired,\r\n  getFieldValue: PropTypes.func.isRequired,\r\n  setFieldsValue: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default DynamicFields;\r\n","import React, { Component } from \"react\";\r\nimport { Divider, Form, Input } from \"antd\";\r\nimport DynamicFields from \"./DynamicFields\";\r\nimport \"../StepThree.css\";\r\n\r\nclass Beneficiaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      this.props.stepThreeCallBack(values.beneficiaire);\r\n      e.preventDefault();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { form } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <Form onChange={this.handleChange}>\r\n          <Divider orientation=\"left\" className=\"first\">\r\n            Ajouter Beneficiaire\r\n          </Divider>\r\n          <DynamicFields\r\n            {...form}\r\n            name=\"beneficiaire\"\r\n            fields={[\r\n              {\r\n                name: \"cin\",\r\n                field: () => (\r\n                  <Input style={{ width: \"30%\" }} placeholder={\"cin\"} />\r\n                ),\r\n              },\r\n              {\r\n                name: \"nom\",\r\n                field: () => (\r\n                  <Input style={{ width: \"30%\" }} placeholder={\"nom\"} />\r\n                ),\r\n              },\r\n              {\r\n                name: \"prenom\",\r\n                field: () => (\r\n                  <Input style={{ width: \"30%\" }} placeholder={\"prenom\"} />\r\n                ),\r\n              },\r\n              {\r\n                name: \"rib\",\r\n                field: () => (\r\n                  <Input style={{ width: \"30%\" }} placeholder={\"rib\"} />\r\n                ),\r\n              },\r\n            ]}\r\n          />\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"beneficiaire\",\r\n})(Beneficiaire);\r\n","import \"./StepThree.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Col, Form, Input, Radio, Row, Select, DatePicker } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport Beneficiaire from \"./beneficiare/Beneficiaire\";\r\n\r\nconst dateFormat = \"DD-MM-YYYY\";\r\n\r\nconst { Option } = Select;\r\nclass StepThree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      deductibiliteFiscale: this.props.deductibiliteFiscale.value,\r\n      attributionIrrevocable: this.props.attributionIrrevocable.value,\r\n      beneficiairesCasDeces: [\r\n        {\r\n          value: \"HERITIERS\",\r\n          name: \"Heritiers\",\r\n        },\r\n        {\r\n          value: \"PERSONNEDESIGNEE\",\r\n          name: \"Personne designée\",\r\n        },\r\n      ],\r\n      montantContributionInitiale: \"\",\r\n      montantContributionPeriodique: \"\",\r\n      beneficiaireEnDecess: [],\r\n      nombrePeriodicite: \"\",\r\n      beneficiaireCasDeces: \"\",\r\n    };\r\n  }\r\n\r\n  handleCallback = (beneficiaireData) => {\r\n    this.setState({ beneficiaireEnDecess: beneficiaireData });\r\n    this.props.form.setFieldsValue({\r\n      beneficiaireEnDeces: beneficiaireData,\r\n    });\r\n    this.props.getBenefeciaireState(beneficiaireData);\r\n  };\r\n\r\n  onChangeBeneficiaireCasDeces = (e) => {\r\n    this.setState({\r\n      beneficiaireCasDeces: e,\r\n    });\r\n  };\r\n\r\n  onChangeApplicationAttributionIrrevocable = (e) => {\r\n    this.setState({\r\n      attributionIrrevocable: e.target.value,\r\n    });\r\n  };\r\n\r\n  onChangeDeductibiliteFiscale = (e) => {\r\n    this.setState({\r\n      deductibiliteFiscale: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSabmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {});\r\n  };\r\n\r\n  onChangePrenom = (e) => {\r\n    this.setState({\r\n      prenom: e.value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { beneficiaireEnDeces } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col span={24} offset={1}>\r\n            <Form\r\n              {...formItemLayout}\r\n              onSubmit={this.handleSabmit}\r\n              id=\"stepthree\"\r\n            >\r\n              <Col span={10}>\r\n                <Form.Item label=\"Déductibilite Fiscale\">\r\n                  {getFieldDecorator(\"deductibiliteFiscale\")(\r\n                    <Radio.Group\r\n                      buttonStyle=\"solid\"\r\n                      defaultValue={this.state.deductibiliteFiscale}\r\n                      onChange={this.onChangeDeductibiliteFiscale}\r\n                    >\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Montant Contribution Initiale \">\r\n                  {getFieldDecorator(\"montantContributionInitiale\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide!\",\r\n                      },\r\n                    ],\r\n                  })(<Input addonAfter=\"DHS\" className=\"number-input\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Montant Contribution Periodique \">\r\n                  {getFieldDecorator(\"montantContributionPeriodique\", {\r\n                    rules: [\r\n                      {\r\n                        pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                        required: true,\r\n                        message: \"Format invalide!\",\r\n                      },\r\n                    ],\r\n                  })(<Input addonAfter=\"DHS\" className=\"number-input\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Date de Prelevement\" hasFeedback>\r\n                  {getFieldDecorator(\"datePrelevement\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"entrez la Date de prelevement\",\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <DatePicker\r\n                      className=\"date-style\"\r\n                      format={dateFormat}\r\n                    ></DatePicker>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={10}>\r\n                <Form.Item label=\"Application de l'attribution irrévocable \">\r\n                  {getFieldDecorator(\"attributionIrrevocable\", {\r\n                    initialValue: this.state.attributionIrrevocable,\r\n                  })(\r\n                    <Radio.Group\r\n                      buttonStyle=\"solid\"\r\n                      defaultValue={this.state.attributionIrrevocable}\r\n                      onChange={this.onChangeApplicationAttributionIrrevocable}\r\n                    >\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label=\"Nombre de périodicités\">\r\n                  {getFieldDecorator(\"nombrePeriodicite\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide!\",\r\n                      },\r\n                    ],\r\n                  })(<Input className=\"number-input\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Beneficiaire en cas de deces \" hasFeedback>\r\n                  {getFieldDecorator(\"beneficiaireCasDeces\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"choisissez une condition \",\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"-sélectionnez -\"\r\n                      onChange={this.onChangeBeneficiaireCasDeces}\r\n                    >\r\n                      {this.state.beneficiairesCasDeces.map((element) => {\r\n                        return (\r\n                          <Option value={element.value} label={element.name}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              {this.props.beneficiaireCasDeces.value === \"PERSONNEDESIGNEE\" ? (\r\n                <Beneficiaire stepThreeCallBack={this.handleCallback}>\r\n                  {beneficiaireEnDeces}\r\n                </Beneficiaire>\r\n              ) : null}\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n\r\n  mapPropsToFields(props) {\r\n    return {\r\n      deductibiliteFiscale: Form.createFormField({\r\n        ...props.deductibiliteFiscale,\r\n        value: props.deductibiliteFiscale.value,\r\n      }),\r\n      attributionIrrevocable: Form.createFormField({\r\n        ...props.attributionIrrevocable,\r\n        value: props.attributionIrrevocable.value,\r\n      }),\r\n      beneficiaireCasDeces: Form.createFormField({\r\n        ...props.beneficiaireCasDeces,\r\n        value: props.beneficiaireCasDeces.value,\r\n      }),\r\n      montantContributionInitiale: Form.createFormField({\r\n        ...props.montantContributionInitiale,\r\n        value: props.montantContributionInitiale.value,\r\n      }),\r\n      montantContributionPeriodique: Form.createFormField({\r\n        ...props.montantContributionPeriodique,\r\n        value: props.montantContributionPeriodique.value,\r\n      }),\r\n      nombrePeriodicite: Form.createFormField({\r\n        ...props.nombrePeriodicite,\r\n        value: props.nombrePeriodicite.value,\r\n      }),\r\n      beneficiaireEnDeces: Form.createFormField({\r\n        ...props.beneficiaireEnDeces,\r\n        value: props.beneficiaireEnDeces.value,\r\n      }),\r\n      datePrelevement: Form.createFormField({\r\n        ...props.datePrelevement,\r\n        value: props.datePrelevement.value,\r\n      }),\r\n    };\r\n  },\r\n})(StepThree);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Col, DatePicker, Form, Input, Radio, Row, Select } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nconst { Option } = Select;\r\nclass StepTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pointsVentes: this.props.currentUser.pointVentes,\r\n      periodicites: [],\r\n      showField: false,\r\n      produits: [],\r\n      dateEffet: moment(moment(), \"YYYY-MM-DD\").add(1, \"days\"),\r\n      dateEcheance: this.props.dateEcheance.value,\r\n      dureeContrat: this.props.dureeContrat.value,\r\n      compteJoint: this.props.compteJoint.value,\r\n      selectedProduct: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.form.setFieldsValue({\r\n      dateEffet: this.state.dateEffet\r\n    });\r\n    if (this.state.pointsVentes.length === 1) {\r\n      this.props.form.setFieldsValue({\r\n        pointVente: this.state.pointsVentes[0].id\r\n      });\r\n    }\r\n  }\r\n\r\n  handleEffetDateChange = value => {\r\n    if (this.state.dateEcheance !== null) {\r\n      let echeanceDate = this.state.dateEcheance;\r\n      this.setState({\r\n        dateEffet: value,\r\n        dureeContrat: echeanceDate.diff(value, \"months\")\r\n      });\r\n    }\r\n  };\r\n\r\n  handleEcheanceDateChange = value => {\r\n    let effetDate = this.state.dateEffet;\r\n    this.setState({\r\n      dateEcheance: value,\r\n      dureeContrat: value.diff(effetDate, \"months\")\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dureeContrat: value.diff(effetDate, \"months\")\r\n    });\r\n  };\r\n\r\n  disabledDate = current => {\r\n    return (\r\n      current &&\r\n      current <\r\n        moment(moment().format(\"YYYY-MM-DD\"), \"YYYY-MM-DD\").add(2, \"days\")\r\n    );\r\n  };\r\n\r\n  disabledDateEcheance = current => {\r\n    return current && current < this.state.dateEffet.endOf(\"day\");\r\n  };\r\n\r\n  handleSabmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll();\r\n  };\r\n\r\n  onChange = e => {\r\n    this.setState({\r\n      dureeContrat: e.target.value,\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value)\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value),\r\n      dureeContrat: parseInt(e.target.value)\r\n    });\r\n  };\r\n\r\n  onChangeProduit = value => {\r\n    let selectedProduct = this.state.produits.filter(\r\n      item => item.code === value.label\r\n    );\r\n    this.setState({\r\n      periodicites: selectedProduct[0].periodicites,\r\n      selectedProduct: selectedProduct[0],\r\n      dureeContrat: selectedProduct[0].dureeMinimalSouscription\r\n    });\r\n  };\r\n\r\n  partnerChange = value => {\r\n    this.setState({\r\n      produits: this.props.produits.filter(\r\n        item => item.partenaire.raisonSocial === value.label\r\n      )\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      produit: \"\",\r\n      periodicite: \"\"\r\n    });\r\n  };\r\n\r\n  onChangePointDeVente() {\r\n    this.props.form.setFieldsValue({\r\n      produit: \"\",\r\n      periodicite: \"\",\r\n      partenaire: \"\"\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayout} onSubmit={this.handleSabmit} id=\"steptwo\">\r\n            <Col span={10}>\r\n              <Form.Item label=\"Date d'effet\" hasFeedback>\r\n                {getFieldDecorator(\"dateEffet\", {\r\n                  valuePropName: \"selected\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entre la Date d'effet\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    className=\"date-style\"\r\n                    format={dateFormat}\r\n                    disabledDate={this.disabledDate}\r\n                    defaultValue={this.state.dateEffet}\r\n                    onChange={this.handleEffetDateChange}\r\n                  ></DatePicker>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Durée de contrat\">\r\n                {getFieldDecorator(\"dureeContrat\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/^[0-9\\b]+$/),\r\n                      message: \"Format invalide !\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    type=\"number\"\r\n                    className=\"number-input\"\r\n                    onChange={this.onChange}\r\n                    addonAfter=\"Mois\"\r\n                    initialValue={this.state.dureeContrat}\r\n                    min={\r\n                      this.state.selectedProduct.dureeMinimalSouscription || \"\"\r\n                    }\r\n                    placeholder=\"durée de contrat\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Intermédiaire\" hasFeedback>\r\n                {getFieldDecorator(\"partenaire\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez un Intermédiaire\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"Intermédiaire\"\r\n                    onSelect={this.partnerChange}\r\n                    labelInValue\r\n                  >\r\n                    {this.props.partenaires.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.raisonSocial}\r\n                        >\r\n                          {element.raisonSocial}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Compte joint\">\r\n                {getFieldDecorator(\"compteJoint\", {\r\n                  valuePropName: \"checked\",\r\n                  initialValue: this.state.compteJoint\r\n                })(\r\n                  <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    defaultValue={this.state.compteJoint}\r\n                  >\r\n                    <Radio.Button value={true}>Oui</Radio.Button>\r\n                    <Radio.Button value={false}>Non</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={1}></Col>\r\n            <Col span={10}>\r\n              <Form.Item label=\"Date d'échéance\" hasFeedback>\r\n                {getFieldDecorator(\"dateEcheance\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une date d'echeance\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    className=\"date-style\"\r\n                    format={dateFormat}\r\n                    disabledDate={this.disabledDateEcheance}\r\n                    onChange={this.handleEcheanceDateChange}\r\n                  ></DatePicker>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Agence\" hasFeedback>\r\n                {getFieldDecorator(\"pointVente\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une agence\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"agence\"\r\n                    defaultValue={\r\n                      this.state.pointsVentes.length === 1 &&\r\n                      this.state.pointsVentes[0].id\r\n                    }\r\n                    onChange={this.onChangePointDeVente}\r\n                  >\r\n                    {this.state.pointsVentes.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Produit\" hasFeedback>\r\n                {getFieldDecorator(\"produit\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez un produit\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"produit\"\r\n                    onChange={this.onChangeProduit}\r\n                    labelInValue\r\n                  >\r\n                    {this.state.produits.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.code}\r\n                        >\r\n                          {element.code}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Préiodicité\" hasFeedback>\r\n                {getFieldDecorator(\"periodicite\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une preiodicite\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    onChange={this.onChangePeriodicite}\r\n                    placeholder=\"Préiodicité\"\r\n                    labelInValue\r\n                  >\r\n                    {this.state.periodicites.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nmoment.addRealMonth = function addRealMonth(d, m) {\r\n  var fm = moment(d).add(m, \"M\");\r\n  var fmEnd = moment(fm).endOf(\"month\");\r\n  return d.date() !== fm.date() && fm.isSame(fmEnd.format(\"YYYY-MM-DD\"))\r\n    ? fm.add(1, \"d\")\r\n    : fm;\r\n};\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      NombreMensualitesEtalementLaPrimeUnique: Form.createFormField({\r\n        ...props.NombreMensualitesEtalementLaPrimeUnique,\r\n        value: props.NombreMensualitesEtalementLaPrimeUnique.value\r\n      }),\r\n      compteJoint: Form.createFormField({\r\n        ...props.compteJoint,\r\n        value: props.compteJoint.value\r\n      }),\r\n      dateEffet: Form.createFormField({\r\n        ...props.dateEffet,\r\n        value: props.dateEffet.value\r\n      }),\r\n      dureeContrat: Form.createFormField({\r\n        ...props.dureeContrat,\r\n        value: props.dureeContrat.value\r\n      }),\r\n      periodicite: Form.createFormField({\r\n        ...props.periodicite,\r\n        value: props.periodicite.value\r\n      }),\r\n      dateEcheance: Form.createFormField({\r\n        ...props.dateEcheance,\r\n        value: props.dateEcheance.value\r\n      }),\r\n      pointVente: Form.createFormField({\r\n        ...props.pointVente,\r\n        value: props.pointVente.value\r\n      }),\r\n      produit: Form.createFormField({\r\n        ...props.produit,\r\n        value: props.produit.value\r\n      }),\r\n      partenaire: Form.createFormField({\r\n        ...props.partenaire,\r\n        value: props.partenaire.value\r\n      })\r\n    };\r\n  }\r\n})(StepTwo);\r\n","import { Form, Input} from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst months = [\r\n  \"01\",\r\n  \"02\",\r\n  \"03\",\r\n  \"04\",\r\n  \"05\",\r\n  \"06\",\r\n  \"07\",\r\n  \"08\",\r\n  \"09\",\r\n  \"10\",\r\n  \"11\",\r\n  \"12\",\r\n];\r\n\r\nexport function formatDate(dateString) {\r\n  const date = new Date(dateString);\r\n\r\n  const monthNames = [\r\n    \"January\",\r\n    \"February\",\r\n    \"March\",\r\n    \"April\",\r\n    \"May\",\r\n    \"June\",\r\n    \"July\",\r\n    \"August\",\r\n    \"September\",\r\n    \"October\",\r\n    \"November\",\r\n    \"December\",\r\n  ];\r\n\r\n  const monthIndex = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  return monthNames[monthIndex] + \" \" + year;\r\n}\r\n\r\nexport function formatDateTime(dateTimeString) {\r\n  const date = new Date(dateTimeString);\r\n\r\n  const monthNames = [\r\n    \"Jan\",\r\n    \"Feb\",\r\n    \"Mar\",\r\n    \"Apr\",\r\n    \"May\",\r\n    \"Jun\",\r\n    \"Jul\",\r\n    \"Aug\",\r\n    \"Sep\",\r\n    \"Oct\",\r\n    \"Nov\",\r\n    \"Dec\",\r\n  ];\r\n\r\n  const monthIndex = date.getMonth();\r\n  const year = date.getFullYear();\r\n\r\n  return (\r\n    date.getDate() +\r\n    \" \" +\r\n    monthNames[monthIndex] +\r\n    \" \" +\r\n    year +\r\n    \" - \" +\r\n    date.getHours() +\r\n    \":\" +\r\n    date.getMinutes()\r\n  );\r\n}\r\n\r\nexport function formatDateToFormatOne(date) {\r\n  let day = date.getDate();\r\n  let month = months[date.getMonth()];\r\n  let year = date.getFullYear();\r\n  let hours = date.getHours();\r\n  let minutes = date.getMinutes();\r\n\r\n  return `${day}-${month}-${year} ${hours}:${minutes}`;\r\n}\r\n\r\nexport function formatDateToFormatTwo(date) {\r\n  let day = date.getDate();\r\n  let month = months[date.getMonth()];\r\n  let year = date.getFullYear();\r\n\r\n  return `${day}-${month}-${year}`;\r\n}\r\n\r\nexport const formItemLayout = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 10 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 12 },\r\n  },\r\n};\r\n\r\nexport const formItemLayoutResponsive = {\r\n  labelCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 24 },\r\n    md: { span: 15 },\r\n    lg: { span: 12 },\r\n  },\r\n  wrapperCol: {\r\n    xs: { span: 24 },\r\n    sm: { span: 24 },\r\n    md: { span: 9 },\r\n    lg: { span: 12 },\r\n  },\r\n};\r\n\r\nexport function formItemInputWithAddons(label, field, addons, fieldDecorater) {\r\n  const field1 = field;\r\n  return (\r\n    <Form.Item label={<label style={{ whiteSpace: \"normal\" }}>{label}</label>}>\r\n      {fieldDecorater(field1, {\r\n        rules: [\r\n          {\r\n            required: true,\r\n            pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n            message: \"Format invalide!\",\r\n          },\r\n        ],\r\n      })(\r\n        <Input addonAfter={addons} style={{ width: \"80%\", float: \"right\" }} />\r\n      )}\r\n    </Form.Item>\r\n  );\r\n}\r\n\r\nexport function formItemInputWithoutAddons(label, field, fieldDecorater) {\r\n  const field1 = field;\r\n  return (\r\n    <Form.Item label={label}>\r\n      {fieldDecorater(field1, {\r\n        rules: [\r\n          {\r\n            required: true,\r\n            message: \"Champs obligatoire\",\r\n          },\r\n        ],\r\n      })(<Input />)}\r\n    </Form.Item>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n","import { API_BASE_URL,REQUEST as request,ACCESS_TOKEN  } from \"../../../constants/index\";\r\nexport function getRetraiteProduit() {\r\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n      return Promise.reject(\"No access token set.\");\r\n    }\r\n    return request({\r\n      url:\r\n        API_BASE_URL + \"/private/retraitproduit?page=0&sort=code&direction=asc\",\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  export function getRetraiteProduitByCode(codeProduit) {\r\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n      return Promise.reject(\"No access token set.\");\r\n    }\r\n    return request({\r\n      url: API_BASE_URL + \"/private/retraitproduit/code/\" + codeProduit,\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  export function ajoutRetraitProduit(productRequest) {\r\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n      return Promise.reject(\"No access token set.\");\r\n    }\r\n  \r\n    return request({\r\n      url: API_BASE_URL + \"/private/retraitproduit\",\r\n      data: productRequest,\r\n      method: \"POST\",\r\n    });\r\n  }\r\n  export function updateRetraiteProduct(productId, updatedProduct) {\r\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n      return Promise.reject(\"No access token set.\");\r\n    }\r\n  \r\n    return request({\r\n      url: API_BASE_URL + \"/private/retraitproduit/\" + productId,\r\n      method: \"PUT\",\r\n      data: updatedProduct,\r\n    });\r\n  }export function getRetraiteContratByNumeroContrat(numero) {\r\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n      return Promise.reject(\"No access token set.\");\r\n    }\r\n    return request({\r\n      url: API_BASE_URL + \"/private/retraitcontratbynumero/\" + numero,\r\n      method: \"GET\",\r\n    });\r\n  }\r\n  export function getPoolInvestissment() {\r\n    if (!localStorage.getItem(ACCESS_TOKEN)) {\r\n      return Promise.reject(\"No access token set.\");\r\n    }\r\n    return request({\r\n      url:\r\n        API_BASE_URL +\r\n        \"/private/poolinvestissment?page=0&sort=libelle&direction=asc\",\r\n      method: \"GET\",\r\n    });\r\n  }","/* eslint-disable react/prop-types */\r\nimport \"./SouscriptionRetraiteContrat.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Button, Descriptions, Divider, notification, Steps } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { connectedUserContext } from \"../../../../app/App\";\r\nimport ComponentTitle from \"../../../../util/Title/ComponentTitle\";\r\nimport StepOne from \"./StepOne/StepOne\";\r\nimport StepThree from \"./StepThree/StepThree\";\r\nimport StepTwo from \"./StepTwo/StepTwo\";\r\nimport { formatDateToFormatTwo } from \"../../../../util/Helpers\";\r\nimport { getAllPartenaire } from \"../../../Parametrage/partenaire/PartenaireAPI\";\r\nimport { getRetraiteProduit } from \"../../../Parametrage/ProduitRetraite/ProduitRetraiteAPI\";\r\nimport { createContratRetrait, getPeriodicite } from \"../../ContratsAPI\";\r\nimport { addBeneficiaireEnDeces } from \"../../../Participants/ParticipantAPI\";\r\nconst { Step } = Steps;\r\n\r\nclass SouscriptionRetraiteContrat extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.setBenefeciaire = this.setBenefeciaire.bind(this);\r\n    this.state = {\r\n      assure: false,\r\n      souscripteur: false,\r\n      allow: false,\r\n      allowSec: false,\r\n      souscripteurObj: {},\r\n      assureObj: {},\r\n      current: 0,\r\n      produits: [],\r\n      Partenaires: [],\r\n      periodicites: [],\r\n      fields: {\r\n        // step one\r\n        moraleOuPhysique: { value: \"morale\" },\r\n        cin: { value: \"\" },\r\n        patente: { value: \"\" },\r\n        assure: { value: \"\" },\r\n        cinAssure: { value: \"\" },\r\n        numeroDossierFinancement: { value: \"\" },\r\n        souscripteur: { value: \"\" },\r\n        souscripteurIsAssure: { value: \"\" },\r\n        assurePresent: { value: false },\r\n        //stepOne View inputs\r\n        //step twos\r\n        partenaire: { value: \"\" },\r\n        periodicite: { value: \"\" },\r\n        dureeContrat: { value: \"\" },\r\n        dateEffet: { value: \"\" },\r\n        dateEcheance: { value: \"\" },\r\n        produit: { value: \"\" },\r\n        pointVente: { value: \"\" },\r\n        compteJoint: { value: false },\r\n        NombreMensualitesEtalementLaPrimeUnique: { value: \"\" },\r\n        agence: { value: \"\" },\r\n        //step three\r\n        attributionIrrevocable: { value: false },\r\n        beneficiaireCasDeces: { value: \"\" },\r\n        deductibiliteFiscale: { value: false },\r\n        montantContributionInitiale: { value: \"\" },\r\n        montantContributionPeriodique: { value: \"\" },\r\n        nombrePeriodicite: { value: \"\" },\r\n        beneficiaireEnDeces: { value: [] },\r\n        datePrelevement: { value: \"\" }\r\n      }\r\n    };\r\n  }\r\n\r\n  setBenefeciaire = valueBeneficiare => {\r\n    let newBeneficiaireEnDeces = this.state.fields.beneficiaireEnDeces;\r\n    newBeneficiaireEnDeces.value = valueBeneficiare;\r\n    this.setState({\r\n      newBeneficiaireEnDeces: newBeneficiaireEnDeces\r\n    });\r\n  };\r\n\r\n  async getDroppDownData() {\r\n    const responsePartenaire = await getAllPartenaire();\r\n    let responsePereiodecite = await getPeriodicite();\r\n    let responseProduit = await getRetraiteProduit();\r\n    this.setState({\r\n      Partenaires: responsePartenaire.data.content,\r\n      produits: responseProduit.data.content,\r\n      periodicites: responsePereiodecite.data.content\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDroppDownData();\r\n  }\r\n\r\n  handleCallback = beneficiaireData => {\r\n    this.setState({ beneficiaireEnDeces: beneficiaireData });\r\n  };\r\n\r\n  async addBeneficiaires() {\r\n    let benefecaireBD = [];\r\n    if (this.state.fields.beneficiaireEnDeces.value !== []) {\r\n      this.state.fields.beneficiaireEnDeces.value.forEach(async element => {\r\n        let result = await addBeneficiaireEnDeces(element);\r\n        let benef = result.data;\r\n        benefecaireBD.push(benef);\r\n      });\r\n      let newBeneficiaireEnDeces = this.state.fields.beneficiaireEnDeces;\r\n      newBeneficiaireEnDeces.value = benefecaireBD;\r\n      this.setState({\r\n        newBeneficiaireEnDeces: newBeneficiaireEnDeces\r\n      });\r\n    }\r\n  }\r\n\r\n  async createRetraitContrat(body) {\r\n    await createContratRetrait(body)\r\n      .then(response => {\r\n        notification.success({\r\n          message: \"TAKAFUL\",\r\n          description: \"Contrat bien enregistrée\"\r\n        });\r\n        this.setState({\r\n          current: 0,\r\n          fields: {\r\n            // step one\r\n            moraleOuPhysique: { value: \"morale\" },\r\n            cin: { value: \"\" },\r\n            patente: { value: \"\" },\r\n            assure: { value: \"\" },\r\n            cinAssure: { value: \"\" },\r\n            numeroDossierFinancement: { value: \"\" },\r\n            souscripteur: { value: \"\" },\r\n            souscripteurIsAssure: { value: \"\" },\r\n            assurePresent: { value: false },\r\n            //step two\r\n            periodicite: { value: \"\" },\r\n            dureeContrat: { value: \"\" },\r\n            dateEffet: { value: \"\" },\r\n            dateEcheance: { value: \"\" },\r\n            produit: { value: \"\" },\r\n            partenaire: { value: \"\" },\r\n            pointVente: { value: \"\" },\r\n            compteJoint: { value: false },\r\n            //step three\r\n            attributionIrrevocable: { value: false },\r\n            beneficiaireCasDeces: { value: \"\" },\r\n            deductibiliteFiscale: { value: false },\r\n            montantContributionInitiale: { value: \"\" },\r\n            montantContributionPeriodique: { value: \"\" },\r\n            beneficiaireEnDeces: { value: [] },\r\n            nombrePeriodicite: { value: \"\" },\r\n            datePrelevement: { value: \"\" }\r\n          }\r\n          \r\n        });\r\n        this.props.record.history.push(\"/consultRetraiteContrat\");\r\n        \r\n      })\r\n      .catch(error => {\r\n        notification.error({\r\n          message: \"TAKAFUL\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      });\r\n  }\r\n\r\n  checkSelectedPers = (\r\n    souscripteurIsAssure,\r\n    assurePresent,\r\n    souscripteurPresent,\r\n    souscripteurObject,\r\n    assureObject\r\n  ) => {\r\n    if (assurePresent && souscripteurPresent) {\r\n      if (this.state.allow === false) {\r\n        \r\n        let newStateSouscripteur = this.state.fields.souscripteur;\r\n        newStateSouscripteur.value = souscripteurObject;\r\n        let newStateAssure = this.state.fields.assure;\r\n        newStateAssure.value = assureObject;\r\n        let newStateSouscripteurIsAssure = this.state.fields\r\n          .souscripteurIsAssure;\r\n        newStateSouscripteurIsAssure.value = souscripteurIsAssure;\r\n        let newStateAssurePresent = this.state.fields.assurePresent;\r\n        newStateAssurePresent.value = newStateAssurePresent;\r\n        this.setState({\r\n          allow: true,\r\n          souscripteurObj: souscripteurObject,\r\n          assureObj: assureObject,\r\n          newStateSouscripteur: newStateSouscripteur,\r\n          newStateAssure: newStateAssure,\r\n          newStateSouscripteurIsAssure: newStateSouscripteurIsAssure,\r\n          newStateAssurePresent: newStateAssurePresent\r\n        });\r\n      }\r\n    } else {\r\n      if (this.state.allow === true) this.setState({ allow: false });\r\n    }\r\n  };\r\n\r\n  next = () => {\r\n    if (this.state.allow && this.state.current === 0) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n    }\r\n    if (\r\n      this.state.fields.produit.value !== \"\" &&\r\n      this.state.fields.periodicite.value !== \"\" &&\r\n      this.state.fields.dateEcheance.value !== \"\" &&\r\n      this.state.current === 1\r\n    ) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n    }\r\n    if (\r\n      this.state.fields.beneficiaireCasDeces.value !== \"\" &&\r\n      this.state.fields.deductibiliteFiscale.value !== \"\" &&\r\n      this.state.fields.montantContributionPeriodique.value !== \"\" &&\r\n      this.state.fields.montantContributionInitiale.value !== \"\" &&\r\n      this.state.fields.nombrePeriodicite.value !== \"\" &&\r\n      this.state.current === 2\r\n    ) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n    }\r\n  };\r\n\r\n  handleConfirm = (value, key) => {\r\n    this.createRetraitContrat(value);\r\n    notification.close(key);\r\n  };\r\n\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n  }\r\n\r\n  handleFormChange = changedFields => {\r\n    this.setState(({ fields }) => ({\r\n      fields: { ...fields, ...changedFields }\r\n    }));\r\n  };\r\n\r\n  async done(event) {\r\n    const { fields } = this.state;\r\n    if (\r\n      fields.beneficiaireCasDeces.value !== \"\" &&\r\n      fields.montantContributionPeriodique.value !== \"\" &&\r\n      fields.montantContributionInitiale.value !== \"\" &&\r\n      fields.nombrePeriodicite.value !== \"\" &&\r\n      fields.datePrelevement.value !== \"\"\r\n    ) {\r\n      await this.addBeneficiaires();\r\n      const fieldsToRequest = {\r\n        // step one\r\n        assure: this.state.assureObj,\r\n        souscripteur: this.state.souscripteurObj,\r\n        numeroDossierFinancement: fields.numeroDossierFinancement.value,\r\n        souscripteurIsAssure: fields.souscripteurIsAssure.value,\r\n        //step two\r\n        periodicite: { id: fields.periodicite.value.key },\r\n        dureeContrat: fields.dureeContrat.value,\r\n        dateEffet: formatDateToFormatTwo(fields.dateEffet.value.toDate()),\r\n        dateEcheance: formatDateToFormatTwo(fields.dateEcheance.value.toDate()),\r\n        produit: this.state.produits.filter(\r\n          item => item.code === fields.produit.value.label\r\n        )[0],\r\n        pointVente: { id: fields.pointVente.value },\r\n        compteJoint: fields.compteJoint.value,\r\n        partenaire: fields.partenaire.value,\r\n        //step three\r\n        beneficiaireCasDeces: fields.beneficiaireCasDeces.value,\r\n        deductibiliteFiscale: fields.deductibiliteFiscale.value,\r\n        montantContributionPeriodique:\r\n          fields.montantContributionPeriodique.value,\r\n        montantContributionInitiale: fields.montantContributionInitiale.value,\r\n        nombrePeriodicite: fields.nombrePeriodicite.value,\r\n        beneficiaireEnDeces: fields.beneficiaireEnDeces.value,\r\n        attributionIrrevocable: fields.attributionIrrevocable.value,\r\n        datePrelevement: fields.datePrelevement.value,\r\n        //TODO : this field is static\r\n        status: \"ACCEPTED\"\r\n      };\r\n      if (event === \"SIMULATION\") {\r\n        fieldsToRequest.status = \"SIMULATION\";\r\n      }\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <div>\r\n          <Button\r\n            type=\"primary\"\r\n            onClick={() => this.handleConfirm(fieldsToRequest, key)}\r\n            className=\"not-rounded\"\r\n          >\r\n            Confirmer\r\n          </Button>\r\n          <Button\r\n            onClick={() => notification.close(key)}\r\n            style={{ marginLeft: 8 }}\r\n            className=\"not-rounded\"\r\n          >\r\n            Fermer\r\n          </Button>\r\n        </div>\r\n      );\r\n      notification.info({\r\n        message: \"Confirmation\",\r\n        description: (\r\n          <div>\r\n            <Divider />\r\n            <Descriptions bordered>\r\n              <Descriptions.Item label=\"Durée de contrat\">\r\n                {fields.dureeContrat.value}\r\n              </Descriptions.Item>\r\n\r\n              <Descriptions.Item label=\"Bénéficiaire Cas Decès\" span={2}>\r\n                {fields.beneficiaireCasDeces.value}\r\n              </Descriptions.Item>\r\n\r\n              <Descriptions.Item label=\"Déductibilité fiscale\">\r\n                {fields.deductibiliteFiscale.value}\r\n              </Descriptions.Item>\r\n\r\n              <Descriptions.Item\r\n                label=\"Montant contribution periodique\"\r\n                span={2}\r\n              >\r\n                {fields.montantContributionPeriodique.value}\r\n              </Descriptions.Item>\r\n\r\n              <Descriptions.Item label=\"Montant contribution initiale\">\r\n                {fields.montantContributionInitiale.value}\r\n              </Descriptions.Item>\r\n\r\n              <Descriptions.Item label=\"Montant simulé\" span={2}>\r\n                {parseFloat(fields.montantContributionInitiale.value) +\r\n                  parseFloat(fields.montantContributionPeriodique.value) *\r\n                    parseFloat(fields.nombrePeriodicite.value)}\r\n              </Descriptions.Item>\r\n            </Descriptions>\r\n          </div>\r\n        ),\r\n        btn,\r\n        key,\r\n        style: {\r\n          width: 880,\r\n          marginLeft: 335 - 1280\r\n        },\r\n        duration: 0\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { current, fields } = this.state;\r\n    const { beneficiaireEnDeces } = this.state;\r\n    const steps = [\r\n      {\r\n        title: \"Première étape\",\r\n        content: (\r\n          <StepOne\r\n            check={this.checkSelectedPers}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        title: \"Deuxième étape\",\r\n        content: (\r\n          <connectedUserContext.Consumer>\r\n            {value => (\r\n              <StepTwo\r\n                produits={this.state.produits}\r\n                periodicites={this.state.periodicites}\r\n                partenaires={this.state.Partenaires}\r\n                {...fields}\r\n                onChange={this.handleFormChange}\r\n                currentUser={value}\r\n              />\r\n            )}\r\n          </connectedUserContext.Consumer>\r\n        )\r\n      },\r\n      {\r\n        title: \"Troisième étape\",\r\n        content: (\r\n          <div>\r\n            <StepThree\r\n              dateEffet={this.state.fields.dateEffet.value}\r\n              assureObj={this.state.assureObj}\r\n              dureeContrat={this.state.fields.dureeContrat.value}\r\n              selectedproduit={\r\n                this.state.produits.filter(\r\n                  item => item.code === this.state.fields.produit.value.label\r\n                )[0]\r\n              }\r\n              souscriptionCallBack={this.handleCallback}\r\n              {...fields}\r\n              onChange={this.handleFormChange}\r\n              getBenefeciaireState={this.setBenefeciaire}\r\n            />\r\n            {beneficiaireEnDeces}\r\n          </div>\r\n        )\r\n      }\r\n    ];\r\n    let title;\r\n    if (fields.produit.value === \"\")\r\n      title = \"Nouvelle souscription retraite produit\";\r\n    else\r\n      title =\r\n        \"Nouvelle souscription retraite produit  \" +\r\n        this.state.produits.filter(\r\n          item => item.code === fields.produit.value.label\r\n        )[0].code;\r\n    return (\r\n      <div>\r\n        <ComponentTitle title={title} />\r\n        <Steps current={current}>\r\n          {steps.map(item => (\r\n            <Step\r\n              key={item.title}\r\n              title={item.title}\r\n              description={item.description}\r\n            />\r\n          ))}\r\n        </Steps>\r\n        <div className=\"steps-content-style\">{steps[current].content}</div>\r\n        <div className=\"steps-action\">\r\n          {current === 0 && (\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"multisteps-btn-next\"\r\n              htmlType=\"submit\"\r\n              form=\"formadd\"\r\n              onClick={() => this.next()}\r\n            >\r\n              Suivant\r\n            </Button>\r\n          )}\r\n          {current === 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"multisteps-btn-next\"\r\n              form=\"steptwo\"\r\n              onClick={() => this.next()}\r\n            >\r\n              Suivant\r\n            </Button>\r\n          )}\r\n          {current === steps.length - 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"multisteps-btn-next\"\r\n              form=\"stepfour\"\r\n              onClick={() => this.done(\"CREATION\")}\r\n            >\r\n              Terminer la création\r\n            </Button>\r\n          )}\r\n          {current > 0 && (\r\n            <Button onClick={() => this.prev()}>Précédent</Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SouscriptionRetraiteContrat;\r\n","import { Button, Row, Col } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport React, { Component } from \"react\";\r\nimport { downloadFlux, listFiles } from \"../EchangeFileAPI\";\r\n\r\nclass FichiersEmis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listFiles: [],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.listFilesNames();\r\n  }\r\n  async listFilesNames() {\r\n    let respo = await listFiles();\r\n    this.setState({ listFiles: respo.data });\r\n  }\r\n  downloadFile = async (title) => {\r\n    await downloadFlux(title)\r\n      .then((rep) => {\r\n        return new Blob([rep.data]);\r\n      })\r\n      .then((rep) => {\r\n        let url = window.URL.createObjectURL(rep);\r\n        let a = document.createElement(\"a\");\r\n        a.href = url;\r\n        a.download = title;\r\n        a.click();\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.listFiles === [] ? (\r\n          <p>Aucun fichier</p>\r\n        ) : (\r\n          this.state.listFiles.map((title) => {\r\n            return (\r\n              <Row>\r\n                <Col span={12} offset={1}>\r\n                  {title}\r\n                </Col>\r\n                <Col>\r\n                  <Button\r\n                    onClick={() => {\r\n                      this.downloadFile(title);\r\n                    }}\r\n                  >\r\n                    Télécharger\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default FichiersEmis;\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nimport { Col, Form, Row, Select, DatePicker, Button, Table } from \"antd\";\r\nimport { formatDateToFormatTwo } from \"../../../util/Helpers\";\r\nimport { getAllPartenaire } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport { searchFlux } from \"../EchangeFileAPI\";\r\n\r\nconst { Option } = Select;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nconst columns = [\r\n  {\r\n    title: \"Nom de Fichier\",\r\n    dataIndex: \"nom\",\r\n    key: \"nom\",\r\n  },\r\n  {\r\n    title: \"Nombre de lignes totales\",\r\n    dataIndex: \"nombreLigneTotal\",\r\n    key: \"nombreLigneTotal\",\r\n  },\r\n  {\r\n    title: \"Nombre de lignes valides \",\r\n    dataIndex: \"nombreLigneValide\",\r\n    key: \"nombreLigneValide\",\r\n  },\r\n  {\r\n    title: \"Nombre de lignes Invalides \",\r\n    dataIndex: \"nombreLigneInvalide\",\r\n    key: \"nombreLigneInvalide\",\r\n  },\r\n  {\r\n    title: \"Etat de fichier  \",\r\n    dataIndex: \"etat\",\r\n    key: \"etat\",\r\n  },\r\n  {\r\n    title: \"Motif de rejet\",\r\n    dataIndex: \"motifRejet\",\r\n    key: \"motifRejet\",\r\n  },\r\n];\r\nclass FichiersRecus extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      partenaires: [],\r\n      typeFlux: [\r\n        {\r\n          id: \"1\",\r\n          code: \"PRL\",\r\n          libelle: \"Prélévement\",\r\n        },\r\n        {\r\n          id: \"2\",\r\n          code: \"VRS\",\r\n          libelle: \"Versement\",\r\n        },\r\n      ],\r\n      produits: [],\r\n      etat: [],\r\n      selectedProduct: \"\",\r\n      selectedPartner: \"\",\r\n      selectedEtat: \"\",\r\n      selectedFluxType: \"\",\r\n      selectedDate: \"\",\r\n      data: [],\r\n    };\r\n    this.search = this.search.bind(this);\r\n  }\r\n\r\n  partnerChange = (value) => {\r\n    this.setState({\r\n      produits: this.props.produits.filter(\r\n        (item) => item.partenaire.id === value\r\n      ),\r\n      selectedPartner: value,\r\n    });\r\n  };\r\n\r\n  handleChangeProduit = (value) => {\r\n    this.setState({\r\n      selectedProduct: value,\r\n    });\r\n  };\r\n  handleChangeTypeFlux = (value) => {\r\n    this.setState({\r\n      selectedFluxType: value,\r\n    });\r\n  };\r\n  handleChangeEtat = (value) => {\r\n    this.setState({\r\n      selectedEtat: value,\r\n    });\r\n  };\r\n\r\n  handleDateChange = (value) => {\r\n    this.setState({\r\n      selectedDate: value,\r\n    });\r\n  };\r\n\r\n  async getDroppDownData() {\r\n    const responsePartenaire = await getAllPartenaire();\r\n    this.setState({\r\n      partenaires: responsePartenaire.data.content,\r\n    });\r\n  }\r\n\r\n  async search() {\r\n    const request = {\r\n      dateTraitement: formatDateToFormatTwo(new Date(this.state.selectedDate)),\r\n      etat: this.state.selectedEtat,\r\n      partenaire: this.state.selectedPartner,\r\n      produit: this.state.selectedProduct,\r\n      typeDeFlux: this.state.selectedFluxType,\r\n    };\r\n\r\n\r\n    const result = await searchFlux(request);\r\n    this.setState({\r\n      data: result.data,\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getDroppDownData();\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 14 },\r\n      },\r\n    };\r\n    return (\r\n      <div>\r\n        <Form {...formItemLayout}>\r\n          <h3>Critères de recherche</h3>\r\n          <Row>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Intermediaire\" hasFeedback>\r\n                {getFieldDecorator(\"partenaire\", {\r\n                  rules: [\r\n                    { message: \"Veuillez séléctionner un intermediaire\" },\r\n                  ],\r\n                })(\r\n                  <Select\r\n                    placeholder=\"Sélectionnez \"\r\n                    onChange={this.partnerChange}\r\n                  >\r\n                    {this.state.partenaires.map((element) => {\r\n                      return (\r\n                        <Option value={element.id} label={element.raisonSocial}>\r\n                          {element.raisonSocial}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Form.Item label=\"Type de flux \" hasFeedback>\r\n                {getFieldDecorator(\"typeFlux\", {\r\n                  rules: [{ message: \"Veuillez séléctionner un type de flux\" }],\r\n                })(\r\n                  <Select\r\n                    placeholder=\"Sélectionnez \"\r\n                    onChange={this.handleChangeTypeFlux}\r\n                  >\r\n                    {this.state.typeFlux.map((element) => {\r\n                      return (\r\n                        <Option value={element.id} label={element.code}>\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Produit\" hasFeedback>\r\n                {getFieldDecorator(\"produit\", {\r\n                  rules: [{ message: \"Veuillez séléctionner un produit\" }],\r\n                })(\r\n                  <Select\r\n                    placeholder=\"Sélectionnez \"\r\n                    onChange={this.handleChangeProduit}\r\n                  >\r\n                    {this.state.produits.map((element) => {\r\n                      return (\r\n                        <Option value={element.id} label={element.code}>\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={12}>\r\n              <Form.Item label=\"État  \" hasFeedback>\r\n                {getFieldDecorator(\"etat\", {\r\n                  rules: [{ message: \"Veuillez séléctionner un état\" }],\r\n                })(\r\n                  <Select\r\n                    placeholder=\"Sélectionnez \"\r\n                    onChange={this.handleChangeEtat}\r\n                  >\r\n                    <Option value=\"rejeté\" label=\"Rejeté\">\r\n                      Rejeté\r\n                    </Option>\r\n\r\n                    <Option value=\"accepté\" label=\"Accepté\">\r\n                      Accepté\r\n                    </Option>\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Date de traitement \" hasFeedback>\r\n                <DatePicker\r\n                  className=\"date-style\"\r\n                  format={dateFormat}\r\n                  onChange={this.handleDateChange}\r\n                ></DatePicker>\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={11}>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={this.search}\r\n                className=\"multisteps-btn-next\"\r\n                form=\"stepfour\"\r\n              >\r\n                Rechercher\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n        <Table dataSource={this.state.data} columns={columns}></Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(FichiersRecus);\r\n","import \"antd/dist/antd.css\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  Col,\r\n  Form,\r\n  Row,\r\n  Button,\r\n  message,\r\n  Upload,\r\n  Icon,\r\n  notification\r\n} from \"antd\";\r\nimport { getPartenaireByCode } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport { getPointVenteByCodeInterne } from \"../../Parametrage/pointvente/PointVenteAPI\";\r\nimport {\r\n  getRetraiteContratByNumeroContrat,\r\n  getRetraiteProduitByCode\r\n} from \"../../Parametrage/ProduitRetraite/ProduitRetraiteAPI\";\r\nimport { addFlux } from \"../EchangeFileAPI\";\r\nimport { ajoutCotisation } from \"../../TableauBord/CotisationAPI\";\r\nclass IntegrationManuelle extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      acceptedFilesNamed: [],\r\n      filesContent: [],\r\n      etatFlux: \"accepté\",\r\n      motifRejetFlux: \"\",\r\n      partenaire: \"\",\r\n      produit: \"\",\r\n      typeFlux: \"\",\r\n      dateTraitement: \"\",\r\n      cotisationsListRequest: [],\r\n      fluxListRequest: [],\r\n      fluxRequestModel: {},\r\n      validLines: 0,\r\n      contratFound: false,\r\n      agenceFound: false,\r\n      contratObject: {},\r\n      agenceObject: {},\r\n      totalNumberLines: 0\r\n    };\r\n    this.addFileToTable = this.addFileToTable.bind(this);\r\n    this.removeFileFromTable = this.removeFileFromTable.bind(this);\r\n    this.addContentToTable = this.addContentToTable.bind(this);\r\n    this.fileTitleWorker = this.fileTitleWorker.bind(this);\r\n  }\r\n\r\n  async getPointVenteByCode(code) {\r\n    await getPointVenteByCodeInterne(code).then(responseAgence => {\r\n      this.setState({\r\n        agenceObject: responseAgence.data,\r\n        agenceFound: true\r\n      });\r\n    });\r\n  }\r\n\r\n  async getRetraiteContratByNumero(numero) {\r\n    await getRetraiteContratByNumeroContrat(numero).then(responseContrat => {\r\n      this.setState({\r\n        contratFound: true,\r\n        contratObject: responseContrat.data\r\n      });\r\n    });\r\n  }\r\n\r\n  async addCotisation(cotisationRequest) {\r\n    await ajoutCotisation(cotisationRequest);\r\n  }\r\n\r\n  addFileToTable(name) {\r\n    this.setState({\r\n      acceptedFilesNamed: [...this.state.acceptedFilesNamed, name.slice(0, -4)]\r\n    });\r\n  }\r\n\r\n  addContentToTable(content) {\r\n    this.setState({\r\n      filesContent: [...this.state.filesContent, content]\r\n    });\r\n  }\r\n\r\n  removeFileFromTable(name) {\r\n    const index = this.state.acceptedFilesNamed.indexOf(name.slice(0, -4));\r\n    const newFiles = [...this.state.acceptedFilesNamed];\r\n    newFiles.splice(index, 1);\r\n    const newContent = [...this.state.filesContent];\r\n    newContent.splice(index, 1);\r\n    this.setState({\r\n      acceptedFilesNamed: newFiles,\r\n      filesContent: newContent\r\n    });\r\n  }\r\n\r\n  async readLines(splitedFileContent, typeFlux) {\r\n    this.setState({\r\n      cotisationsListRequest: [],\r\n      validLines: 0\r\n    });\r\n    if (splitedFileContent !== []) {\r\n      let lines;\r\n      for (const element of splitedFileContent) {\r\n        lines = element.split(\"$\");\r\n        this.setState({\r\n          agenceFound: false,\r\n          contratFound: false,\r\n          contratObject: {},\r\n          agenceObject: {}\r\n        });\r\n        if (lines.length === 7) {\r\n          let line = lines;\r\n          let numeroContrat = line[0];\r\n          let codeAgence = line[1];\r\n          let montantCotisation = line[5] / 100;\r\n          let date = line[4].replaceAll(\".\", \"-\");\r\n          let dateFormated = date\r\n            .split(\"-\")\r\n            .reverse()\r\n            .join(\"-\");\r\n          await this.getRetraiteContratByNumero(numeroContrat);\r\n          if (this.state.contratFound) {\r\n            await this.getPointVenteByCode(codeAgence);\r\n            if (this.state.agenceFound) {\r\n              let requestCotisation = {\r\n                montantTTC: montantCotisation,\r\n                montantCotisation: montantCotisation.toFixed,\r\n                contributionPure: montantCotisation,\r\n                contrat: this.state.contratObject.id,\r\n                etatCotisation: \"EMIS\",\r\n                datePrelevement: dateFormated,\r\n                cotisationType:\r\n                  typeFlux === \"PRL\" ? \"Epargne periodique\" : \"Epargne Libre\"\r\n              };\r\n              this.setState({\r\n                validLines: this.state.validLines + 1\r\n              });\r\n              await this.addCotisation(requestCotisation);\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getNumberOfLinesFile(fileContent) {\r\n    const splitedFileContent = fileContent.trim().split(\"\\r\\n\");\r\n    splitedFileContent.forEach(lines => {\r\n      const line = lines.split(\"$\");\r\n      if (line.length === 2) {\r\n        this.setState({\r\n          totalNumberLines: line[0]\r\n        });\r\n      }\r\n    });\r\n  }\r\n  fileTitleWorker = async fileTitle => {\r\n    const titleElements = fileTitle.split(\"_\");\r\n    let typeFlux;\r\n    if (titleElements.length !== 4) {\r\n      this.setState({\r\n        etatFlux: \"rejeté\",\r\n        motifRejetFlux: \"Nom de fichier invalide : \" + fileTitle\r\n      });\r\n    } else {\r\n      const codePartenaire = titleElements[0];\r\n      const codeProduit = titleElements[1];\r\n      typeFlux = titleElements[2];\r\n      const dateTraitement = titleElements[3];\r\n      await getPartenaireByCode(codePartenaire)\r\n        .then(data => {\r\n          this.setState({\r\n            partenaire: data.data\r\n          });\r\n        })\r\n        .catch(error => {\r\n          this.setState({\r\n            etatFlux: \"rejeté\",\r\n            motifRejetFlux: \"Partenaire n'existe pas : \" + fileTitle\r\n          });\r\n        });\r\n      //Produit traitement\r\n      if (this.state.partenaire !== \"\") {\r\n        await getRetraiteProduitByCode(codeProduit)\r\n          .then(data => {\r\n            this.setState({\r\n              produit: data.data\r\n            });\r\n          })\r\n          .catch(error => {\r\n            this.setState({\r\n              etatFlux: \"rejeté\",\r\n              motifRejetFlux: \"Produit n'existe pas : \" + fileTitle\r\n            });\r\n          });\r\n      }\r\n      //Type flux\r\n      this.setState({\r\n        typeFlux: typeFlux\r\n      });\r\n      //dateTraitement\r\n      if (this.state.produit !== \"\") {\r\n        if (dateTraitement.length !== 8) {\r\n          this.setState({\r\n            etatFlux: \"rejeté\",\r\n            motifRejetFlux: \"La date est incorrect : \" + fileTitle\r\n          });\r\n        } else {\r\n          const day = dateTraitement.slice(0, 2);\r\n          const month = dateTraitement.slice(2, 4);\r\n          const year = dateTraitement.slice(4);\r\n          const format = year + \"-\" + month + \"-\" + day;\r\n          this.setState({\r\n            dateTraitement: format\r\n          });\r\n        }\r\n      }\r\n    }\r\n    if (this.state.etatFlux === \"rejeté\") {\r\n      const index = this.state.acceptedFilesNamed.indexOf(fileTitle);\r\n      this.getNumberOfLinesFile(this.state.filesContent[index]);\r\n      this.removeFileFromTable(fileTitle + \".txt\");\r\n      this.setState({\r\n        fluxRequestModel: {\r\n          etat: this.state.etatFlux,\r\n          typeFlux: {\r\n            id: \"1\"\r\n          },\r\n          partenaireId: \"\",\r\n          produitId: \"\",\r\n          motifRejet: this.state.motifRejetFlux,\r\n          nombreLigneTotal: parseFloat(this.state.totalNumberLines),\r\n          nombreLigneInvalide: parseFloat(this.state.totalNumberLines),\r\n          nombreLigneValide: 0,\r\n          dateTraitement: this.state.dateTraitement,\r\n          nom: fileTitle\r\n        }\r\n      });\r\n      //API FLUX FOR REJECTED FILE --->\r\n      await addFlux(this.state.fluxRequestModel);\r\n    } else {\r\n      const index = this.state.acceptedFilesNamed.indexOf(fileTitle);\r\n      this.getNumberOfLinesFile(this.state.filesContent[index]);\r\n      let splitedFileContent = this.state.filesContent[index]\r\n        .trim()\r\n        .split(\"\\r\\n\");\r\n      await this.readLines(splitedFileContent, typeFlux);\r\n      this.setState({\r\n        fluxRequestModel: {\r\n          etat: this.state.etatFlux,\r\n          partenaire: {\r\n            id: this.state.partenaire.id\r\n          },\r\n          produit: {\r\n            id: this.state.produit.id\r\n          },\r\n          motifRejet: this.state.motifRejetFlux,\r\n          nombreLigneTotal: parseFloat(this.state.totalNumberLines),\r\n          nombreLigneInvalide:\r\n            parseFloat(this.state.totalNumberLines) - this.state.validLines,\r\n          nombreLigneValide: this.state.validLines,\r\n          typeFlux: {\r\n            id: \"1\"\r\n          },\r\n          dateTraitement: this.state.dateTraitement,\r\n          nom: fileTitle\r\n        }\r\n      });\r\n      //API FLUX FOR ACCEPTED FILES --->\r\n      await addFlux(this.state.fluxRequestModel);\r\n    }\r\n  };\r\n  onChangeUpload = info => {\r\n    if (info.file.status === \"done\") {\r\n      message.success(`${info.file.name} file uploaded successfully`);\r\n      this.addFileToTable(info.file.name);\r\n    } else if (info.file.status === \"removed\") {\r\n      message.warn(`${info.file.name} file removed`);\r\n      this.removeFileFromTable(info.file.name);\r\n    } else if (info.file.status === \"error\") {\r\n      message.error(`${info.file.name} file upload failed.`);\r\n    }\r\n  };\r\n\r\n  beforeUpload = file => {\r\n    const reader = new FileReader();\r\n    reader.onload = e => {\r\n      this.addContentToTable(e.target.result);\r\n    };\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  sbmitForm = async () => {\r\n    for (const title of this.state.acceptedFilesNamed) {\r\n      this.setState({\r\n        motifRejetFlux: \"\",\r\n        totalNumberLines: 0,\r\n        dateTraitement: \"\",\r\n        etatFlux: \"accepté\",\r\n        partenaire: \"\",\r\n        produit: \"\",\r\n        typeFlux: \"\",\r\n        validLines: 0\r\n      });\r\n      await this.fileTitleWorker(title);\r\n      if (this.state.etatFlux === \"rejeté\") {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description: this.state.motifRejetFlux\r\n        });\r\n      } else {\r\n        notification.success({\r\n          message: \"Takaful\",\r\n          description: title + \" est accepté\"\r\n        });\r\n      }\r\n    }\r\n\r\n    setTimeout(() => {\r\n      window.open(\"/echangefichiers\", \"_self\");\r\n    }, 3000);\r\n  };\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 14 }\r\n      }\r\n    };\r\n    const props = {\r\n      name: \"file\",\r\n      stateProp: this.state,\r\n      action: \"https://www.mocky.io/v2/5cc8019d300000980a055e76\",\r\n      headers: {\r\n        authorization: \"authorization-text\"\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <Form {...formItemLayout}>\r\n          <h3>Intégration Manuelle</h3>\r\n          <Row>\r\n            <Col span={12}>\r\n              <Form.Item label=\"Choisissez un fichier\">\r\n                <Upload\r\n                  {...props}\r\n                  onChange={this.onChangeUpload}\r\n                  beforeUpload={this.beforeUpload}\r\n                  accept=\".txt\"\r\n                >\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Cliquez pour ajouter\r\n                  </Button>\r\n                </Upload>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"multisteps-btn-next\"\r\n                form=\"stepfour\"\r\n                onClick={this.sbmitForm}\r\n              >\r\n                Insérer\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create()(IntegrationManuelle);\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Form, Tabs } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport FichiersEmis from \"./Fichiers Emis/FichiersEmis\";\r\nimport FichiersRecus from \"./FichiersRecus/FichiersRecus\";\r\nimport IntegrationManuelle from \"./IntegrationManuelle/IntegrationManuelle\";\r\nimport { getRetraiteProduit } from \"../Parametrage/ProduitRetraite/ProduitRetraiteAPI\";\r\n\r\nconst { TabPane } = Tabs;\r\nclass EchangeFichiers extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      produits: [],\r\n    };\r\n  }\r\n  async getAllProduits() {\r\n    let responseProduit = await getRetraiteProduit();\r\n    this.setState({\r\n      produits: responseProduit.data.content,\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getAllProduits();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Tabs type=\"card\">\r\n          <TabPane tab=\"Fichiers Recus\" key=\"1\">\r\n            <FichiersRecus produits={this.state.produits} />\r\n          </TabPane>\r\n          <TabPane tab=\"Fichiers Emis \" key=\"2\">\r\n            <FichiersEmis />\r\n          </TabPane>\r\n          <TabPane tab=\"Intégration manuelle\" key=\"3\">\r\n            <IntegrationManuelle />\r\n          </TabPane>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(EchangeFichiers);\r\n","/* eslint-disable react/prop-types */\r\nimport { Divider, Icon, Menu } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport logo from \"../assets/takaLogoW.webp\";\r\nimport ConsultDecesContrat from \"./GestionContrats/ConsultDecesContrat\";\r\nimport Reglement from \"./GestionContrats/DetailsTabs/Reglement\";\r\nimport ConsultationsContratsMrb from \"./MRB/ConsultationsContratsMrb\";\r\nimport MultirisqueBatiment from \"./MRB/MultirisqueBatiment\";\r\nimport ProduitMRB from \"./MRB/ProduitMrb/ProduitMRB\";\r\nimport TypeAvenant from \"./Parametrage/avenant/TypeAvenant\";\r\nimport Partenaire from \"./Parametrage/partenaire/Partenaire\";\r\nimport PointVente from \"./Parametrage/pointvente/PointVente\";\r\nimport Participant from \"./Participants/Participant\";\r\nimport GestionAcceptation from \"./Production Prestations/GestionAcceptation/GestionAcceptation\";\r\nimport Honoraire from \"./Production Prestations/Honoraire/Honoraire\";\r\nimport Souscription from \"./Production Prestations/Souscription/Souscription\";\r\nimport Global from \"./TableauBord/Global\";\r\nimport Agenda from \"./Utilitaire/Agenda\";\r\nimport ConsultRetraiteContrat from \"./GestionContrats/RetraiteContrat/ConsultRetraiteContrat/ConsultRetraiteContrat\";\r\nimport SouscriptionRetraiteContrat from \"./GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/SouscriptionRetraiteContrat\";\r\nimport EchangeFichiers from \"./EchangeFichiersInformatiques/EchangeFichiers\";\r\nimport {\r\n  CREATION_CONTRAT,\r\n  GESTION_ACCEPTATION,\r\n  GESTION_PATAMETRAGE,\r\n  GESTION_ROLE_ET_PERMISSION,\r\n  GESTION_UTILISATEURS,\r\n  SIMULATION,\r\n  CONTRAT_DECES,\r\n  CONTRAT_MRB,\r\n  CONTRAT_RETRAITE\r\n} from \"../constants\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nclass MenuGauche extends Component {\r\n  rootSubmenuKeys = [\r\n    \"administration\",\r\n    \"parametrage\",\r\n    \"sub4\",\r\n    \"sub9\",\r\n    \"Utilitaire\"\r\n  ];\r\n\r\n  state = {\r\n    users: false,\r\n    rolesandprivileges: false,\r\n    parametrage: false,\r\n    gestionAcceptation: false,\r\n    souscription: false,\r\n    simulation: false,\r\n    deces: false,\r\n    mrb: false,\r\n    retraite: false,\r\n    openKeys: []\r\n  };\r\n\r\n  onOpenChange = openKeys => {\r\n    const latestOpenKey = openKeys.find(\r\n      key => this.state.openKeys.indexOf(key) === -1\r\n    );\r\n    if (this.rootSubmenuKeys.indexOf(latestOpenKey) === -1) {\r\n      this.setState({ openKeys });\r\n    } else {\r\n      this.setState({\r\n        openKeys: latestOpenKey ? [latestOpenKey] : []\r\n      });\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    let privilege = [];\r\n    this.props.currentUserRoles.forEach(element => {\r\n      privilege = [...privilege, ...element.privileges];\r\n    });\r\n\r\n    privilege.forEach(element => {\r\n      switch (element.name) {\r\n        case GESTION_UTILISATEURS:\r\n          this.setState({\r\n            users: true\r\n          });\r\n          break;\r\n        case GESTION_ROLE_ET_PERMISSION:\r\n          this.setState({\r\n            rolesandprivileges: true\r\n          });\r\n          break;\r\n        case GESTION_PATAMETRAGE:\r\n          this.setState({\r\n            parametrage: true\r\n          });\r\n          break;\r\n        case GESTION_ACCEPTATION:\r\n          this.setState({\r\n            gestionAcceptation: true\r\n          });\r\n          break;\r\n        case CREATION_CONTRAT:\r\n          this.setState({\r\n            souscription: true\r\n          });\r\n          break;\r\n        case SIMULATION:\r\n          this.setState({\r\n            simulation: true\r\n          });\r\n          break;\r\n        case CONTRAT_DECES:\r\n          this.setState({\r\n            deces: true\r\n          });\r\n          break;\r\n        case CONTRAT_MRB:\r\n          this.setState({\r\n            mrb: true\r\n          });\r\n          break;\r\n        case CONTRAT_RETRAITE:\r\n          this.setState({\r\n            retraite: true\r\n          });\r\n          break;\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"logo-partent\">\r\n          <Link to=\"/\">\r\n            <img src={logo} className=\"logoW\" alt=\"takaful\" />\r\n          </Link>\r\n        </div>\r\n        <Divider type=\"horizontal\" />\r\n        <Menu\r\n          mode=\"inline\"\r\n          theme=\"light\"\r\n          className=\"menu-taka-left\"\r\n          openKeys={this.state.openKeys}\r\n          onOpenChange={this.onOpenChange}\r\n        >\r\n          <Menu.Divider className=\"menu-divider\" />\r\n          {this.state.rolesandprivileges || this.state.users ? (\r\n            <SubMenu\r\n              key=\"administration\"\r\n              onTitleClick={this.onClick}\r\n              title={\r\n                <span>\r\n                  <Icon type=\"safety-certificate\" />\r\n                  <span>Administration</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Divider className=\"menu-divider\" />\r\n              {this.state.users && (\r\n                <Menu.Item key=\"users\">\r\n                  <Link to=\"/users\">\r\n                    {\" \"}\r\n                    <Icon type=\"user\" /> Utilisateurs\r\n                  </Link>\r\n                </Menu.Item>\r\n              )}\r\n\r\n              <Menu.Divider className=\"menu-Divider\" dashed=\"true\" />\r\n              {this.state.rolesandprivileges && (\r\n                <Menu.Item key=\"permission\">\r\n                  <Link to=\"/rolesAndPermission\">\r\n                    <Icon type=\"unlock\" /> Rôles et Permissions\r\n                  </Link>\r\n                </Menu.Item>\r\n              )}\r\n            </SubMenu>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <Menu.Divider className=\"menu-divider\" />\r\n\r\n          <SubMenu\r\n            key=\"parametrage\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"setting\" />\r\n                <span>Paramétrage</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Divider className=\"menu-divider\" />\r\n\r\n            <SubMenu key=\"sub19\" title={<span>Paramétrage Produit</span>}>\r\n              <Menu.Divider className=\"menu-divider\" />\r\n\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"9\">\r\n                <Link to=\"/consultproduitdeces\">\r\n                  <Icon type=\"setting\" /> Produit décès\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"Retraite-Produit\">\r\n                <Link to=\"/consultproduitretraite\">\r\n                  <Icon type=\"setting\" /> Produit retraite\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"ProduitMrb\">\r\n                <Link to=\"/ProduitMrb\" component={ProduitMRB}>\r\n                  <Icon type=\"setting\" />\r\n                  Produit MRB\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"Restitutions\">\r\n                <Link to=\"/getRestitutions\">\r\n                  <Icon type=\"setting\" /> Restitutions\r\n                </Link>\r\n              </Menu.Item>\r\n\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"CauseRestitution\">\r\n                <Link to=\"/getCauseRes\">\r\n                  <Icon type=\"setting\" /> Causes restitution\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"typePrestation\">\r\n                <Link to=\"/getPrestation\">\r\n                  <Icon type=\"setting\" /> Types prestation\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"avenant\">\r\n                <Link to=\"/avenant\" component={TypeAvenant}>\r\n                  <Icon type=\"setting\" /> Types d&apos;avenant\r\n                </Link>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Divider className=\"menu-divider\" />\r\n            <SubMenu key=\"sub90\" title={<span>Paramétrage Auxiliaire</span>}>\r\n              <Menu.Divider className=\"menu-divider\" />\r\n              <Menu.Item key=\"Auxiliaires\">\r\n                <Link to=\"/getAuxiliaires\">\r\n                  <Icon type=\"setting\" />\r\n                  Auxiliaires\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"Honoraires\">\r\n                <Link to=\"/getHonoraires\">\r\n                  <Icon type=\"setting\" />\r\n                  Honoraires\r\n                </Link>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Divider className=\"menu-divider\" />\r\n            <SubMenu key=\"sub91\" title={<span>Paramétrage Intermédiaire</span>}>\r\n              <Menu.Item key=\"partenaire\">\r\n                <Link to=\"/getAllBranche\" component={Partenaire}>\r\n                  <Icon type=\"setting\" />\r\n                  Intermédiaire\r\n                </Link>\r\n              </Menu.Item>\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"pointvente\">\r\n                <Link to=\"/pointvente\" component={PointVente}>\r\n                  <Icon type=\"setting\" /> Point de vente\r\n                </Link>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n          </SubMenu>\r\n          <Menu.Divider className=\"menu-divider\" />\r\n          {this.state.simulation && (\r\n            <Menu.Item key=\"56\">\r\n              {\" \"}\r\n              <Link to=\"/Simulation\">\r\n                <span>\r\n                  <Icon type=\"exclamation-circle\" />\r\n                  <span>Simulation Décès Financement</span>\r\n                </span>\r\n              </Link>\r\n            </Menu.Item>\r\n          )}\r\n          {this.state.simulation && (\r\n            <Menu.Item key=\"560\">\r\n              {\" \"}\r\n              <Link to=\"/SimulationMrb\">\r\n                <span>\r\n                  <Icon type=\"exclamation-circle\" />\r\n                  <span>Simulation MRB</span>\r\n                </span>\r\n              </Link>\r\n            </Menu.Item>\r\n          )}\r\n          <Menu.Divider className=\"menu-divider\" />\r\n          <Menu.Item key=\"participant\">\r\n            <Link to=\"/AllParticipant\" component={Participant}>\r\n              <Icon type=\"team\" />\r\n              Participants / Clients\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Divider className=\"menu-divider\" />\r\n          <SubMenu\r\n            key=\"sub4\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"file-text\" />\r\n                <span>Production / Prestations</span>\r\n              </span>\r\n            }\r\n          >\r\n            <Menu.Divider className=\"menu-divider\" />\r\n            {this.state.deces && (\r\n              <SubMenu\r\n                key=\"sub7\"\r\n                title={\r\n                  <span>\r\n                    {\" \"}\r\n                    <Icon type=\"file-zip\" /> Contrats Décès\r\n                  </span>\r\n                }\r\n              >\r\n                {this.state.souscription && (\r\n                  <Menu.Item key=\"23\">\r\n                    <Link to=\"/souscription\" component={Souscription}>\r\n                      <Icon type=\"user-add\" /> Nouvelle Souscription\r\n                    </Link>\r\n                  </Menu.Item>\r\n                )}\r\n                {this.state.gestionAcceptation && (\r\n                  <Menu.Item key=\"25\">\r\n                    <Link\r\n                      to=\"/gestionacceptation\"\r\n                      component={GestionAcceptation}\r\n                    >\r\n                      <Icon type=\"carry-out\" /> Gestion des acceptations\r\n                    </Link>\r\n                  </Menu.Item>\r\n                )}\r\n                <Menu.Item key=\"26\">\r\n                  <Link\r\n                    to=\"/consultDecesContrat\"\r\n                    component={ConsultDecesContrat}\r\n                  >\r\n                    <Icon type=\"schedule\" /> Gestion des contrats\r\n                  </Link>\r\n                </Menu.Item>\r\n              </SubMenu>\r\n            )}\r\n            <Menu.Divider className=\"menu-divider\" />\r\n            {this.state.retraite && (\r\n              <SubMenu\r\n                key=\"sub88\"\r\n                title={\r\n                  <span>\r\n                    {\" \"}\r\n                    <Icon type=\"file-zip\" /> Contrats Retraite\r\n                  </span>\r\n                }\r\n              >\r\n                {this.state.souscription && (\r\n                  <Menu.Item key=\"souscriptionRetraite\">\r\n                    <Link\r\n                      to=\"/souscriptionRetraiteContrat\"\r\n                      component={SouscriptionRetraiteContrat}\r\n                    >\r\n                      <Icon type=\"user-add\" /> Nouvelle Souscription\r\n                    </Link>\r\n                  </Menu.Item>\r\n                )}\r\n                <Menu.Item key=\"getRetraiteContrats\">\r\n                  <Link\r\n                    to=\"/consultRetraiteContrat\"\r\n                    component={ConsultRetraiteContrat}\r\n                  >\r\n                    <Icon type=\"schedule\" /> Gestion des contrats\r\n                  </Link>\r\n                </Menu.Item>\r\n              </SubMenu>\r\n            )}\r\n            <Menu.Item key=\"19\">\r\n              <Link to=\"/Honoraire\" component={Honoraire}>\r\n                <Icon type=\"form\" /> Honoraires\r\n              </Link>\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"20\">\r\n              <Icon type=\"money-collect\" /> Commissions\r\n            </Menu.Item>\r\n\r\n            <Menu.Item key=\"21\">\r\n              <Link to=\"/Reglement\" component={Reglement}>\r\n                <Icon type=\"file\" /> Réglements\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <Menu.Divider className=\"menu-divider\" />\r\n\r\n          <Menu.Item key=\"24\">\r\n            {\" \"}\r\n            <span style={{ color: \"white\" }}>\r\n              <Icon type=\"eye\" />\r\n              <span>Traitement périodique</span>\r\n            </span>\r\n          </Menu.Item>\r\n          <Menu.Divider className=\"menu-divider\" />\r\n          {this.state.mrb && (\r\n            <SubMenu\r\n              key=\"sub9\"\r\n              title={\r\n                <span>\r\n                  <Icon type=\"home\" />\r\n                  <span>Multirisques bâtiment</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Divider className=\"menu-divider\" />\r\n              {this.state.souscription && (\r\n                <Menu.Item key=\"31\">\r\n                  <Link\r\n                    to=\"/MultirisquesBatiment\"\r\n                    component={MultirisqueBatiment}\r\n                  >\r\n                    Nouvelle souscription MRB\r\n                  </Link>\r\n                </Menu.Item>\r\n              )}\r\n              <Menu.Divider className=\"menu-divider\" dashed=\"true\" />\r\n              <Menu.Item key=\"32\">\r\n                <Link\r\n                  to=\"/ConsultationsContratsMrb\"\r\n                  component={ConsultationsContratsMrb}\r\n                >\r\n                  Consulation des contrats MRB\r\n                </Link>\r\n              </Menu.Item>\r\n            </SubMenu>\r\n          )}\r\n          <Menu.Divider className=\"menu-divider\" />\r\n          <Menu.Item key=\"global\">\r\n            <Link to=\"/Global\" component={Global}>\r\n              <Icon type=\"dashboard\" />\r\n              Tableau de bord\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Divider className=\"menu-divider\" />\r\n          <Menu.Item key=\"echangefichiers\">\r\n            <Link to=\"/echangefichiers\" component={EchangeFichiers}>\r\n              <Icon type=\"file\" />\r\n              Échange fichiers informatiques\r\n            </Link>\r\n          </Menu.Item>\r\n\r\n          <Menu.Divider className=\"menu-divider\" />\r\n\r\n          <SubMenu\r\n            key=\"Utilitaire\"\r\n            title={\r\n              <span>\r\n                <Icon type=\"idcard\" />\r\n                <span>Utilitaires</span>\r\n              </span>\r\n            }\r\n          >\r\n            {/* <Menu.Item key=\"Discussion\">\r\n              <Link to=\"Discussion\">\r\n                <span>\r\n                  <Icon type=\"wechat\" />\r\n                  <span>Discussion</span>\r\n                </span>\r\n              </Link>\r\n            </Menu.Item> */}\r\n            <Menu.Item key=\"Agenda\">\r\n              <Link to=\"/Agenda\" component={Agenda}>\r\n                <Icon type=\"calendar\" /> Agenda\r\n              </Link>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n        </Menu>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuGauche;\r\n","/* eslint-disable react/prop-types */\r\nimport \"./MenuGauche.css\";\r\nimport React, { Component } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport MenuGauche from \"../menutakaful/MenuGauche\";\r\n\r\nclass MenuTakaful extends Component {\r\n  render() {\r\n    var text = \"\";\r\n    if (this.props.isAuthenticated) {\r\n      text = <MenuGauche currentUserRoles={this.props.currentUser.roles} />;\r\n    }\r\n    return <div>{text}</div>;\r\n  }\r\n}\r\nexport default withRouter(MenuTakaful);\r\n","import \"./Login.css\";\r\nimport { Button, Form, Icon, Input, notification } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { ACCESS_TOKEN, UserID } from \"../../constants/index\";\r\nimport logo from \"../../assets/takaLogo.webp\";\r\nimport { login } from \"../UserAPI\";\r\n\r\nconst FormItem = Form.Item;\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    const AntWrappedLoginForm = Form.create()(LoginForm);\r\n    return (\r\n      <div className=\"login-container\">\r\n        <div className=\"login\">\r\n          <img src={logo} className=\"logo2\" alt=\"takaful\" />\r\n          <div className=\"login-content\">\r\n            <AntWrappedLoginForm onLogin={this.props.onLogin} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass LoginForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        const loginRequest = Object.assign({}, values);\r\n        login(loginRequest)\r\n          .then(response => {\r\n            localStorage.setItem(ACCESS_TOKEN, response.headers.authorization);\r\n            localStorage.setItem(UserID, response.headers.userid);\r\n            this.props.onLogin();\r\n          })\r\n          .catch(error => {\r\n            if (error.status === 401) {\r\n              notification.error({\r\n                message: \"Takaful\",\r\n                description:\r\n                  \"Email ou mot de passe inccorect.Veuillez réessayer!\"\r\n              });\r\n            } else {\r\n              notification.error({\r\n                message: \"Takaful\",\r\n                description:\r\n                  \"Pardon! Quelque chose a mal tourné. Veuillez réessayer!\"\r\n              });\r\n            }\r\n          });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\r\n        <FormItem>\r\n          {getFieldDecorator(\"email\", {\r\n            rules: [{ required: true, message: \"E\" }]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"user\" />}\r\n              size=\"large\"\r\n              name=\"email\"\r\n              placeholder=\"Identifiant\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          {getFieldDecorator(\"password\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Veuillez saisir votre mot de passe!\"\r\n              }\r\n            ]\r\n          })(\r\n            <Input\r\n              prefix={<Icon type=\"lock\" />}\r\n              size=\"large\"\r\n              name=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Mot de passe\"\r\n            />\r\n          )}\r\n        </FormItem>\r\n        <FormItem>\r\n          <Button\r\n            type=\"primary\"\r\n            id=\"loginButton\"\r\n            htmlType=\"submit\"\r\n            size=\"large\"\r\n            className=\"login-form-button\"\r\n          >\r\n            S'identifier\r\n          </Button>\r\n        </FormItem>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import \"./ServerError.css\";\r\n\r\nimport { Button } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ServerError extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"server-error-page\">\r\n        <h1 className=\"server-error-title\">500</h1>\r\n        <div className=\"server-error-desc\">\r\n          Oops! Quelque chose s'est mal passé sur notre serveur. Pourquoi tu ne\r\n          reviens pas?\r\n        </div>\r\n        <Link to=\"/\">\r\n          <Button\r\n            className=\"server-error-go-back-btn\"\r\n            type=\"primary\"\r\n            size=\"large\"\r\n          >\r\n            Retourner\r\n          </Button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ServerError;\r\n","const colors = [\r\n  \"#F44336\",\r\n  \"#e91e63\",\r\n  \"#9c27b0\",\r\n  \"#673ab7\",\r\n  \"#ff9800\",\r\n  \"#ff5722\",\r\n  \"#795548\",\r\n  \"#607d8b\",\r\n  \"#3f51b5\",\r\n  \"#2196F3\",\r\n  \"#00bcd4\",\r\n  \"#009688\",\r\n  \"#2196F3\",\r\n  \"#32c787\",\r\n  \"#00BCD4\",\r\n  \"#ff5652\",\r\n  \"#ffc107\",\r\n  \"#ff85af\",\r\n  \"#FF9800\",\r\n  \"#39bbb0\",\r\n  \"#4CAF50\",\r\n  \"#ffeb3b\",\r\n  \"#ffc107\",\r\n];\r\n\r\nexport function getAvatarColor(name) {\r\n  name = name.substr(0, 6);\r\n  var hash = 0;\r\n  for (var i = 0; i < name.length; i++) {\r\n    hash = 31 * hash + name.charCodeAt(i);\r\n  }\r\n  var index = Math.abs(hash % colors.length);\r\n  return colors[index];\r\n}\r\n","import \"./Profile.css\";\r\nimport { Avatar } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport LoadingIndicator from \"../../common/LoadingIndicator\";\r\nimport NotFound from \"../../common/NotFound\";\r\nimport ServerError from \"../../common/ServerError\";\r\nimport { getAvatarColor } from \"../../util/Colors\";\r\nimport { formatDate } from \"../../util/Helpers\";\r\nimport { getUserProfile } from \"../UserAPI\";\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      isLoading: false,\r\n    };\r\n    this.loadUserProfile = this.loadUserProfile.bind(this);\r\n  }\r\n  loadUserProfile(username) {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    getUserProfile(username)\r\n      .then((response) => {\r\n        this.setState({\r\n          user: response,\r\n          isLoading: false,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        if (error.status === 404) {\r\n          this.setState({\r\n            notFound: true,\r\n            isLoading: false,\r\n          });\r\n        } else {\r\n          this.setState({\r\n            serverError: true,\r\n            isLoading: false,\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const username = this.props.match.params.username;\r\n    this.loadUserProfile(username);\r\n  }\r\n\r\n  componentDidUpdate(nextProps) {\r\n    if (this.props.match.params.username !== nextProps.match.params.username) {\r\n      this.loadUserProfile(nextProps.match.params.username);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n    if (this.state.notFound) {\r\n      return <NotFound />;\r\n    }\r\n    if (this.state.serverError) {\r\n      return <ServerError />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"profile\">\r\n        {this.state.user ? (\r\n          <div className=\"user-profile\">\r\n            <div className=\"user-details\">\r\n              <div className=\"user-avatar\">\r\n                <Avatar\r\n                  className=\"user-avatar-circle\"\r\n                  style={{\r\n                    backgroundColor: getAvatarColor(this.state.user.name),\r\n                  }}\r\n                >\r\n                  {this.state.user.name[0].toUpperCase()}\r\n                </Avatar>\r\n              </div>\r\n              <div className=\"user-summary\">\r\n                <div className=\"full-name\">{this.state.user.name}</div>\r\n                <div className=\"username\">@{this.state.user.username}</div>\r\n                <div className=\"user-joined\">\r\n                  Joined {formatDate(this.state.user.joinedAt)}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Profile;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Button, Form, Input, notification } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { addNewPermission } from \"../../AdministartionAPI\";\r\n\r\nclass AddPermission extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { privileges: this.props.privileges };\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        this.addPermission(values.name);\r\n      }\r\n    });\r\n  };\r\n\r\n  async addPermission(values) {\r\n    try {\r\n      let response = await addNewPermission(values);\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"Permission bien crier\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message || \"Sorry! Something went wrong. Please try again!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 5 }}\r\n        wrapperCol={{ span: 12 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"Permission\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [\r\n              { required: true, message: \"la permission  doit avoir un titre\" }\r\n            ]\r\n          })(\r\n            <Input\r\n              className=\"not-rounded\"\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Tapez le titre\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 12, offset: 5 }}>\r\n          <Button className=\"not-rounded\" type=\"primary\" htmlType=\"Ajouter\">\r\n            Ajouter\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default Form.create({ name: \"coordinated\" })(AddPermission);\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Button, Form, Input, notification, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { addNewRole } from \"../../AdministartionAPI\";\r\n\r\n\r\nconst { Option } = Select;\r\n\r\nclass AddRole extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { privileges: this.props.privileges };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        delete values.confirm;\r\n        let privileges = [];\r\n        values.privileges.forEach((element) => {\r\n          privileges.push({ name: element });\r\n        });\r\n        values.privileges = [...privileges];\r\n        this.addRole(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  async addRole(values) {\r\n    try {\r\n      let response = await addNewRole(values);\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"Role bien crier\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message ||\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 12 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"Rôle\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true, message: \"le role doit avoir un titre\" }],\r\n          })(\r\n            <Input\r\n              className=\"not-rounded\"\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Tapez le role\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Permissions\">\r\n          {getFieldDecorator(\"privileges\")(\r\n            <Select\r\n              mode=\"multiple\"\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"cliquez pour ajouter des permissions\"\r\n              optionLabelProp=\"label\"\r\n            >\r\n              {this.state.privileges.map((element) => {\r\n                return (\r\n                  <Option value={element.name} label={element.name}>\r\n                    {element.name}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 12, offset: 8 }}>\r\n          <Button className=\"not-rounded\" type=\"primary\" htmlType=\"Ajouter\">\r\n            Ajouter\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default Form.create({ name: \"coordinated\" })(AddRole);\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Button, Form, Input, notification, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { editRole } from \"../../AdministartionAPI\";\r\nconst { Option } = Select;\r\n\r\nclass EditRole extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { privileges: this.props.privileges, roles: this.props.roles };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        delete values.confirm;\r\n        let privileges = [];\r\n        values.privileges.forEach((element) => {\r\n          privileges.push({ name: element });\r\n        });\r\n        values.privileges = [...privileges];\r\n        let requestValues = { ...values };\r\n        delete requestValues.roles;\r\n        this.editRole(requestValues, values.roles.key);\r\n      }\r\n    });\r\n  };\r\n\r\n  async editRole(values, id) {\r\n    try {\r\n      let response = await editRole(values, id);\r\n      if (response.status === 200) {\r\n        let newroles = [...this.state.roles];\r\n        newroles.forEach((element) => {\r\n          if (element.id === id) element.name = values.name;\r\n          element.privileges = [...values.privileges];\r\n        });\r\n        this.setState({ roles: [...newroles] });\r\n        notification.success({\r\n          message: \"Role bien modifier\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message ||\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\",\r\n      });\r\n    }\r\n  }\r\n  handleSelectChange = (value) => {\r\n    let row = this.state.roles.filter((item) => item.id === value.key)[0];\r\n    let privileges = [];\r\n    if (row.privileges.length > 0)\r\n      row.privileges.forEach((element) => {\r\n        privileges.push(element.name);\r\n      });\r\n    this.props.form.setFieldsValue({\r\n      name: value.label,\r\n      privileges: privileges,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    return (\r\n      <Form\r\n        labelCol={{ span: 8 }}\r\n        wrapperCol={{ span: 12 }}\r\n        onSubmit={this.handleSubmit}\r\n      >\r\n        <Form.Item label=\"sélectionnez un rôle\">\r\n          {getFieldDecorator(\"roles\")(\r\n            <Select\r\n              style={{ width: \"100%\" }}\r\n              labelInValue\r\n              placeholder=\"cliquez pour ajouter des permissions\"\r\n              onChange={this.handleSelectChange}\r\n            >\r\n              {this.state.roles.map((element) => {\r\n                return (\r\n                  <Option value={element.id} label={element.name}>\r\n                    {element.name}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"titre\">\r\n          {getFieldDecorator(\"name\", {\r\n            rules: [{ required: true, message: \"le role doit avoir un titre\" }],\r\n          })(\r\n            <Input\r\n              className=\"not-rounded\"\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"Tapez le role\"\r\n            />\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Permissions\">\r\n          {getFieldDecorator(\"privileges\")(\r\n            <Select\r\n              mode=\"multiple\"\r\n              style={{ width: \"100%\" }}\r\n              placeholder=\"cliquez pour la selection\"\r\n              optionLabelProp=\"label\"\r\n            >\r\n              {this.state.privileges.map((element) => {\r\n                return (\r\n                  <Option value={element.name} label={element.name}>\r\n                    {element.name}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item wrapperCol={{ span: 12, offset: 8 }}>\r\n          <Button className=\"not-rounded\" type=\"primary\" htmlType=\"Ajouter\">\r\n            Modifier\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nexport default Form.create({ name: \"coordinated\" })(EditRole);\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Input, Tree } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst { TreeNode } = Tree;\r\nconst { Search } = Input;\r\n\r\nconst dataList = [];\r\n\r\nconst generateList = (data) => {\r\n  for (let i of data) {\r\n    const node = i;\r\n    const { key } = node;\r\n    dataList.push({ key, title: key });\r\n    if (node.children) {\r\n      generateList(node.children);\r\n    }\r\n  }\r\n};\r\n\r\nconst getParentKey = (key, tree) => {\r\n  let parentKey;\r\n  for (let i of tree) {\r\n    const node = i;\r\n    if (node.children) {\r\n      if (node.children.some((item) => item.key === key)) {\r\n        parentKey = node.key;\r\n      } else if (getParentKey(key, node.children)) {\r\n        parentKey = getParentKey(key, node.children);\r\n      }\r\n    }\r\n  }\r\n  return parentKey;\r\n};\r\n\r\nclass SearchTree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      expandedKeys: [],\r\n      searchValue: \"\",\r\n      autoExpandParent: true,\r\n      newData: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.prepareDataJsonFormat();\r\n  }\r\n  prepareDataJsonFormat() {\r\n    let mynewDataHelper = [];\r\n    this.props.Roles.forEach((element) => {\r\n      let childData = [];\r\n      element.privileges.forEach((privilege) => {\r\n        let itemChild = { key: privilege.name, title: privilege.name };\r\n        childData.push(itemChild);\r\n      });\r\n      let item = {\r\n        key: element.name,\r\n        title: element.name,\r\n        children: childData,\r\n      };\r\n      mynewDataHelper.push(item);\r\n    });\r\n    this.setState({ newData: [...mynewDataHelper] });\r\n    generateList(mynewDataHelper);\r\n  }\r\n\r\n  onExpand = (expandedKeys) => {\r\n    this.setState({\r\n      expandedKeys,\r\n      autoExpandParent: false,\r\n    });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const { value } = e.target;\r\n    const expandedKeys = dataList\r\n      .map((item) => {\r\n        if (item.title.indexOf(value) > -1) {\r\n          return getParentKey(item.key, this.state.newData);\r\n        }\r\n        return null;\r\n      })\r\n      .filter((item, i, self) => item && self.indexOf(item) === i);\r\n    this.setState({\r\n      expandedKeys,\r\n      searchValue: value,\r\n      autoExpandParent: true,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { searchValue, expandedKeys, autoExpandParent } = this.state;\r\n    const loop = (data) =>\r\n      data.map((item) => {\r\n        const index = item.title.indexOf(searchValue);\r\n        const beforeStr = item.title.substr(0, index);\r\n        const afterStr = item.title.substr(index + searchValue.length);\r\n        const title =\r\n          index > -1 ? (\r\n            <span>\r\n              {beforeStr}\r\n              <span style={{ color: \"#f50\" }}>{searchValue}</span>\r\n              {afterStr}\r\n            </span>\r\n          ) : (\r\n            <span>{item.title}</span>\r\n          );\r\n        if (item.children) {\r\n          return (\r\n            <TreeNode key={item.key} title={title}>\r\n              {loop(item.children)}\r\n            </TreeNode>\r\n          );\r\n        }\r\n        return <TreeNode key={item.key} title={title} />;\r\n      });\r\n    return (\r\n      <div>\r\n        <Search\r\n          style={{ marginBottom: 8 }}\r\n          placeholder=\"Rechercher\"\r\n          onChange={this.onChange}\r\n        />\r\n        <Tree\r\n          onExpand={this.onExpand}\r\n          expandedKeys={expandedKeys}\r\n          autoExpandParent={autoExpandParent}\r\n        >\r\n          {loop(this.state.newData)}\r\n        </Tree>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchTree;\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Col, Collapse, Row } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport AddPermission from \"./AddPermission/AddPermission\";\r\nimport AddRole from \"./AddRole/AddRole\";\r\nimport EditRole from \"./EditRole/EditRole\";\r\nimport SearchTree from \"./SearchTree/SearchTree\";\r\nimport { getAllPrivileges, getAllRoles } from \"../AdministartionAPI\";\r\n\r\nconst { Panel } = Collapse;\r\n\r\nclass RolesAndPermission extends Component {\r\n  state = {\r\n    rolesloaded: false,\r\n    roles: [],\r\n    privileges: []\r\n  };\r\n\r\n  async getRoles() {\r\n    let response = await getAllRoles();\r\n    let responseP = await getAllPrivileges();\r\n\r\n    this.setState({\r\n      rolesloaded: true,\r\n      roles: [...response.data.content],\r\n      privileges: [...responseP.data]\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getRoles();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Rôles et permissions\" />\r\n        <Collapse>\r\n          <Panel header=\"Gestion des rôles\" key=\"1\">\r\n            <Row>\r\n              <Col span={10}>\r\n                {this.state.rolesloaded && (\r\n                  <SearchTree Roles={this.state.roles}></SearchTree>\r\n                )}\r\n              </Col>\r\n\r\n              <Col offset={1} span={13}>\r\n                <Collapse>\r\n                  <Panel header=\"Ajouter un rôle\" key=\"1\">\r\n                    <AddRole privileges={this.state.privileges}></AddRole>\r\n                  </Panel>\r\n                  <Panel header=\"Modifier un rôle\" key=\"2\">\r\n                    <EditRole\r\n                      privileges={this.state.privileges}\r\n                      roles={this.state.roles}\r\n                    ></EditRole>\r\n                  </Panel>\r\n                </Collapse>\r\n              </Col>\r\n            </Row>\r\n          </Panel>\r\n          <Panel header=\"Gestion des permissions\" key=\"2\">\r\n            <AddPermission privileges={this.state.privileges}></AddPermission>\r\n          </Panel>\r\n        </Collapse>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default RolesAndPermission;\r\n","/* eslint-disable react/jsx-key */\r\n/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getAllPartenaire } from \"../../partenaire/PartenaireAPI\";\r\nimport { getAllPointVente } from \"../../pointvente/PointVenteAPI\";\r\nimport { getTypePrestation } from \"../../TypePrestation/PrestationAPI\";\r\nimport {\r\n  getPieceJoint,\r\n  getOption\r\n} from \"../../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\n\r\nlet id = 0;\r\nlet i = 0;\r\nlet j = 0;\r\nconst { Option } = Select;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nvar selected = [];\r\n\r\nclass StepFive extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      commissions: [],\r\n      references: {},\r\n      option: [],\r\n      points: {},\r\n      count: 0,\r\n      current: 6,\r\n      typeTar: \"\",\r\n      typePrestation: [],\r\n      pieceJointe: [],\r\n      adresse: [],\r\n      pointVente: [],\r\n      partenaire: []\r\n    };\r\n  }\r\n\r\n  remove = k => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    // We need at least one passenger\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k)\r\n    });\r\n  };\r\n\r\n  removed = c => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const cleFieldValue = form.getFieldValue(\"cle\");\r\n    // We need at least one passenger\r\n    if (cleFieldValue.length === 1) {\r\n      return;\r\n    }\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      cle: cleFieldValue.filter(p => p !== c)\r\n    });\r\n  };\r\n\r\n  handleChanged = e => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  removeOption = o => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const optFieldValue = form.getFieldValue(\"opt\");\r\n    // We need at least one passenger\r\n    if (optFieldValue.length === 1) {\r\n      return;\r\n    }\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      opt: optFieldValue.filter(p => p !== o)\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    if (this.state.typeTar !== \"\") {\r\n      const { form } = this.props;\r\n      // can use data-binding to get\r\n      const keys = form.getFieldValue(\"keys\");\r\n      const nextKeys = keys.concat(id++);\r\n      // can use data-binding to set\r\n      // important! notify form to detect changes\r\n      form.setFieldsValue({\r\n        keys: nextKeys\r\n      });\r\n    } else {\r\n      message.warning(\"Choississez le type de tarrification\");\r\n    }\r\n  };\r\n\r\n  ajout = () => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const cle = form.getFieldValue(\"cle\");\r\n    const nextCle = cle.concat(i++);\r\n    // can use data-binding to set\r\n    // important! notify form to detect changes\r\n    form.setFieldsValue({\r\n      cle: nextCle\r\n    });\r\n  };\r\n\r\n  ajouter = () => {\r\n    const { form } = this.props;\r\n    const opt = form.getFieldValue(\"opt\");\r\n    const nextOpt = opt.concat(j++);\r\n    form.setFieldsValue({\r\n      opt: nextOpt\r\n    });\r\n  };\r\n\r\n  handleSubmited = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      let references = [];\r\n      references = {\r\n        ageEcheance: values.ageEcheance,\r\n        pointVente: values.pointVente,\r\n        numeroCompte: values.numeroCompte,\r\n        codeCompte: values.codeCompte,\r\n        libelleAgence: values.libelleAgence,\r\n        responsableProduction: values.responsableProduction,\r\n        responsablePrestation: values.responsablePrestation\r\n      };\r\n\r\n      let data = [];\r\n      let index = 0;\r\n      for (index; index < values.cle.length; index++) {\r\n        data = {\r\n          commissionPartenaire: values.commissionPartenaire[index],\r\n          dateDebut: values.debut[index],\r\n          tva: values.tva[index]\r\n        };\r\n        this.state.commissions.push(data);\r\n      }\r\n      let data3 = [];\r\n      for (index = 0; index < values.opt.length; index++) {\r\n        data3 = {\r\n          libelle: values.libelle[index],\r\n          max: values.max[index],\r\n          min: values.min[index]\r\n        };\r\n        this.state.option.push(data3);\r\n      }\r\n      if (\r\n        values.ageEcheance !== null &&\r\n        values.pointVente !== undefined &&\r\n        values.numeroCompte !== null &&\r\n        values.codeCompte !== null &&\r\n        values.libelleAgence !== null\r\n      ) {\r\n        this.props.check(\r\n          this.state.commissions,\r\n          references,\r\n          this.state.option,\r\n          this.state.current\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  prev() {\r\n    const currentStep = this.state.current - 1;\r\n    this.props.check(\r\n      this.state.commissions,\r\n      this.state.references,\r\n      this.state.option,\r\n      currentStep\r\n    );\r\n  }\r\n\r\n  handleChange(value) {\r\n    selected = value;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllTypePrestation();\r\n    this.getAllPiece();\r\n    this.getAllPointVentes();\r\n    this.getAllOption();\r\n    this.getAllPartenaires();\r\n  }\r\n  async getAllPointVentes() {\r\n    let response = await getAllPointVente();\r\n    this.setState({\r\n      pointVente: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllPartenaires() {\r\n    let response = await getAllPartenaire();\r\n    this.setState({\r\n      partenaire: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllOption() {\r\n    let response = await getOption();\r\n    this.setState({\r\n      option: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllTypePrestation() {\r\n    let response = await getTypePrestation();\r\n    this.setState({\r\n      typePrestation: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllPiece() {\r\n    let response = await getPieceJoint();\r\n    this.setState({\r\n      pieceJointe: response.data.content\r\n    });\r\n  }\r\n\r\n  handleChangeTarrification = value => {\r\n    this.setState({\r\n      typeTar: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const formItemLayoutWithOutLabel = {\r\n      wrapperCol: {\r\n        xs: { span: 24, offset: 0 },\r\n        sm: { span: 20, offset: 4 }\r\n      }\r\n    };\r\n    getFieldDecorator(\"keys\", { initialValue: [] });\r\n    const keys = getFieldValue(\"keys\");\r\n    keys.map((k, index) => (\r\n      <div>\r\n        <Row span={24}>\r\n          <Col span={4}>\r\n            <Form.Item label=\"Durée\" required={false}>\r\n              {getFieldDecorator(`dureeMin[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"Mois\" placeholder=\"Min\" />)}\r\n              {getFieldDecorator(`dureeMax[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"Mois\" placeholder=\"Max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Age\" required={false}>\r\n              {getFieldDecorator(`ageMin[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"Ans\" placeholder=\"Min\" />)}\r\n              {getFieldDecorator(`ageMax[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"Ans\" placeholder=\"Max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Capital\" required={false}>\r\n              {getFieldDecorator(`capitalMin[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"Dhs\" placeholder=\"Min\" />)}\r\n              {getFieldDecorator(`capitalMax[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"Dhs\" placeholder=\"Max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Différé\" required={false}>\r\n              {getFieldDecorator(`differeMin[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"Mois\" placeholder=\"Min\" />)}\r\n              {getFieldDecorator(`differeMax[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"Mois\" placeholder=\"Max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label={this.state.typeTar} required={false} key={k}>\r\n              {getFieldDecorator(`tauxFor[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs Obligatoire.\"\r\n                  }\r\n                ]\r\n              })(\r\n                this.state.typeTar === \"Taux\" ? (\r\n                  <Input addonAfter=\"%\" placeholder=\"Taux\" />\r\n                ) : (\r\n                  <Input addonAfter=\"%\" placeholder=\"Forfait\" />\r\n                )\r\n              )}\r\n\r\n              {keys.length > 1 ? (\r\n                <Icon\r\n                  className=\"dynamic-delete-button\"\r\n                  type=\"minus-circle-o\"\r\n                  onClick={() => this.remove(k)}\r\n                />\r\n              ) : null}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    ));\r\n    getFieldDecorator(\"opt\", { initialValue: [] });\r\n    const opt = getFieldValue(\"opt\");\r\n    const formItems2 = opt.map((o, index) => (\r\n      <div>\r\n        <Row span={24}>\r\n          <Col span={6} offset={1}>\r\n            <Form.Item label=\"Libelle\" required={false}>\r\n              {getFieldDecorator(`libelle[${o}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={6} offset={2}>\r\n            <Form.Item label=\"Min\" required={false} key={o}>\r\n              {getFieldDecorator(`min[${o}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs Obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={6} offset={2}>\r\n            <Form.Item label=\"Max\" required={false}>\r\n              {getFieldDecorator(`max[${o}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"Champs obligatoire.\"\r\n                  }\r\n                ]\r\n              })(<Input />)}\r\n\r\n              {opt.length > 1 ? (\r\n                <Icon\r\n                  className=\"dynamic-delete-button\"\r\n                  type=\"minus-circle-o\"\r\n                  onClick={() => this.removeOption(o)}\r\n                />\r\n              ) : null}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    ));\r\n\r\n    getFieldDecorator(\"cle\", { initialValue: [] });\r\n    const cle = getFieldValue(\"cle\");\r\n    const formItems1 = cle.map((c, index) => (\r\n      <div>\r\n        <Row span={24}>\r\n          <Col span={7} offset={1}>\r\n            <Form.Item label=\"Commission partenaire\" required={false}>\r\n              {getFieldDecorator(`commissionPartenaire[${c}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"%\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n\r\n          <Col span={7} offset={1}>\r\n            <Form.Item label=\"Début\">\r\n              {getFieldDecorator(`debut[${c}]`, {\r\n                rules: [\r\n                  {\r\n                    required: true\r\n                  }\r\n                ]\r\n              })(\r\n                <DatePicker\r\n                  format={dateFormat}\r\n                  onChange={this.onChangeDate}\r\n                ></DatePicker>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={5} offset={0}>\r\n            <Form.Item label=\"TVA\" required={false} key={c}>\r\n              {getFieldDecorator(`tva[${c}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"%\" />)}\r\n\r\n              {cle.length > 1 ? (\r\n                <Icon\r\n                  className=\"dynamic-delete-button\"\r\n                  type=\"minus-circle-o\"\r\n                  onClick={() => this.removed(c)}\r\n                />\r\n              ) : null}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    ));\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form id=\"laststep\" onSubmit={this.handleSubmited}>\r\n            <Col span={24}>\r\n              <Divider orientation=\"left\">Modalités prestations</Divider>\r\n            </Col>\r\n\r\n            <Col span={8} offset={1}>\r\n              <Form.Item label=\"Age échéance\">\r\n                {getFieldDecorator(\"ageEcheance\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                      message: \"Format invalide!\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"ANS\"\r\n                    name=\"ageEcheance\"\r\n                    onChange={this.handleChanged}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Divider orientation=\"left\">Gestoinnaire de la police</Divider>\r\n            </Col>\r\n\r\n            <Col span={8} offset={1}>\r\n              <Form.Item label=\"Responsable production\">\r\n                {getFieldDecorator(\"responsableProduction\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire\"\r\n                    }\r\n                  ]\r\n                })(<Input name=\"responsableProduction\" />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={8} offset={1}>\r\n              <Form.Item label=\"Responsable prestation\">\r\n                {getFieldDecorator(\"responsablePrestation\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire\"\r\n                    }\r\n                  ]\r\n                })(<Input name=\"responsablePrestation\" />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Divider orientation=\"left\">Point de ventes</Divider>\r\n            </Col>\r\n            <Col span={14} offset={1}>\r\n              <Form.Item label=\"Points de ventes\">\r\n                {getFieldDecorator(\r\n                  \"pointVente\",\r\n\r\n                  {\r\n                    rules: [{ required: true, message: \"Format invalide!\" }]\r\n                  }\r\n                )(\r\n                  <Select\r\n                    name=\"motivations\"\r\n                    mode=\"multiple\"\r\n                    placeholder=\"Selectionnez ...\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.pointVente.map(element => {\r\n                      return (\r\n                        <Option value={element.id} label={element.libelle}>\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Divider orientation=\"left\">Références bancaire</Divider>\r\n            </Col>\r\n\r\n            <Col span={6} offset={1}>\r\n              <Form.Item label=\"Numéro compte\">\r\n                {getFieldDecorator(\"numeroCompte\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                      message: \"Format invalide!\"\r\n                    }\r\n                  ]\r\n                })(<Input name=\"numeroCompte\" onChange={this.handleChanged} />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6} offset={2}>\r\n              <Form.Item label=\"Libellé agence\">\r\n                {getFieldDecorator(\"libelleAgence\", {\r\n                  rules: [{ required: true, message: \"Champs Obligatoire !\" }]\r\n                })(\r\n                  <Input name=\"libelleAgence\" onChange={this.handleChanged} />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={6} offset={2}>\r\n              <Form.Item label=\"Code Compte\">\r\n                {getFieldDecorator(\"codeCompte\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                      message: \"Format invalide!\"\r\n                    }\r\n                  ]\r\n                })(<Input name=\"codeCompte\" onChange={this.handleChanged} />)}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={24}>\r\n              <Divider orientation=\"left\">Commission</Divider>\r\n              {formItems1}\r\n\r\n              <Form.Item {...formItemLayoutWithOutLabel}>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={this.ajout}\r\n                  style={{ width: \"60%\" }}\r\n                >\r\n                  <Icon type=\"plus\" /> Ajouter\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Divider orientation=\"left\">Option Assurance</Divider>\r\n              {formItems2}\r\n              <Form.Item {...formItemLayoutWithOutLabel}>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={this.ajouter}\r\n                  style={{ width: \"60%\" }}\r\n                >\r\n                  <Icon type=\"plus\" /> Ajouter\r\n                </Button>\r\n              </Form.Item>\r\n            </Col>\r\n            <Divider />\r\n            <Form.Item {...formItemLayoutWithOutLabel}></Form.Item>\r\n            <Form.Item>\r\n              <Form.Item>\r\n                {this.state.current === 6 && (\r\n                  <Button type=\"primary\" form=\"laststep\" htmlType=\"submit\">\r\n                    <Icon type=\"save\" />\r\n                    Enregistrer\r\n                  </Button>\r\n                )}\r\n                {this.state.current > 0 && (\r\n                  <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                    <Icon type=\"arrow-left\" />\r\n                    Précédent\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Form.Item>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({ name: \"global_state\" })(StepFive);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  InputNumber,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getHonoraire } from \"../../Honoraires/HonorairesAPI\";\r\nimport {\r\n  getCauseRes,\r\n  getRestitutions\r\n} from \"../../Restitutions/RestitutionAPI\";\r\nimport { getPieceJoint } from \"../../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\n\r\nlet id = 0;\r\nlet j = 0;\r\nlet i = 0;\r\nlet l = 0;\r\nlet x = localStorage.getItem(\"seuilExaminateur\");\r\nconst { Option } = Select;\r\n\r\nfunction validatePrimeNumber(number) {\r\n  if (number >= x) {\r\n    return {\r\n      validateStatus: \"success\",\r\n      errorMsg: null\r\n    };\r\n  }\r\n  return {\r\n    validateStatus: \"error\",\r\n    errorMsg:\r\n      \"Le capital min doit être égal ou supérieur au seuil examinateur qui égal \" +\r\n      x\r\n  };\r\n}\r\nclass StepFour extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      number: {\r\n        value: x\r\n      },\r\n      pieceJointe: [],\r\n      restitution: [],\r\n      restitutions: [],\r\n      normesSelection: [],\r\n      causeRes: [],\r\n      localNorme: [],\r\n      localRestitution: [],\r\n      honoraire: [],\r\n      restitutionList: [],\r\n      current: 5\r\n    };\r\n  }\r\n\r\n  handleNumberChange = value => {\r\n    this.setState({\r\n      number: {\r\n        ...validatePrimeNumber(value),\r\n        value\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllPiece();\r\n    this.getAllRestitution();\r\n    this.getAllCauseRes();\r\n    this.getAllHonoraire();\r\n  }\r\n\r\n  async getAllPiece() {\r\n    let response = await getPieceJoint();\r\n    this.setState({\r\n      pieceJointe: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllHonoraire() {\r\n    let response = await getHonoraire();\r\n\r\n    this.setState({\r\n      honoraire: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllRestitution() {\r\n    let response = await getRestitutions();\r\n    this.setState({\r\n      restitution: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllCauseRes() {\r\n    let response = await getCauseRes();\r\n    this.setState({\r\n      causeRes: response.data.content\r\n    });\r\n  }\r\n\r\n  remove = k => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    // We need at least one passenger\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      keys: keys.filter(key => key !== k)\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    const nextKeys = keys.concat(id++);\r\n    // can use data-binding to set\r\n    // important! notify form to detect changes\r\n\r\n    form.setFieldsValue({\r\n      keys: nextKeys\r\n    });\r\n  };\r\n\r\n  removed = c => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const cles = form.getFieldValue(\"cles\");\r\n    // We need at least one passenger\r\n    if (cles.length === 1) {\r\n      return;\r\n    }\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      cles: cles.filter(cle => cle !== c)\r\n    });\r\n  };\r\n\r\n  ajouter = () => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const cles = form.getFieldValue(\"cles\");\r\n    const nextcles = cles.concat(j++);\r\n    // can use data-binding to set\r\n    // important! notify form to detect changes\r\n    form.setFieldsValue({\r\n      cles: nextcles\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      let data3 = [];\r\n      for (let count = 0; count < values.cles.length; count++) {\r\n        let examens = [];\r\n        values.normes[count].forEach(element => {\r\n          examens.push({ id: element });\r\n        });\r\n        values.normes[count] = [...examens];\r\n        data3 = {\r\n          ageMax: values.ageMax[count],\r\n          ageMin: values.ageMin[count],\r\n          capitalMax: values.capitalMax[count],\r\n          capitalMin: values.capitalMin[count] + \"\",\r\n          honoraires: values.normes[count]\r\n        };\r\n        this.state.normesSelection.push(data3);\r\n      }\r\n\r\n      let data = [];\r\n      for (let count = 0; count < values.keys.length; count++) {\r\n        let piece = [];\r\n        values.pieceJointe[count].forEach(element => {\r\n          piece.push({ id: element });\r\n        });\r\n        values.pieceJointe[count] = [...piece];\r\n        data = {\r\n          idRestitution: values.restitution[count],\r\n          idCauseRestitution: values.causeRes[count],\r\n          status: values.statut[count],\r\n          pieceJointes: values.pieceJointe[count]\r\n        };\r\n        this.state.restitutions.push(data);\r\n      }\r\n\r\n      let array1 = JSON.parse(localStorage.getItem(\"localRestitution\"));\r\n      if (array1 != null) {\r\n        for (let count of array1) {\r\n          let data2 = {\r\n            idRestitution: count.idRestitution,\r\n            idCauseRestitution: count.idCauseRestitution,\r\n            status: array1[count].status,\r\n            pieceJointes: array1[count].pieceJointes\r\n          };\r\n          this.state.restitutions.push(data2);\r\n        }\r\n      }\r\n    });\r\n    const current = this.state.current + 1;\r\n    this.props.check(\r\n      this.state.restitutions,\r\n      current,\r\n      this.state.normesSelection\r\n    );\r\n  };\r\n  prev() {\r\n    this.props.check(this.state.restitutions, this.state.current - 1);\r\n  }\r\n  render() {\r\n    const { number } = this.state;\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const formItemLayoutWithOutLabel = {\r\n      wrapperCol: {\r\n        xs: { span: 24, offset: 0 },\r\n        sm: { span: 20, offset: 4 }\r\n      }\r\n    };\r\n    getFieldDecorator(\"keys\", { initialValue: [] });\r\n    const keys = getFieldValue(\"keys\");\r\n    const formItems = keys.map((k, index) => (\r\n      <div key={k}>\r\n        <Row span={24}>\r\n          <Col span={5}>\r\n            <Form.Item label=\"Restitution\" required={false}>\r\n              {getFieldDecorator(`restitution[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"Champs Obligatoire.\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select placeholder=\"cliquez pour choisir\">\r\n                  {this.state.restitution.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.libelle}\r\n                      >\r\n                        {element.libelle}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={5} offset={1}>\r\n            <Form.Item label=\"Cause restitution\" required={false}>\r\n              {getFieldDecorator(`causeRes[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"Champs Obligatoire.\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select placeholder=\"cliquez pour choisir\">\r\n                  {this.state.causeRes.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.libelle}\r\n                      >\r\n                        {element.libelle}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={5} offset={1}>\r\n            <Form.Item label=\"Statut\">\r\n              {getFieldDecorator(`statut[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    pattern: new RegExp(/^[0-1]/),\r\n                    message: \"La valeur du statut doit être 0 ou 1\"\r\n                  }\r\n                ]\r\n              })(<Input placeholder=\"Statut\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={5} offset={1}>\r\n            <Form.Item label=\"Pièces justificatives\" required={false} key={k}>\r\n              {getFieldDecorator(`pieceJointe[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs Obligatoire.\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select mode=\"multiple\" placeholder=\"Select...\">\r\n                  {this.state.pieceJointe.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.libelle}\r\n                      >\r\n                        {element.libelle}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n              {keys.length > 1 ? (\r\n                <Icon\r\n                  className=\"dynamic-delete-button\"\r\n                  type=\"minus-circle-o\"\r\n                  onClick={() => this.remove(k)}\r\n                />\r\n              ) : null}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    ));\r\n    getFieldDecorator(\"cles\", { initialValue: [] });\r\n    const cles = getFieldValue(\"cles\");\r\n    const formItems1 = cles.map((c, index) => (\r\n      <div key={c}>\r\n        <Row span={24}>\r\n          <Col span={4}>\r\n            <Form.Item label=\"Age min\" required={false}>\r\n              {getFieldDecorator(`ageMin[${c}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide!\"\r\n                  }\r\n                ]\r\n              })(<Input placeholder=\"Age min\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Age max\" required={false}>\r\n              {getFieldDecorator(`ageMax[${c}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide!\"\r\n                  }\r\n                ]\r\n              })(<Input placeholder=\"Age max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item\r\n              label=\"Capital min\"\r\n              validateStatus={number.validateStatus}\r\n              help={number.errorMsg}\r\n            >\r\n              {getFieldDecorator(`capitalMin[${c}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"]\r\n              })(\r\n                <InputNumber\r\n                  min={x}\r\n                  onChange={this.handleNumberChange}\r\n                  style={{ width: \"100%\" }}\r\n                  placeholder=\"Capital min\"\r\n                  className=\"not-rounded\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Capital max\" required={false}>\r\n              {getFieldDecorator(`capitalMax[${c}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide!\"\r\n                  }\r\n                ]\r\n              })(<Input placeholder=\"Capital max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Examens médicaux\" key={c}>\r\n              {getFieldDecorator(`normes[${c}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs Obligatoire.\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select mode=\"multiple\" placeholder=\"Selectionnez...\">\r\n                  {this.state.honoraire.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.libelle}\r\n                      >\r\n                        {element.libelle}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n              {cles.length > 1 ? (\r\n                <Icon\r\n                  className=\"dynamic-delete-button\"\r\n                  type=\"minus-circle-o\"\r\n                  onClick={() => this.removed(c)}\r\n                />\r\n              ) : null}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    ));\r\n    getFieldDecorator(\"cle\", { initialValue: [i] });\r\n    const cle = getFieldValue(\"cle\");\r\n    const formItemsNorme = cle.map(\r\n      (c, index) =>\r\n        localStorage.getItem(\"localNorme\") != null &&\r\n        JSON.parse(localStorage.getItem(\"localNorme\")).map(a => (\r\n          <div key={a}>\r\n            <Row span={24}>\r\n              <Col span={4}>\r\n                <Form.Item label=\"Age max\" required={false}>\r\n                  {getFieldDecorator(\r\n                    `ageMaxim[${c}]`,\r\n                    { initialValue: a.ageMax },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          pattern: new RegExp(/^[0-9\\b]+$/),\r\n                          message: \"Format invalide!\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(<Input placeholder=\"Age max\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col span={4} offset={1}>\r\n                <Form.Item label=\"Age min\" required={false}>\r\n                  {getFieldDecorator(\r\n                    `ageMinim[${c}]`,\r\n                    { initialValue: a.ageMin },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          pattern: new RegExp(/^[0-9\\b]+$/),\r\n                          message: \"Format invalide!\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(<Input placeholder=\"Age min\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={4} offset={1}>\r\n                <Form.Item label=\"Capital max\" required={false}>\r\n                  {getFieldDecorator(\r\n                    `capMax[${c}]`,\r\n                    { initialValue: a.capitalMax },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          pattern: new RegExp(/^[0-9\\b]+$/),\r\n                          message: \"Format invalide!\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(<Input placeholder=\"Capital max\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={4} offset={1}>\r\n                <Form.Item label=\"Capital min\" required={false}>\r\n                  {getFieldDecorator(\r\n                    `capMin[${c}]`,\r\n                    { initialValue: a.capitalMin },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          pattern: new RegExp(/^[0-9\\b]+$/),\r\n                          message: \"Format invalide!\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(<Input placeholder=\"Capital min\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={4} offset={1}>\r\n                <Form.Item label=\"Exmanes médicaux\" key={c}>\r\n                  {getFieldDecorator(\r\n                    `norme[${c}]`,\r\n                    { initialValue: a.honoraires.map(b => b.id) },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Champs Obligatoire.\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(\r\n                    <Select mode=\"multiple\" placeholder=\"Selectionnez...\">\r\n                      {this.state.honoraire.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.libelle}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))\r\n    );\r\n    getFieldDecorator(\"key\", { initialValue: [l] });\r\n    const key = getFieldValue(\"key\");\r\n    const formItemsRestitution = key.map(\r\n      (k, index) =>\r\n        localStorage.getItem(\"localRestitution\") != null &&\r\n        JSON.parse(localStorage.getItem(\"localRestitution\")).map(a => (\r\n          <div key={a}>\r\n            <Row span={24}>\r\n              <Col span={5}>\r\n                <Form.Item label=\"Restitution\" required={false}>\r\n                  {getFieldDecorator(\r\n                    `restitutions[${k}]`,\r\n                    { initialValue: a.idRestitution },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message: \"Champs Obligatoire.\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(\r\n                    <Select placeholder=\"cliquez pour choisir\">\r\n                      {this.state.restitution.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.libelle}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={5} offset={1}>\r\n                <Form.Item label=\"Cause restitution\" required={false}>\r\n                  {getFieldDecorator(\r\n                    `causeRest[${k}]`,\r\n                    { initialValue: a.idCauseRestitution },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message: \"Champs Obligatoire.\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(\r\n                    <Select placeholder=\"cliquez pour choisir\">\r\n                      {this.state.causeRes.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.libelle}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={5} offset={1}>\r\n                <Form.Item label=\"Statut\" required={false}>\r\n                  {getFieldDecorator(\r\n                    `statuts[${k}]`,\r\n                    { initialValue: a.status },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message: \"Champs Obligatoire.\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(<Input placeholder=\"Statut\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={5} offset={1}>\r\n                <Form.Item label=\"Pieces jointes\" required={false}>\r\n                  {getFieldDecorator(\r\n                    `pieces[${k}]`,\r\n                    { initialValue: a.pieceJointes.map(b => b.id) },\r\n                    {\r\n                      validateTrigger: [\"onChange\", \"onBlur\"],\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Champs Obligatoire.\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(\r\n                    <Select mode=\"multiple\" placeholder=\"Select...\">\r\n                      {this.state.pieceJointe.map(element => {\r\n                        return (\r\n                          <Option\r\n                            key={element.id}\r\n                            value={element.id}\r\n                            label={element.libelle}\r\n                          >\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))\r\n    );\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form onSubmit={this.handleSubmit}>\r\n            <Divider orientation=\"left\">Normes de séléction</Divider>\r\n            {localStorage.getItem(\"localNorme\") != null ? formItemsNorme : \"\"}\r\n            {formItems1}\r\n            <Form.Item {...formItemLayoutWithOutLabel}>\r\n              <Button\r\n                type=\"dashed\"\r\n                onClick={this.ajouter}\r\n                style={{ width: \"60%\" }}\r\n              >\r\n                <Icon type=\"plus\" /> Ajouter\r\n              </Button>\r\n            </Form.Item>\r\n            <Divider orientation=\"left\">Restitutions</Divider>\r\n            {localStorage.getItem(\"localRestitution\") != null\r\n              ? formItemsRestitution\r\n              : \"\"}\r\n            {formItems}\r\n            <Form.Item {...formItemLayoutWithOutLabel}>\r\n              <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\r\n                <Icon type=\"plus\" /> Ajouter\r\n              </Button>\r\n            </Form.Item>\r\n            <Col span={24} offset={1}>\r\n              <Form.Item>\r\n                {this.state.current === 5 && (\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Suivant <Icon type=\"arrow-right\" />\r\n                  </Button>\r\n                )}\r\n                {this.state.current > 0 && (\r\n                  <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                    <Icon type=\"arrow-left\" />\r\n                    Précédent\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Form.create({ name: \"global_state\" })(StepFour);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getPeriodicite } from \"../../../GestionContrats/ContratsAPI\";\r\n\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nconst { Option } = Select;\r\nclass StepOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      periodicite: [],\r\n      current: 1\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getAllPeriodicite();\r\n  }\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (\r\n        values.libelle !== \"\" &&\r\n        values.code !== \"\" &&\r\n        values.numeroHomologation !== \"\" &&\r\n        values.dateHomologation !== \"\" &&\r\n        values.periodicites !== undefined\r\n      ) {\r\n        this.next();\r\n      }\r\n    });\r\n  };\r\n\r\n  next = () => {\r\n    if (this.state.current === 1) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n      this.props.check(current);\r\n    }\r\n  };\r\n\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n    this.props.check(current);\r\n  }\r\n  async getAllPeriodicite() {\r\n    let response = await getPeriodicite();\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { current } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 10 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayout} id=\"formadd\" onSubmit={this.handleSubmit}>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Informations générales</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Libellé\">\r\n                {getFieldDecorator(\"libelle\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez la libelle\"\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Abréviation\">\r\n                {getFieldDecorator(\"code\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez le code \"\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Homologation</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Numéro d'homologation\" hasFeedback>\r\n                {getFieldDecorator(\"numeroHomologation\", {\r\n                  rules: [\r\n                    {\r\n                      required: true\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Date d'homologation\" hasFeedback>\r\n                {getFieldDecorator(\"dateHomologation\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez le code \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    format={dateFormat}\r\n                    onChange={this.onChangeDate}\r\n                  ></DatePicker>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Périodicité</Divider>\r\n            </Col>\r\n            <Col span={24} offset={2}>\r\n              <Form.Item>\r\n                {\" \"}\r\n                {getFieldDecorator(\"periodicites\", {\r\n                  rules: [{ required: true, message: \"Champs Obligatoire !\" }]\r\n                })(\r\n                  <Select mode=\"multiple\" placeholder=\"Selectionnez ...\">\r\n                    {this.state.periodicite.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.abb}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Form.Item>\r\n                {current === 1 && (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginBottom: \"25px\" }}\r\n                  >\r\n                    Suivant\r\n                    <Icon type=\"arrow-right\" />\r\n                  </Button>\r\n                )}\r\n                {current > 0 && (\r\n                  <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                    <Icon type=\"arrow-left\" />\r\n                    Précédent\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      libelle: Form.createFormField({\r\n        ...props.libelle,\r\n        value: props.libelle.value\r\n      }),\r\n      code: Form.createFormField({\r\n        ...props.code,\r\n        value: props.code.value\r\n      }),\r\n      numeroHomologation: Form.createFormField({\r\n        ...props.numeroHomologation,\r\n        value: props.numeroHomologation.value\r\n      }),\r\n      dateHomologation: Form.createFormField({\r\n        ...props.dateHomologation,\r\n        value: props.dateHomologation.value\r\n      }),\r\n      periodicites: Form.createFormField({\r\n        ...props.periodicites,\r\n        value: props.periodicites.value\r\n      })\r\n    };\r\n  }\r\n})(StepOne);\r\n","import \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  message,\r\n  Row,\r\n  Select,\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nlet id = 0;\r\nconst { Option } = Select;\r\nlet current = 3;\r\nclass StepFive extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tarrifications: [],\r\n      count: 0,\r\n      current: 3,\r\n      typeTar: \"\",\r\n    };\r\n  }\r\n\r\n  remove = (k) => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    // We need at least one passenger\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      keys: keys.filter((key) => key !== k),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    if (this.state.typeTar !== \"\") {\r\n      const { form } = this.props;\r\n      // can use data-binding to get\r\n      const keys = form.getFieldValue(\"keys\");\r\n      const nextKeys = keys.concat(id++);\r\n      // can use data-binding to set\r\n      // important! notify form to detect changes\r\n      form.setFieldsValue({\r\n        keys: nextKeys,\r\n      });\r\n    } else {\r\n      message.warning(\"Choississez le type de tarrification\");\r\n    }\r\n  };\r\n\r\n  handleSubmited = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      current = this.state.current + 1;\r\n      let data2 = [];\r\n      for (var index = 0; index < values.keys.length; index++) {\r\n        this.state.typeTar === \"Taux\"\r\n          ? (data2 = {\r\n              capitalMax: values.capitalMax[index],\r\n              capitalMin: values.capitalMin[index],\r\n              ageMax: values.ageMax[index],\r\n              ageMin: values.ageMin[index],\r\n              dureeMax: values.dureeMax[index],\r\n              dureeMin: values.dureeMin[index],\r\n              differeMax: values.differeMax[index],\r\n              differeMin: values.differeMin[index],\r\n              taux: values.tauxFor[index],\r\n            })\r\n          : (data2 = {\r\n              capitalMax: values.capitalMax[index],\r\n              capitalMin: values.capitalMin[index],\r\n              ageMax: values.ageMax[index],\r\n              ageMin: values.ageMin[index],\r\n              dureeMax: values.dureeMax[index],\r\n              dureeMin: values.dureeMin[index],\r\n              differeMax: values.differeMax[index],\r\n              differeMin: values.differeMin[index],\r\n              forfait: values.tauxFor[index],\r\n            });\r\n        this.state.tarrifications.push(data2);\r\n      }\r\n      this.props.check(this.state.tarrifications, this.state.typeTar, current);\r\n    });\r\n  };\r\n\r\n  prev() {\r\n    const currentPrev = this.state.current - 1;\r\n    this.setState({ currentPrev });\r\n    this.props.check(\r\n      this.state.tarrifications,\r\n      this.state.typeTar,\r\n      currentPrev\r\n    );\r\n  }\r\n\r\n  handleChangeTarrification = (value) => {\r\n    this.setState({\r\n      typeTar: value,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const formItemLayoutWithOutLabel = {\r\n      wrapperCol: {\r\n        xs: { span: 24, offset: 0 },\r\n        sm: { span: 20, offset: 4 },\r\n      },\r\n    };\r\n    getFieldDecorator(\"keys\", { initialValue: [] });\r\n    const keys = getFieldValue(\"keys\");\r\n    const formItems = keys.map((k, index) => (\r\n      <div>\r\n        <Row span={24}>\r\n          <Col span={4}>\r\n            <Form.Item label=\"Durée\" required={false}>\r\n              {getFieldDecorator(`dureeMin[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Mois\" placeholder=\"Min\" />)}\r\n              {getFieldDecorator(`dureeMax[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Mois\" placeholder=\"Max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Age\" required={false}>\r\n              {getFieldDecorator(`ageMin[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Ans\" placeholder=\"Min\" />)}\r\n              {getFieldDecorator(`ageMax[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Ans\" placeholder=\"Max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Capital\" required={false}>\r\n              {getFieldDecorator(`capitalMin[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Dhs\" placeholder=\"Min\" />)}\r\n              {getFieldDecorator(`capitalMax[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Dhs\" placeholder=\"Max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label=\"Différé\" required={false}>\r\n              {getFieldDecorator(`differeMin[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Mois\" placeholder=\"Min\" />)}\r\n              {getFieldDecorator(`differeMax[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Mois\" placeholder=\"Max\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={4} offset={1}>\r\n            <Form.Item label={this.state.typeTar} required={false} key={k}>\r\n              {getFieldDecorator(`tauxFor[${k}]`, {\r\n                validateTrigger: [\"onChange\", \"onBlur\"],\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs Obligatoire.\",\r\n                  },\r\n                ],\r\n              })(\r\n                this.state.typeTar === \"Taux\" ? (\r\n                  <Input addonAfter=\"%\" placeholder=\"Taux\" />\r\n                ) : (\r\n                  <Input addonAfter=\"%\" placeholder=\"Forfait\" />\r\n                )\r\n              )}\r\n              {keys.length > 1 ? (\r\n                <Icon\r\n                  className=\"dynamic-delete-button\"\r\n                  type=\"minus-circle-o\"\r\n                  onClick={() => this.remove(k)}\r\n                />\r\n              ) : null}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    ));\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24}>\r\n          <Form id=\"laststep\" onSubmit={this.handleSubmited}>\r\n            <Divider orientation=\"left\">Tarification</Divider>\r\n            <Row gutter={[16, 8]}>\r\n              <Col span={4} offset={1}>\r\n                Type de tarification:{\" \"}\r\n              </Col>\r\n              <Col flex=\"auto\" span={12}>\r\n                <Select\r\n                  onChange={this.handleChangeTarrification}\r\n                  placeholder=\"- Veuillez sélectionner -\"\r\n                  style={{ width: \"16em\" }}\r\n                >\r\n                  <Option value=\"Taux\">Taux</Option>\r\n                  <Option value=\"Forfait\">Forfait</Option>\r\n                </Select>\r\n              </Col>\r\n              <Col span={24}>{formItems}</Col>\r\n            </Row>\r\n            <Form.Item {...formItemLayoutWithOutLabel}>\r\n              <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\r\n                <Icon type=\"plus\" /> Ajouter\r\n              </Button>\r\n            </Form.Item>\r\n            <Col span={24} offset={1}>\r\n              <Form.Item>\r\n                {this.state.current === 3 && (\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Suivant <Icon type=\"arrow-right\" />\r\n                  </Button>\r\n                )}\r\n                {this.state.current > 0 && (\r\n                  <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                    <Icon type=\"arrow-left\" />\r\n                    Précédent\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Form.create({ name: \"global_state\" })(StepFive);\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Input, Row, Col, Button, Select, Icon, Divider } from \"antd\";\r\nimport { getTypePrestationFamille } from \"../../TypePrestation/PrestationAPI\";\r\nimport { getPieceJoint } from \"../../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\n\r\nlet id = 0;\r\nlet famille = 1; //la famille de produit est deces\r\nlet i = 0;\r\nlet current = 4;\r\nconst { Option } = Select;\r\nclass StepThree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      typePrestations: [],\r\n      Modalite: {},\r\n      count: 0,\r\n      current: 4,\r\n      typePrestation: [],\r\n      adresse: [],\r\n      pieceJointe: [],\r\n    \r\n    };\r\n  }\r\n\r\n  remove = (k) => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    // We need at least one passenger\r\n    if (keys.length === 1) {\r\n      return;\r\n    }\r\n    // can use data-binding to set\r\n    form.setFieldsValue({\r\n      keys: keys.filter((key) => key !== k),\r\n    });\r\n  };\r\n\r\n  removed = (c) => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const cle = form.getFieldValue(\"cle\");\r\n    form.setFieldsValue({\r\n      cle: cle.filter((key) => key !== c),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { form } = this.props;\r\n    // can use data-binding to get\r\n    const keys = form.getFieldValue(\"keys\");\r\n    const nextKeys = keys.concat(id++);\r\n    form.setFieldsValue({\r\n      keys: nextKeys,\r\n    });\r\n  };\r\n\r\n  handleSubmited = (e) => {\r\n    e.preventDefault();\r\n   \r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (\r\n        values.delaiResiliation !== \"\" &&\r\n        values.delaiPreavis !== \"\" &&\r\n        values.seuilConseil !== \"\" &&\r\n        values.seuilExaminateur !== \"\" &&\r\n        values.seuilReassurance !== \"\"\r\n      ) {\r\n        current = this.state.current + 1;\r\n      }\r\n      id = 0;\r\n        \r\n          this.state.Modalite={\r\n            seuilConseil: values.seuilConseil,\r\n            seuilReassurance: values.seuilReassurance,\r\n            seuilExaminateur: values.seuilExaminateur,\r\n            delaiResiliation: values.delaiResiliation,\r\n            delaiPreavis: values.delaiPreavis,\r\n          }\r\n     \r\n\r\n      for (var count = 0; count < values.type.length; count++) {\r\n        let piece = [];\r\n        values.piece[count].forEach((element) => {\r\n          piece.push({ id: element });\r\n        });\r\n        values.piece[count] = [...piece];\r\n        let data = {\r\n          pieceJointes: values.piece[count],\r\n          typePrestationId: values.type[count],\r\n          delaiDeclaration: values.delai[count],\r\n        };\r\n        this.state.typePrestations.push(data);\r\n      }\r\n      let array = JSON.parse(localStorage.getItem(\"adresse\"));\r\n      if (array != null) {\r\n        for (let index of array) {\r\n          let data1 = {\r\n            pieceJointes: index.pieceJointes,\r\n            typePrestationId: index.typePrestationId,\r\n            delaiDeclaration: index.delaiDeclaration,\r\n          };\r\n          this.setState({\r\n            typePrestations: [...data1],\r\n          });\r\n        }\r\n      }\r\n      localStorage.setItem(\r\n        \"adresse\",\r\n        JSON.stringify(this.state.typePrestations)\r\n      );\r\n    });\r\n    this.props.check(this.state.typePrestations, this.state.Modalite, current);\r\n  };\r\n\r\n  prev() {\r\n    const currentPrev = this.state.current - 1;\r\n    this.setState({ currentPrev });\r\n    this.props.check(\r\n      this.state.typePrestations,\r\n      this.state.Modalite,\r\n      currentPrev\r\n    );\r\n  }\r\n\r\n  handleChanged = (e) => this.setState({ [e.target.name]: e.target.value });\r\n  componentDidMount() {\r\n    this.getAllPiece();\r\n    this.getAllTypePrestationFamille(famille);\r\n  }\r\n\r\n  async getAllTypePrestationFamille(idFamille) {\r\n    let response = await getTypePrestationFamille(idFamille);\r\n    this.setState({\r\n      typePrestation: response.data,\r\n    });\r\n  }\r\n\r\n  async getAllPiece() {\r\n    let response = await getPieceJoint();\r\n    this.setState({\r\n      pieceJointe: response.data.content,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator, getFieldValue } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 9 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    };\r\n    const formItemLayoutWithOutLabel = {\r\n      wrapperCol: {\r\n        xs: { span: 24, offset: 0 },\r\n        sm: { span: 20, offset: 4 },\r\n      },\r\n    };\r\n\r\n    getFieldDecorator(\"keys\", { initialValue: [] });\r\n    const keys = getFieldValue(\"keys\");\r\n    const formItems = keys.map((k, index) => (\r\n      <div>\r\n        <Row span={24}>\r\n          <Col span={8}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label=\"Type prestation\"\r\n              required={false}\r\n            >\r\n              {getFieldDecorator(`type[${k}]`, {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(\r\n                <Select\r\n                  onChange={this.handleChangeSelect}\r\n                  placeholder=\"- Veuillez sélectionner -\"\r\n                >\r\n                  {this.state.typePrestation.map((element) => {\r\n                    return (\r\n                      <Option value={element.id} label={element.libelle}>\r\n                        {element.libelle}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label=\"Délai de déclaration\"\r\n              required={false}\r\n            >\r\n              {getFieldDecorator(`delai[${k}]`, {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    whitespace: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(<Input addonAfter=\"Mois\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={8}>\r\n            <Form.Item\r\n              {...formItemLayout}\r\n              label=\"Pièces justificatives\"\r\n              required={false}\r\n              key={k}\r\n            >\r\n              {getFieldDecorator(`piece[${k}]`, {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"Champs obligatoire.\",\r\n                  },\r\n                ],\r\n              })(\r\n                <Select\r\n                  mode=\"multiple\"\r\n                  placeholder=\"Select...\"\r\n                  onChange={this.handleChange}\r\n                >\r\n                  {this.state.pieceJointe.map((element) => {\r\n                    return (\r\n                      <Option value={element.id} label={element.libelle}>\r\n                        {element.libelle}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n              {keys.length > 1 ? (\r\n                <Icon\r\n                  className=\"dynamic-delete-button\"\r\n                  type=\"minus-circle-o\"\r\n                  onClick={() => this.remove(k)}\r\n                />\r\n              ) : null}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    ));\r\n\r\n    getFieldDecorator(\"cle\", { initialValue: [i] });\r\n    const cle = getFieldValue(\"cle\");\r\n    const formItems1 = cle.map(\r\n      (c, index) =>\r\n        localStorage.getItem(\"adresse\") != null &&\r\n        JSON.parse(localStorage.getItem(\"adresse\")).map((a) => (\r\n          <div>\r\n            <Row span={24}>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label=\"Type prestation\"\r\n                  required={false}\r\n                >\r\n                  {getFieldDecorator(\r\n                    `types[${c}]`,\r\n                    { initialValue: a.typePrestationId },\r\n                    {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message: \"Champs obligatoire.\",\r\n                        },\r\n                      ],\r\n                    }\r\n                  )(\r\n                    <Select\r\n                      onChange={this.handleChangeSelect}\r\n                      placeholder=\"- Veuillez sélectionner -\"\r\n                    >\r\n                      {this.state.typePrestation.map((element) => {\r\n                        return (\r\n                          <Option value={element.id} label={element.libelle}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label=\"Délai déclaration\"\r\n                  required={false}\r\n                >\r\n                  {getFieldDecorator(\r\n                    `delais[${c}]`,\r\n                    { initialValue: a.delaiDeclaration },\r\n                    {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          whitespace: true,\r\n                          message: \"Champs obligatoire.\",\r\n                        },\r\n                      ],\r\n                    }\r\n                  )(<Input />)}\r\n                </Form.Item>\r\n              </Col>\r\n              <Col span={8}>\r\n                <Form.Item\r\n                  {...formItemLayout}\r\n                  label=\"Pièces justificatives\"\r\n                  required={false}\r\n                  key={c}\r\n                >\r\n                  {getFieldDecorator(\r\n                    `pieces[${c}]`,\r\n                    { initialValue: a.pieceJointes.map((b) => b.id) },\r\n                    {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"Champs obligatoire.\",\r\n                        },\r\n                      ],\r\n                    }\r\n                  )(\r\n                    <Select\r\n                      mode=\"multiple\"\r\n                      placeholder=\"Select...\"\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      {this.state.pieceJointe.map((element) => {\r\n                        return (\r\n                          <Option value={element.id} label={element.libelle}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n          </div>\r\n        ))\r\n    );\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form\r\n            {...formItemLayout}\r\n            id=\"stepthree\"\r\n            onSubmit={this.handleSubmited}\r\n          >\r\n            <Col span={22}>\r\n              <Divider orientation=\"left\">Modalités de prestations</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Seuil examinateur\">\r\n                {getFieldDecorator(\"seuilExaminateur\", {\r\n                  \r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                      message: \"Format invalide!\",\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    name=\"seuilExaminateur\"\r\n                    addonAfter=\"Dhs\"\r\n                    onChange={this.handleChanged}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Seuil conseil\">\r\n                {getFieldDecorator(\"seuilConseil\", {\r\n                  \r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                      message: \"Format invalide!\",\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    name=\"seuilConseil\"\r\n                    addonAfter=\"Dhs\"\r\n                    onChange={this.handleChanged}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Seuil de la réassurance\">\r\n                {getFieldDecorator(\"seuilReassurance\", {\r\n              \r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                      message: \"Format invalide!\",\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    name=\"seuilReassurance\"\r\n                    addonAfter=\"Dhs\"\r\n                    onChange={this.handleChanged}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Délai résiliation\">\r\n                {getFieldDecorator(\"delaiResiliation\", {\r\n                  \r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/^[0-9\\b]+$/),\r\n                      message: \"Format invalide!\",\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    name=\"delaiResiliation\"\r\n                    addonAfter=\"Mois\"\r\n                    onChange={this.handleChanged}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n\r\n              <Form.Item label=\"Délai préavis\">\r\n                {getFieldDecorator(\"delaiPreavis\", {\r\n                 \r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/^[0-9\\b]+$/),\r\n                      message: \"Format invalide!\",\r\n                    },\r\n                  ],\r\n                })(\r\n                  <Input\r\n                    name=\"delaiPreavis\"\r\n                    addonAfter=\"Mois\"\r\n                    onChange={this.handleChanged}\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={22}>\r\n              <Divider orientation=\"left\">Type de prestations</Divider>\r\n            </Col>\r\n            <Col span={24}>\r\n              {localStorage.getItem(\"adresse\") != null ? formItems1 : \"\"}\r\n              {formItems}\r\n              <Form.Item {...formItemLayoutWithOutLabel}>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={this.add}\r\n                  style={{ width: \"60%\" }}\r\n                >\r\n                  <Icon type=\"plus\" /> Ajouter\r\n                </Button>\r\n              </Form.Item>\r\n              <Form.Item>\r\n                {this.state.current === 4 && (\r\n                  <Button type=\"primary\" htmlType=\"submit\">\r\n                    Suivant\r\n                    <Icon type=\"arrow-right\" />\r\n                  </Button>\r\n                )}\r\n                {this.state.current > 0 && (\r\n                  <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                    <Icon type=\"arrow-left\" />\r\n                    Précédent\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <div className=\"steps-action\"></div>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({ name: \"global_state\" })(StepThree);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getExclusion } from \"../../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nlet exclusFamille = \"Deces\";\r\nconst { Option } = Select;\r\nclass StepTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exclusions: [],\r\n      current: 2,\r\n      visible: false\r\n    };\r\n  }\r\n  next = () => {\r\n    if (this.state.current === 2) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n      this.props.check(current);\r\n    }\r\n  };\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n    this.props.check(current);\r\n  }\r\n  onChange = e => {\r\n    this.setState({\r\n      visible: e.target.value\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getAllExclusion(exclusFamille);\r\n  }\r\n\r\n  async getAllExclusion(famille) {\r\n    let response = await getExclusion(famille);\r\n\r\n    this.setState({\r\n      exclusions: response.data.content\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (\r\n        values.ageMaxEligibilite !== \"\" &&\r\n        values.ageMin !== \"\" &&\r\n        values.differeMax !== \"\" &&\r\n        values.differeMin !== \"\" &&\r\n        values.dureeMax !== \"\" &&\r\n        values.dureeMin !== \"\" &&\r\n        values.fraisAcquisition !== \"\" &&\r\n        values.fraisGestion !== \"\" &&\r\n        values.taxe !== \"\" &&\r\n        values.exclusion !== undefined\r\n      ) {\r\n        this.next();\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { current } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 10 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayout} id=\"steptwo\" onSubmit={this.handleSubmit}>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Informations générales</Divider>\r\n            </Col>\r\n            <Row>\r\n              <Col span={11}>\r\n                <Form.Item label=\"Frais de gestion WAKALA\">\r\n                  {getFieldDecorator(\"fraisGestion\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(<Input addonAfter=\"%\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Frais d'acquisition\">\r\n                  {getFieldDecorator(\"fraisAcquisition\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(<Input addonAfter=\"%\" />)}\r\n                </Form.Item>\r\n                {this.props.risque.libelle !== \"DECES PREVOYANCE\" && (\r\n                  <div>\r\n                    {\" \"}\r\n                    <Form.Item label=\"Différé minimum\">\r\n                      {getFieldDecorator(\"differeMin\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            pattern: new RegExp(/^[0-9\\b]+$/),\r\n                            message: \"Format invalide!\"\r\n                          }\r\n                        ]\r\n                      })(<Input addonAfter=\"Mois\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Durée minimale\">\r\n                      {getFieldDecorator(\"dureeMin\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            pattern: new RegExp(/^[0-9\\b]+$/),\r\n                            message: \"Format invalide!\"\r\n                          }\r\n                        ]\r\n                      })(<Input addonAfter=\"Mois\" />)}\r\n                    </Form.Item>\r\n                  </div>\r\n                )}\r\n\r\n                <Form.Item label=\"Age minimum\">\r\n                  {getFieldDecorator(\"ageMin\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(<Input addonAfter=\"ANS\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"Age maximum d’éligibilité\">\r\n                  {getFieldDecorator(\"ageMaxEligibilite\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(<Input addonAfter=\"ANS\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n\r\n              <Col span={11}>\r\n                <Form.Item label=\"TVA frais de gestion WAKALA\">\r\n                  {getFieldDecorator(\"tvaFraisGestion\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(<Input addonAfter=\"%\" />)}\r\n                </Form.Item>\r\n                <Form.Item label=\"TVA frais d'acquisition\">\r\n                  {getFieldDecorator(\"tvaFraisAcquisition\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(<Input addonAfter=\"%\" />)}\r\n                </Form.Item>\r\n                {this.props.risque.libelle !== \"DECES PREVOYANCE\" && (\r\n                  <div>\r\n                    <Form.Item label=\"Différé Maximum\">\r\n                      {getFieldDecorator(\"differeMax\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            pattern: new RegExp(/^[0-9\\b]+$/),\r\n                            message: \"Format invalide!\"\r\n                          }\r\n                        ]\r\n                      })(<Input addonAfter=\"Mois\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Durée maximale\">\r\n                      {getFieldDecorator(\"dureeMax\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            pattern: new RegExp(/^[0-9\\b]+$/),\r\n                            message: \"Format invalide!\"\r\n                          }\r\n                        ]\r\n                      })(<Input addonAfter=\"Mois\" />)}\r\n                    </Form.Item>{\" \"}\r\n                    <Form.Item label=\"Taux taxe d'assurance\">\r\n                      {getFieldDecorator(\"taxe\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                            message: \"Format invalide!\"\r\n                          }\r\n                        ]\r\n                      })(<Input addonAfter=\"%\" />)}\r\n                    </Form.Item>\r\n                    <Form.Item label=\"Taxe parafiscale\">\r\n                      {getFieldDecorator(\"taxeParafiscale\", {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                            message: \"Format invalide!\"\r\n                          }\r\n                        ]\r\n                      })(<Input addonAfter=\"%\" />)}\r\n                    </Form.Item>\r\n                  </div>\r\n                )}\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {this.props.risque.libelle !== \"DECES PREVOYANCE\" && (\r\n                <div>\r\n                  <Col span={10}>\r\n                    <Form.Item label=\"Echéances impayées à assurer\">\r\n                      {getFieldDecorator(\"visibilite\", {\r\n                        valuePropName: \"unchecked\",\r\n                        initialValue: false\r\n                      })(\r\n                        <Radio.Group\r\n                          buttonStyle=\"solid\"\r\n                          defaultValue={false}\r\n                          onChange={this.onChange}\r\n                        >\r\n                          <Radio.Button value={true}>Oui</Radio.Button>\r\n                          <Radio.Button value={false}>Non</Radio.Button>\r\n                        </Radio.Group>\r\n                      )}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={13}>\r\n                    {this.state.visible ? (\r\n                      <Form.Item>\r\n                        {getFieldDecorator(\"echeanceImpayees\", {\r\n                          rules: [\r\n                            {\r\n                              required: true,\r\n                              pattern: new RegExp(/^[0-9\\b]+$/),\r\n                              message: \"Format invalide!\"\r\n                            }\r\n                          ]\r\n                        })(<Input addonAfter=\"Mois\" />)}\r\n                      </Form.Item>\r\n                    ) : null}\r\n                  </Col>\r\n                  <Col span={24}>\r\n                    <label>\r\n                      <Form.Item label=\" Délai de prescription de l'acceptation\" />\r\n                    </label>\r\n                  </Col>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"En l'attente du retour participant\">\r\n                      {getFieldDecorator(\"delaiEnAttente\", {\r\n                        rules: [\r\n                          { required: true, message: \"Champs Obligatoire !\" }\r\n                        ]\r\n                      })(<Input addonAfter=\"Jours\" />)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col span={11}>\r\n                    <Form.Item label=\"Sans souscription\">\r\n                      {getFieldDecorator(\"delaiSansSouscription\", {\r\n                        rules: [\r\n                          { required: true, message: \"Champs Obligatoire !\" }\r\n                        ]\r\n                      })(<Input addonAfter=\"Jours\" />)}\r\n                    </Form.Item>\r\n                  </Col>\r\n                </div>\r\n              )}\r\n            </Row>\r\n\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\"> Exclusions</Divider>\r\n            </Col>\r\n\r\n            <Col span={24} offset={2}>\r\n              <Form.Item>\r\n                {\" \"}\r\n                {getFieldDecorator(\"exclusion\", {\r\n                  rules: [{ required: true, message: \"Exclusion is required!\" }]\r\n                })(\r\n                  <Select mode=\"multiple\" placeholder=\"Selectionnez ...\">\r\n                    {this.state.exclusions.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.exclusionNom}\r\n                        >\r\n                          {element.exclusionNom}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={24}>\r\n              {current === 2 && (\r\n                <Button\r\n                  type=\"primary\"\r\n                  style={{ right: \"float\", marginBottom: \"25px\" }}\r\n                  htmlType=\"submit\"\r\n                >\r\n                  Suivant\r\n                  <Icon type=\"arrow-right\" />\r\n                </Button>\r\n              )}\r\n              {current > 0 && (\r\n                <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n                  <Icon type=\"arrow-left\" />\r\n                  Précédent\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      fraisGestion: Form.createFormField({\r\n        ...props.fraisGestion,\r\n        value: props.fraisGestion.value\r\n      }),\r\n      fraisAcquisition: Form.createFormField({\r\n        ...props.fraisAcquisition,\r\n        value: props.fraisAcquisition.value\r\n      }),\r\n      differeMin: Form.createFormField({\r\n        ...props.differeMin,\r\n        value: props.differeMin.value\r\n      }),\r\n      differeMax: Form.createFormField({\r\n        ...props.differeMax,\r\n        value: props.differeMax.value\r\n      }),\r\n      dureeMax: Form.createFormField({\r\n        ...props.dureeMax,\r\n        value: props.dureeMax.value\r\n      }),\r\n      dureeMin: Form.createFormField({\r\n        ...props.dureeMin,\r\n        value: props.dureeMin.value\r\n      }),\r\n\r\n      ageMin: Form.createFormField({\r\n        ...props.ageMin,\r\n        value: props.ageMin.value\r\n      }),\r\n\r\n      taxe: Form.createFormField({\r\n        ...props.taxe,\r\n        value: props.taxe.value\r\n      }),\r\n\r\n      ageMaxEligibilite: Form.createFormField({\r\n        ...props.ageMaxEligibilite,\r\n        value: props.ageMaxEligibilite.value\r\n      }),\r\n      echeanceImpayees: Form.createFormField({\r\n        ...props.echeanceImpayees,\r\n        value: props.echeanceImpayees.value\r\n      }),\r\n      delaiEnAttente: Form.createFormField({\r\n        ...props.delaiEnAttente,\r\n        value: props.delaiEnAttente.value\r\n      }),\r\n      delaiSansSouscription: Form.createFormField({\r\n        ...props.delaiSansSouscription,\r\n        value: props.delaiSansSouscription.value\r\n      }),\r\n\r\n      tvaFraisAcquisition: Form.createFormField({\r\n        ...props.tvaFraisAcquisition,\r\n        value: props.tvaFraisAcquisition.value\r\n      }),\r\n      tvaFraisGestion: Form.createFormField({\r\n        ...props.tvaFraisGestion,\r\n        value: props.tvaFraisGestion.value\r\n      }),\r\n\r\n      exclusion: Form.createFormField({\r\n        ...props.exclusion,\r\n        value: props.exclusion.value\r\n      }),\r\n      visibilite: Form.createFormField({\r\n        ...props.visibilite,\r\n        value: props.visibilite.value\r\n      }),\r\n      taxeParafiscale: Form.createFormField({\r\n        ...props.taxeParafiscale,\r\n        value: props.taxeParafiscale.value\r\n      })\r\n    };\r\n  }\r\n})(StepTwo);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Button, Col, Form, Icon, Row, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getAllPartenaire } from \"../../partenaire/PartenaireAPI\";\r\nimport { getCategorie, getRisque, getSousCategorie } from \"../ProduitDecesAPI\";\r\nimport {\r\n  BRANCH_TYPE_DECES,\r\n  BRANCH_TYPE_DECES_ET_RETRAITE\r\n} from \"../../../../constants\";\r\nconst { Option } = Select;\r\nclass StepZero extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      risques: [],\r\n      categories: [],\r\n      sousCategories: [],\r\n      partenaire: [],\r\n      current: 0,\r\n      type: []\r\n    };\r\n  }\r\n  next = () => {\r\n    if (this.state.current === 0) {\r\n      const current = this.state.current + 1;\r\n      this.setState({ current });\r\n      this.props.check(this.state.type, current);\r\n    }\r\n  };\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n    this.props.check(current);\r\n  }\r\n  handleChangeRisque = value => {\r\n    this.setState({\r\n      type: this.state.risques.filter(item => item.id === value)[0]\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getAllRisque(BRANCH_TYPE_DECES);\r\n    this.getAllCategorie();\r\n    this.getAllSousCategorie();\r\n    this.getAllPartenaires();\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (\r\n        values.risque !== \"\" &&\r\n        values.categorie !== \"\" &&\r\n        values.partenaire !== \"\"\r\n      ) {\r\n        this.next();\r\n      }\r\n    });\r\n  };\r\n  async getAllPartenaires() {\r\n    let response = await getAllPartenaire();\r\n\r\n    let array = [];\r\n\r\n    response.data.content.forEach(element => {\r\n      if (\r\n        element.brancheType === BRANCH_TYPE_DECES_ET_RETRAITE ||\r\n        element.brancheType === BRANCH_TYPE_DECES\r\n      )\r\n        array.push(element);\r\n    });\r\n    this.setState({\r\n      partenaire: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllRisque(value) {\r\n    let response = await getRisque(value);\r\n    this.setState({\r\n      risques: response.data.content\r\n    });\r\n  }\r\n  async getAllCategorie() {\r\n    let response = await getCategorie();\r\n\r\n    this.setState({\r\n      categories: response.data.content\r\n    });\r\n  }\r\n  async getAllSousCategorie() {\r\n    let response = await getSousCategorie();\r\n\r\n    this.setState({\r\n      sousCategories: response.data.content\r\n    });\r\n  }\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 12 },\r\n        sm: { span: 6 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 12 }\r\n      }\r\n    };\r\n    const { current } = this.state;\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayout} id=\"formZero\" onSubmit={this.handleSubmit}>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Risque\" hasFeedback>\r\n                {getFieldDecorator(\"risque\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Choisissez un risque\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChangeRisque}\r\n                  >\r\n                    {this.state.risques.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.name}\r\n                        >\r\n                          {element.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Catégorie\" hasFeedback>\r\n                {getFieldDecorator(\"categorie\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez une catégorie \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.categories.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Intermédiaire\" hasFeedback>\r\n                {getFieldDecorator(\"partenaire\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez un intermédiaire \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    onChange={this.handleChangeSelect}\r\n                    placeholder=\"-sélectionnez -\"\r\n                  >\r\n                    {this.state.partenaire.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.raisonSocial}\r\n                        >\r\n                          {element.raisonSocial}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Sous catégorie\" hasFeedback>\r\n                {getFieldDecorator(\"sousCategorie\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez une catégorie \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.sousCategories.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={24}>\r\n              <Form.Item>\r\n                {current === 0 && (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginBottom: \"25px\" }}\r\n                  >\r\n                    Suivant\r\n                    <Icon type=\"arrow-right\" />\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      risque: Form.createFormField({\r\n        ...props.risque,\r\n        value: props.risque.value\r\n      }),\r\n      categorie: Form.createFormField({\r\n        ...props.categorie,\r\n        value: props.categorie.value\r\n      }),\r\n      partenaire: Form.createFormField({\r\n        ...props.partenaire,\r\n        value: props.partenaire.value\r\n      }),\r\n      sousCategorie: Form.createFormField({\r\n        ...props.sousCategorie,\r\n        value: props.sousCategorie.value\r\n      })\r\n    };\r\n  }\r\n})(StepZero);\r\n","/* eslint-disable react/prop-types */\r\nimport \"./ProduitDeces.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { notification, Steps } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport StepFive from \"./Steps/StepFive\";\r\nimport StepFour from \"./Steps/StepFour\";\r\nimport StepOne from \"./Steps/StepOne\";\r\nimport StepTarification from \"./Steps/StepTarification\";\r\nimport StepThree from \"./Steps/StepThree\";\r\nimport StepTwo from \"./Steps/StepTwo\";\r\nimport StepZero from \"./Steps/StepZero\";\r\nimport { ajoutDecesProduit, getFamilleProduitByName } from \"./ProduitDecesAPI\";\r\n\r\nconst { Step } = Steps;\r\nlet name = \"Deces\";\r\nclass ProduitDeces extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0,\r\n      prestation: {},\r\n      modalites: {},\r\n      restitutionList: {},\r\n      normesSelection: {},\r\n      commission: {},\r\n      reference: {},\r\n      type: \"\",\r\n      tarrificationL: {},\r\n      familleProduit: \"\",\r\n      optionAssurance: {},\r\n      champs: {},\r\n      typeRisque: [],\r\n      fields: {\r\n        ///////////Step0//////////////////////\r\n\r\n        risque: { value: \"\" },\r\n        categorie: { value: \"\" },\r\n        partenaire: { value: \"\" },\r\n        sousCategorie: { value: \"\" },\r\n\r\n        ///////////Step1///////////////////////\r\n\r\n        libelle: { value: \"\" },\r\n        code: { value: \"\" },\r\n        numeroHomologation: { value: \"\" },\r\n        dateHomologation: { value: \"\" },\r\n        periodicites: {},\r\n\r\n        ////////////////Step2////////////////\r\n\r\n        fraisGestion: { value: \"\" },\r\n        fraisAcquisition: { value: \"\" },\r\n        differeMin: { value: \"\" },\r\n        differeMax: { value: \"\" },\r\n        dureeMin: { value: \"\" },\r\n        dureeMax: { value: \"\" },\r\n        ageMin: { value: \"\" },\r\n        tvaFraisAcquisition: { value: \"\" },\r\n        tvaFraisGestion: { value: \"\" },\r\n        delaiSansSouscription: { value: \"\" },\r\n        delaiEnAttente: { value: \"\" },\r\n        ageMaxEligibilite: { value: \"\" },\r\n        echeanceImpayees: { value: \"\" },\r\n        taxe: { value: \"\" },\r\n        taxeParafiscale: { value: \"\" },\r\n        plafondFrais: { value: \"\" },\r\n        exclusion: {},\r\n        delai: { value: \"\" },\r\n        type: { value: \"\" },\r\n        piece: { value: \"\" },\r\n        visibilite: { value: \"\" },\r\n\r\n        /////////////////////Step3/////////////\r\n\r\n        seuilConseil: { value: \"\" },\r\n        seuilExaminateur: { value: \"\" },\r\n        seuilReassurance: { value: \"\" },\r\n        delaiPreavis: { value: \"\" },\r\n        delaiResiliation: { value: \"\" },\r\n\r\n        //////////////Step4//////////////////\r\n\r\n        restitutionPiece: [],\r\n\r\n        ///////////////////////Step5////////\r\n\r\n        ageEcheance: { value: \"\" },\r\n\r\n        numeroCompte: { value: \"\" },\r\n\r\n        codeCompte: { value: \"\" },\r\n\r\n        libelleAgence: { value: \"\" },\r\n\r\n        pointVente: {},\r\n\r\n        commissions: [],\r\n\r\n        tarrification: []\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getFamilleProduit(name);\r\n    console.log(\"fields:\", this.state.fields);\r\n  }\r\n  async getFamilleProduit(id) {\r\n    let response = await getFamilleProduitByName(id);\r\n    this.setState({\r\n      familleProduit: response.data\r\n    });\r\n  }\r\n  checkCurrent = compteur => {\r\n    this.setState({ current: compteur });\r\n  };\r\n  checkCurrentZero = (risque, compteur) => {\r\n    this.setState({ current: compteur, typeRisque: risque });\r\n  };\r\n  checkSelectedLists = (arrayPrestation, arrayModalites, compteur) => {\r\n    this.setState({\r\n      modalites: arrayModalites,\r\n      prestation: JSON.parse(localStorage.getItem(\"adresse\")),\r\n      current: compteur\r\n    });\r\n  };\r\n\r\n  checkSelectedRest = (arrayRestitution, compteur, arrayNormes) => {\r\n    this.setState({\r\n      restitutionList: arrayRestitution,\r\n      current: compteur,\r\n      normesSelection: arrayNormes\r\n    });\r\n  };\r\n\r\n  checkTarification = (tarrificationList, typeTar, compteur) => {\r\n    this.setState(\r\n      { tarrificationL: tarrificationList, type: typeTar, current: compteur },\r\n      () => {\r\n        this.handleSubmit();\r\n      }\r\n    );\r\n  };\r\n  checkSelectedTar = (dataCommission, dataReference, dataOption, compteur) => {\r\n    this.setState(\r\n      {\r\n        reference: dataReference,\r\n        commission: dataCommission,\r\n        optionAssurance: dataOption,\r\n        current: compteur\r\n      },\r\n      () => {\r\n        this.handleSubmit();\r\n      }\r\n    );\r\n  };\r\n\r\n  handleFormChange = changedFields => {\r\n    this.setState(({ fields }) => ({\r\n      fields: { ...fields, ...changedFields }\r\n    }));\r\n  };\r\n\r\n  handleSubmit() {\r\n    if (this.state.current === 6) {\r\n      let exclus = [];\r\n      this.state.fields.exclusion.value.forEach(element => {\r\n        exclus.push({ id: element });\r\n      });\r\n      let periodicit = [];\r\n      this.state.fields.periodicites.value.forEach(element => {\r\n        periodicit.push({ id: element });\r\n      });\r\n      let point = [];\r\n      this.state.reference.pointVente.forEach(element => {\r\n        point.push({ id: element });\r\n      });\r\n      let productRequest = {};\r\n      if (this.state.fields.visibilite.value === true) {\r\n        productRequest = {\r\n          code: this.state.fields.code.value,\r\n          libelle: this.state.fields.libelle.value,\r\n          numeroHomologation: this.state.fields.numeroHomologation.value,\r\n          dateHomologation: this.state.fields.dateHomologation.value,\r\n          fraisGestion: this.state.fields.fraisGestion.value,\r\n          fraisAcquisition: this.state.fields.fraisAcquisition.value,\r\n          tvaFraisGestion: this.state.fields.tvaFraisGestion.value,\r\n          tvaFraisAcquisition: this.state.fields.tvaFraisAcquisition.value,\r\n          plafondFrais: this.state.fields.plafondFrais.value,\r\n          taxe: this.state.fields.taxe.value,\r\n          taxeParaFiscale: this.state.fields.taxeParafiscale.value,\r\n          delaiResiliation: this.state.modalites.delaiResiliation,\r\n          delaiPreavis: this.state.modalites.delaiPreavis,\r\n          delaiSansSouscription: this.state.fields.delaiSansSouscription.value,\r\n          delaiEnAttente: this.state.fields.delaiEnAttente.value,\r\n          seuilConseil: this.state.modalites.seuilConseil,\r\n          seuilExaminateur: this.state.modalites.seuilExaminateur,\r\n          seuilReassurance: this.state.modalites.seuilReassurance,\r\n          dureeMax: this.state.fields.dureeMax.value,\r\n          dureeMin: this.state.fields.dureeMin.value,\r\n          differeMax: this.state.fields.differeMax.value,\r\n          differeMin: this.state.fields.differeMin.value,\r\n          ageMaxEligibilite: this.state.fields.ageMaxEligibilite.value,\r\n          echeanceImpayees: this.state.fields.echeanceImpayees.value,\r\n          ageMin: this.state.fields.ageMin.value,\r\n          numeroCompte: this.state.reference.numeroCompte,\r\n          codeCompte: this.state.reference.codeCompte,\r\n          libelleCompte: this.state.reference.libelleAgence,\r\n          ageEcheance: this.state.reference.ageEcheance,\r\n          responsableProduction: this.state.reference.responsableProduction,\r\n          responsablePrestation: this.state.reference.responsablePrestation,\r\n          exclusions: exclus,\r\n          periodicites: periodicit,\r\n          pointVentes: point,\r\n          risqueId: this.state.fields.risque.value,\r\n          categorieId: this.state.fields.categorie.value,\r\n          partenaireId: this.state.fields.partenaire.value,\r\n          sousCategorieId: this.state.fields.sousCategorie.value,\r\n          commissions: this.state.commission,\r\n          tarrifications: this.state.tarrificationL,\r\n          decesCauseRestitution: this.state.restitutionList,\r\n          normes: this.state.normesSelection,\r\n          prestations: this.state.prestation,\r\n          options: this.state.optionAssurance,\r\n          produitType: this.state.type.toLowerCase(),\r\n          familleId: this.state.familleProduit\r\n        };\r\n      } else {\r\n        productRequest = {\r\n          code: this.state.fields.code.value,\r\n          libelle: this.state.fields.libelle.value,\r\n          numeroHomologation: this.state.fields.numeroHomologation.value,\r\n          dateHomologation: this.state.fields.dateHomologation.value,\r\n          fraisGestion: this.state.fields.fraisGestion.value,\r\n          fraisAcquisition: this.state.fields.fraisAcquisition.value,\r\n          tvaFraisGestion: this.state.fields.tvaFraisGestion.value,\r\n          tvaFraisAcquisition: this.state.fields.tvaFraisAcquisition.value,\r\n          plafondFrais: this.state.fields.plafondFrais.value,\r\n          taxe: this.state.fields.taxe.value,\r\n          taxeParaFiscale: this.state.fields.taxeParafiscale.value,\r\n          delaiResiliation: this.state.modalites.delaiResiliation,\r\n          delaiPreavis: this.state.modalites.delaiPreavis,\r\n          delaiSansSouscription: this.state.fields.delaiSansSouscription.value,\r\n          delaiEnAttente: this.state.fields.delaiEnAttente.value,\r\n          seuilConseil: this.state.modalites.seuilConseil,\r\n          seuilExaminateur: this.state.modalites.seuilExaminateur,\r\n          seuilReassurance: this.state.modalites.seuilReassurance,\r\n          dureeMax: this.state.fields.dureeMax.value,\r\n          dureeMin: this.state.fields.dureeMin.value,\r\n          differeMax: this.state.fields.differeMax.value,\r\n          differeMin: this.state.fields.differeMin.value,\r\n          ageMaxEligibilite: this.state.fields.ageMaxEligibilite.value,\r\n          ageMin: this.state.fields.ageMin.value,\r\n          numeroCompte: this.state.reference.numeroCompte,\r\n          codeCompte: this.state.reference.codeCompte,\r\n          libelleCompte: this.state.reference.libelleAgence,\r\n          ageEcheance: this.state.reference.ageEcheance,\r\n          exclusions: exclus,\r\n          periodicites: periodicit,\r\n          pointVentes: point,\r\n          responsableProduction: this.state.reference.responsableProduction,\r\n          responsablePrestation: this.state.reference.responsablePrestation,\r\n          risqueId: this.state.fields.risque.value,\r\n          categorieId: this.state.fields.categorie.value,\r\n          partenaireId: this.state.fields.partenaire.value,\r\n          sousCategorieId: this.state.fields.sousCategorie.value,\r\n          commissions: this.state.commission,\r\n          tarrifications: this.state.tarrificationL,\r\n          decesCauseRestitution: this.state.restitutionList,\r\n          normes: this.state.normesSelection,\r\n          prestations: this.state.prestation,\r\n          options: this.state.optionAssurance,\r\n          produitType: this.state.type.toLowerCase(),\r\n          familleId: this.state.familleProduit\r\n        };\r\n      }\r\n      console.log(\"request:\", productRequest);\r\n      ajoutDecesProduit(productRequest)\r\n        .then(response => {\r\n          notification.success({\r\n            message: \"TAKAFUL\",\r\n            description: \"L'insertion est bien faite\"\r\n          });\r\n          this.props.record.history.push(\"/consultproduitdeces\");\r\n        })\r\n        .catch(error => {\r\n          if (error.response.data.message === \"400 product already exists\") {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description: \"Ce produit existe déjà\"\r\n            });\r\n          } else if (error.response.data.status === 400) {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description: \"Merci de vérifier le type des champs\"\r\n            });\r\n          } else {\r\n            notification.error({\r\n              message: \"TAKAFUL\",\r\n              description: \"l'insertion est mal passée Merci de réessayer\"\r\n            });\r\n          }\r\n        });\r\n\r\n      localStorage.removeItem(\"adresse\");\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { current, fields, modalites, typeRisque } = this.state;\r\n    const steps = [\r\n      {\r\n        title: \"Etape 1\",\r\n        content: (\r\n          <StepZero\r\n            check={this.checkCurrentZero}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Informations\"\r\n      },\r\n      {\r\n        title: \"Etape 2\",\r\n        content: (\r\n          <StepOne\r\n            check={this.checkCurrent}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Informations générales\"\r\n      },\r\n      {\r\n        title: \"Etape 3\",\r\n        content: (\r\n          <StepTwo\r\n            check={this.checkCurrent}\r\n            {...fields}\r\n            risque={typeRisque}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Paramètres globaux\"\r\n      },\r\n      {\r\n        title: \"Etape 4\",\r\n        content: (\r\n          <StepTarification\r\n            check={this.checkTarification}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Tarification\"\r\n      },\r\n      {\r\n        title: \"Etape 5\",\r\n        content: (\r\n          <StepThree\r\n            check={this.checkSelectedLists}\r\n            {...modalites}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Modalités prestations\"\r\n      },\r\n      {\r\n        title: \"Etape 6\",\r\n        content: (\r\n          <StepFour\r\n            check={this.checkSelectedRest}\r\n            {...fields}\r\n            dataProp={this.state.modalites}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Norme Sélection/Restitution\"\r\n      },\r\n      {\r\n        title: \"Etape 7\",\r\n        content: (\r\n          <StepFive\r\n            check={this.checkSelectedTar}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Edition\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Nouveau produit\" />\r\n        <Steps current={current}>\r\n          {steps.map(item => (\r\n            <Step\r\n              key={item.title}\r\n              title={item.title}\r\n              description={item.description}\r\n            />\r\n          ))}\r\n        </Steps>\r\n        <div className=\"steps-content-style\">{steps[current].content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProduitDeces;\r\n","export const next = (context, number) => {\r\n  if (context.state.current === number) {\r\n    const current = context.state.current + 1;\r\n    context.setState({ current });\r\n    context.props.check(current);\r\n  }\r\n};","export const prev = (context) => {\r\n    const current = context.state.current - 1;\r\n    context.setState({ current });\r\n    context.props.check(current);\r\n  }\r\n","import {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  Select,\r\n} from \"antd\";\r\nimport React from \"react\";\r\nimport { next } from \"./StepsServices/next\";\r\nimport { prev } from \"./StepsServices/prev\";\r\nimport {\r\n  formItemLayout,\r\n  formItemInputWithAddons\r\n} from \"../../../../util/Helpers\";\r\n\r\nconst { Option } = Select;\r\n\r\nclass StepModalite extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 2,\r\n      rachatTotal: this.props.rachatTotal.value,\r\n      rachatPartiel: this.props.rachatPartiel.value,\r\n      natureConditionDisciplinaireTotale: [\r\n        { name: \"Montant fixe\", value: \"FIXE\" },\r\n        { name: \"Pourcentage\", value: \"POURCENTAGE\" },\r\n        { name: \"Montant à saisir\", value: \"ASAISIR\" },\r\n      ],\r\n      natureConditionDisciplinaireTotaleValue: this.props.natureConditionDisciplinaireTotale.value,\r\n      natureConditionDisciplinairePartielValue: this.props.natureConditionDisciplinairePartiel.value,\r\n      conditionDisciplinairePartiel:this.props.conditionDisciplinairePartiel.value,\r\n      conditionDisciplinaireTotale:this.props.conditionDisciplinaireTotale.value,\r\n    };\r\n  }\r\nradioGroup=(label, field, fieldDecorater, defaultValue) =>{\r\n    const fieldToAdd = field;\r\n    return (\r\n      <Form.Item label={<label style={{ whiteSpace: \"normal\" }}>{label}</label>}>\r\n        {fieldDecorater(fieldToAdd, {\r\n          initialValue: defaultValue,\r\n        })(\r\n          <Radio.Group buttonStyle=\"solid\" defaultValue={defaultValue}>\r\n            <Radio.Button value={true}>Oui</Radio.Button>\r\n            <Radio.Button value={false}>Non</Radio.Button>\r\n          </Radio.Group>\r\n        )}\r\n      </Form.Item>\r\n    );\r\n  }\r\n  \r\n  onChangeRachatTotal = (e) => {\r\n    this.setState({\r\n      rachatTotal: e.target.value,\r\n    });\r\n  };\r\n  onChangeRachatPartiel = (e) => {\r\n    this.setState({\r\n      rachatPartiel: e.target.value,\r\n    });\r\n  };\r\n  onChangeNatureConditionDT = (e) => {\r\n    this.setState({\r\n      natureConditionDisciplinaireTotaleValue: e,\r\n    });\r\n  };\r\n  onChangeNatureConditionDP = (e) => {\r\n    this.setState({\r\n      natureConditionDisciplinairePartielValue: e,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (\r\n        values.natureConditionDisciplinaireTotale !== \"\" &&\r\n        values.natureConditionDisciplinairePartiel !== \"\"\r\n      ) {\r\n        next(this, 2);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { current } = this.state;\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form\r\n            {...formItemLayout}\r\n            id=\"stepmodalite\"\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Modalités de rachat</Divider>\r\n            </Col>\r\n            <Row>\r\n              <Col span={12}>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>Application de rachat totale</label>}>\r\n                  {getFieldDecorator(\"rachatTotal\", {\r\n                    initialValue: this.state.rachatTotal,\r\n                  })(\r\n                    <Radio.Group\r\n                      buttonStyle=\"solid\"\r\n                      defaultValue={this.state.rachatTotal}\r\n                      onChange={this.onChangeRachatTotal}\r\n                    >\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n                {this.state.rachatTotal ? (\r\n                  <Form.Item label={<label style={{whiteSpace : \"normal\"}}>Durée minimale de souscription</label>}>\r\n                    {getFieldDecorator(\r\n                      \"dureeMinimalSouscriptionAvantRachatTotal\",\r\n                      {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            pattern: new RegExp(/^[0-9\\b]+$/),\r\n                            message: \"Format invalide!\",\r\n                          },\r\n                        ],\r\n                      }\r\n                    )(\r\n                      <Input\r\n                        addonAfter=\"Mois\"\r\n                        placeholder=\"avant d’opérer une demande de rachat total\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                ) : null}\r\n                {this.state.rachatTotal\r\n                  ? this.radioGroup(\r\n                    \"Application de condition disciplinaire totale\",\r\n                    \"conditionDisciplinaireTotale\",\r\n                    getFieldDecorator,\r\n                    this.state.conditionDisciplinaireTotale,\r\n                  )\r\n                  : null}\r\n                <Form.Item\r\n                  label={<label style={{whiteSpace : \"normal\"}}>{\"Nature de la condition disciplinaire\"}</label>}\r\n                  hasFeedback\r\n                >\r\n                  {getFieldDecorator(\"natureConditionDisciplinaireTotale\", {\r\n                    rules: [{ required: true }],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"Selectionnez ...\"\r\n                      onChange={this.onChangeNatureConditionDT}\r\n                    >\r\n                      {this.state.natureConditionDisciplinaireTotale.map(\r\n                        (element) => {\r\n                          return (\r\n                            <Option value={element.value} label={element.value}>\r\n                              {element.name}\r\n                            </Option>\r\n                          );\r\n                        }\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                {this.state.natureConditionDisciplinaireTotaleValue === \"FIXE\"\r\n                  ? formItemInputWithAddons(\r\n                    \"Valeur de la condition disciplinaire\",\r\n                    \"valeurConditionDisciplinaireTotale\",\r\n                    \"DH\",\r\n                    getFieldDecorator\r\n                  )\r\n                  : null}\r\n                {this.state.natureConditionDisciplinaireTotaleValue ===\r\n                  \"POURCENTAGE\"\r\n                  ? formItemInputWithAddons(\r\n                    \"Valeur de la condition disciplinaire\",\r\n                    \"valeurConditionDisciplinaireTotale\",\r\n                    \"%\",\r\n                    getFieldDecorator\r\n                  )\r\n                  : null}\r\n              </Col>\r\n              <Col span={12}>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Application de rachat partiel\"}</label>}>\r\n                  {getFieldDecorator(\"rachatPartiel\", {\r\n                    initialValue: false,\r\n                  })(\r\n                    <Radio.Group\r\n                      buttonStyle=\"solid\"\r\n                      defaultValue={false}\r\n                      onChange={this.onChangeRachatPartiel}\r\n                    >\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n                {this.state.rachatPartiel\r\n                  ? formItemInputWithAddons(\r\n                    \"Maximum du montant de rachat partiel\",\r\n                    \"maximumMontantRachatPartiel\",\r\n                    \"%\",\r\n                    getFieldDecorator\r\n                  )\r\n                  : null}\r\n                {this.state.rachatPartiel\r\n                  ? formItemInputWithAddons(\r\n                    \"Nombre maximum de rachat partiel\",\r\n                    \"nombreMaximumRachatPartiel\",\r\n                    \"\",\r\n                    getFieldDecorator\r\n                  )\r\n                  : null}\r\n                {this.state.rachatPartiel ? (\r\n                  <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Durée minimale de souscription\"}</label>}>\r\n                    {getFieldDecorator(\r\n                      \"dureeMinimalSouscriptionAvantRachatPartiel\",\r\n                      {\r\n                        rules: [\r\n                          {\r\n                            required: true,\r\n                            pattern: new RegExp(/^[0-9\\b]+$/),\r\n                            message: \"Format invalide!\",\r\n                          },\r\n                        ],\r\n                      }\r\n                    )(\r\n                      <Input\r\n                        addonAfter=\"Mois\"\r\n                        placeholder=\"avant une demande de rachat partiel\"\r\n                        type=\"number\"\r\n                      />\r\n                    )}\r\n                  </Form.Item>\r\n                ) : null}\r\n                {this.state.rachatPartiel\r\n                  ? this.radioGroup(\r\n                    \"Application de condition discip partiel\",\r\n                    \"conditionDisciplinairePartiel\",\r\n                    getFieldDecorator,\r\n                    this.state.conditionDisciplinairePartiel,\r\n                  )\r\n                  : null}\r\n                <Form.Item\r\n                  label={<label style={{whiteSpace : \"normal\"}}>{\"Nature de la condition disciplinaire\"}</label>}\r\n                  hasFeedback\r\n                >\r\n                  {getFieldDecorator(\"natureConditionDisciplinairePartiel\", {\r\n                    rules: [{ required: true }],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"Selectionnez ...\"\r\n                      onChange={this.onChangeNatureConditionDP}\r\n                    >\r\n                      {this.state.natureConditionDisciplinaireTotale.map(\r\n                        (element) => {\r\n                          return (\r\n                            <Option value={element.value} label={element.value}>\r\n                              {element.name}\r\n                            </Option>\r\n                          );\r\n                        }\r\n                      )}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                {this.state.natureConditionDisciplinairePartielValue === \"FIXE\"\r\n                  ? formItemInputWithAddons(\r\n                    \"Valeur de la condition disciplinaire\",\r\n                    \"valeurConditionDisciplinairePartiel\",\r\n                    \"DH\",\r\n                    getFieldDecorator\r\n                  )\r\n                  : null}\r\n                {this.state.natureConditionDisciplinairePartielValue ===\r\n                  \"POURCENTAGE\"\r\n                  ? formItemInputWithAddons(\r\n                    \"Valeur de la condition disciplinaire\",\r\n                    \"valeurConditionDisciplinairePartiel\",\r\n                    \"%\",\r\n                    getFieldDecorator\r\n                  )\r\n                  : null}\r\n              </Col>\r\n            </Row>\r\n            <Col span={24}>\r\n              <Form.Item>\r\n                {current > 0 && (\r\n                  <Button style={{ marginLeft: 8 }} onClick={() => prev(this)}>\r\n                    <Icon type=\"arrow-left\" />\r\n                    Précédent\r\n                  </Button>\r\n                )}\r\n                {current === 2 && (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginBottom: \"25px\", marginLeft: \"10px\" }}\r\n                  >\r\n                    Suivant\r\n                    <Icon type=\"arrow-right\" />\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      rachatTotal: Form.createFormField({\r\n        ...props.rachatTotal,\r\n        value: props.rachatTotal.value,\r\n      }),\r\n      dureeMinimalSouscriptionAvantRachatTotal: Form.createFormField({\r\n        ...props.dureeMinimalSouscriptionAvantRachatTotal,\r\n        value: props.dureeMinimalSouscriptionAvantRachatTotal.value,\r\n      }),\r\n      conditionDisciplinaireTotale: Form.createFormField({\r\n        ...props.conditionDisciplinaireTotale,\r\n        value: props.conditionDisciplinaireTotale.value,\r\n      }),\r\n      natureConditionDisciplinaireTotale: Form.createFormField({\r\n        ...props.natureConditionDisciplinaireTotale,\r\n        value: props.natureConditionDisciplinaireTotale.value,\r\n      }),\r\n      valeurConditionDisciplinaireTotale: Form.createFormField({\r\n        ...props.valeurConditionDisciplinaireTotale,\r\n        value: props.valeurConditionDisciplinaireTotale.value,\r\n      }),\r\n      rachatPartiel: Form.createFormField({\r\n        ...props.rachatPartiel,\r\n        value: props.rachatPartiel.value,\r\n      }),\r\n      maximumMontantRachatPartiel: Form.createFormField({\r\n        ...props.maximumMontantRachatPartiel,\r\n        value: props.maximumMontantRachatPartiel.value,\r\n      }),\r\n      nombreMaximumRachatPartiel: Form.createFormField({\r\n        ...props.nombreMaximumRachatPartiel,\r\n        value: props.nombreMaximumRachatPartiel.value,\r\n      }),\r\n      dureeMinimalSouscriptionAvantRachatPartiel: Form.createFormField({\r\n        ...props.dureeMinimalSouscriptionAvantRachatPartiel,\r\n        value: props.dureeMinimalSouscriptionAvantRachatPartiel.value,\r\n      }),\r\n      conditionDisciplinairePartiel: Form.createFormField({\r\n        ...props.conditionDisciplinairePartiel,\r\n        value: props.conditionDisciplinairePartiel.value,\r\n      }),\r\n      natureConditionDisciplinairePartiel: Form.createFormField({\r\n        ...props.natureConditionDisciplinairePartiel,\r\n        value: props.natureConditionDisciplinairePartiel.value,\r\n      }),\r\n      valeurConditionDisciplinairePartiel: Form.createFormField({\r\n        ...props.valeurConditionDisciplinairePartiel,\r\n        value: props.valeurConditionDisciplinairePartiel.value,\r\n      }),\r\n    };\r\n  }\r\n})(StepModalite);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  DatePicker,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React from \"react\";\r\nimport { next } from \"./StepsServices/next\";\r\nimport { prev } from \"./StepsServices/prev\";\r\nimport {\r\n  formItemLayout,\r\n  formItemInputWithAddons\r\n} from \"../../../../util/Helpers\";\r\nimport { getPeriodicite } from \"../../../GestionContrats/ContratsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nclass StepOne extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 1,\r\n      periodicite: []\r\n    };\r\n  }\r\n\r\n  selectMultiple = (field, context, fieldDecorater, toMap, label) => {\r\n    const selectField = field;\r\n    return (\r\n      <Form.Item label={label}>\r\n        {\" \"}\r\n        {fieldDecorater(selectField, {\r\n          rules: [{ required: true, message: \"Champs Obligatoire !\" }]\r\n        })(\r\n          <Select\r\n            mode=\"multiple\"\r\n            placeholder=\"Selectionnez ...\"\r\n            onChange={context.handleChange}\r\n          >\r\n            {toMap.map(element => {\r\n              return (\r\n                <Option key={element.id} value={element.id} label={element.abb}>\r\n                  {element.libelle}\r\n                </Option>\r\n              );\r\n            })}\r\n          </Select>\r\n        )}\r\n      </Form.Item>\r\n    );\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (\r\n        values.libelle !== \"\" &&\r\n        values.code !== \"\" &&\r\n        values.numeroHomologation !== \"\" &&\r\n        values.dateHomologation !== \"\" &&\r\n        values.periodicites !== undefined\r\n      ) {\r\n        next(this, 1);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllPeriodicite(this);\r\n  }\r\n\r\n  getAllPeriodicite = async context => {\r\n    let response = await getPeriodicite();\r\n    context.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { current } = this.state;\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form\r\n            {...formItemLayout}\r\n            id=\"infoGenerales\"\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Informations générales</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Libelle\">\r\n                {getFieldDecorator(\"libelle\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez la libelle\"\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n              {formItemInputWithAddons(\r\n                \"Frais gestion WAKALA\",\r\n                \"fraisGestion\",\r\n                \"%\",\r\n                getFieldDecorator\r\n              )}\r\n              {formItemInputWithAddons(\r\n                \"Frais d'acquisition\",\r\n                \"fraisAcquisition\",\r\n                \"%\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Abréviation\">\r\n                {getFieldDecorator(\"code\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez le code \"\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n\r\n              {formItemInputWithAddons(\r\n                \"TVA frais de gestion\",\r\n                \"tvaFraisGestion\",\r\n                \"%\",\r\n                getFieldDecorator\r\n              )}\r\n              {formItemInputWithAddons(\r\n                \"TVA frais d'acquisition\",\r\n                \"tvaFraisAcquisition\",\r\n                \"%\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n            {/** ------------------------------- */}\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Homologation</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item\r\n                label={\r\n                  <label style={{ whiteSpace: \"normal\" }}>\r\n                    {\"Numéro d'homologation\"}\r\n                  </label>\r\n                }\r\n                hasFeedback\r\n              >\r\n                {getFieldDecorator(\"numeroHomologation\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"enter le numéro d'homologation\"\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item\r\n                label={\r\n                  <label style={{ whiteSpace: \"normal\" }}>\r\n                    {\"Date d'homologation\"}\r\n                  </label>\r\n                }\r\n                hasFeedback\r\n              >\r\n                {getFieldDecorator(\"dateHomologation\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez la date d'homologation \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <DatePicker\r\n                    format={dateFormat}\r\n                    onChange={this.onChangeDate}\r\n                  ></DatePicker>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Périodicité</Divider>\r\n            </Col>\r\n            <Col span={24} offset={2}>\r\n              {this.selectMultiple(\r\n                \"periodicites\",\r\n                this,\r\n                getFieldDecorator,\r\n                this.state.periodicite\r\n              )}\r\n            </Col>\r\n            <Col span={24}>\r\n              <Form.Item>\r\n                {current > 0 && (\r\n                  <Button style={{ marginLeft: 8 }} onClick={() => prev(this)}>\r\n                    <Icon type=\"arrow-left\" />\r\n                    Précédent\r\n                  </Button>\r\n                )}\r\n                {current === 1 && (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginBottom: \"25px\", marginLeft: \"10px\" }}\r\n                  >\r\n                    Suivant\r\n                    <Icon type=\"arrow-right\" />\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      libelle: Form.createFormField({\r\n        ...props.libelle,\r\n        value: props.libelle.value\r\n      }),\r\n      code: Form.createFormField({\r\n        ...props.code,\r\n        value: props.code.value\r\n      }),\r\n      numeroHomologation: Form.createFormField({\r\n        ...props.numeroHomologation,\r\n        value: props.numeroHomologation.value\r\n      }),\r\n      dateHomologation: Form.createFormField({\r\n        ...props.dateHomologation,\r\n        value: props.dateHomologation.value\r\n      }),\r\n      periodicites: Form.createFormField({\r\n        ...props.periodicites,\r\n        value: props.periodicites.value\r\n      }),\r\n      fraisGestion: Form.createFormField({\r\n        ...props.fraisGestion,\r\n        value: props.fraisGestion.value\r\n      }),\r\n      fraisAcquisition: Form.createFormField({\r\n        ...props.fraisAcquisition,\r\n        value: props.fraisAcquisition.value\r\n      }),\r\n      tvaFraisAcquisition: Form.createFormField({\r\n        ...props.tvaFraisAcquisition,\r\n        value: props.tvaFraisAcquisition.value\r\n      }),\r\n      tvaFraisGestion: Form.createFormField({\r\n        ...props.tvaFraisGestion,\r\n        value: props.tvaFraisGestion.value\r\n      })\r\n    };\r\n  }\r\n})(StepOne);\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport {\r\n  Button,\r\n  Col,\r\n  Divider,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Radio,\r\n  Row,\r\n  Select,\r\n} from \"antd\";\r\nimport React from \"react\";\r\n\r\nimport {\r\n  formItemInputWithAddons,\r\n  formItemLayout,\r\n} from \"../../../../util/Helpers\";\r\nimport { prev } from \"./StepsServices/prev\";\r\nimport { getPoolInvestissment } from \"../ProduitRetraiteAPI\";\r\n\r\nconst { Option } = Select;\r\nconst naturesFiscale = [\r\n  { name: \"Epargne\", value: \"EPARGNE\" },\r\n  { name: \"Retraite complémentaire\", value: \"RETRAITE\" },\r\n];\r\n\r\nclass StepTwo extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 3,\r\n      poolInvestissments: [],\r\n      regimeFiscal: [\r\n        { name: \"Retraite complémentaire\", value: \"RETRAITE\" },\r\n        { name: \"Vie capitalisation\", value: \"VIE\" },\r\n      ],\r\n      modeGestion: [\r\n        { name: \"Moudaraba\", value: \"MOUDARABA\" },\r\n        { name: \"WAKALABILISTITMAR\", value: \"WAKALABILISTITMAR\" },\r\n      ],\r\n      modeCalculCapitalConstitue: [\r\n        {\r\n          name:\r\n            \"Méthode 1 – Début de période + cotisations du mois (non investies\",\r\n          value: \"METHOD1\",\r\n        },\r\n        { name: \"Méthode 2 – Fin de période\", value: \"METHOD2\" },\r\n      ],\r\n      modeGestionValue: \"\",\r\n      naturesFiscale: \"\",\r\n      visibilite: this.props.visibilite.value,\r\n      renouvellementContratTaciteReconduction:this.props.renouvellementContratTaciteReconduction.value,\r\n    };\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (\r\n        values.numeroCompte !== \"\" &&\r\n        values.libelleCompte !== \"\" &&\r\n        values.dureeMinimalSouscription !== \"\" &&\r\n        values.montantMinContribution !== \"\" &&\r\n        values.tauxRendementAvantImposition !== \"\" &&\r\n        values.natureFiscale !== \"\" &&\r\n        values.poolInvestissment !== undefined\r\n      ) {\r\n        this.props.submit();\r\n      }\r\n    });\r\n  };\r\n  onChangeNatureFiscale = (e) => {\r\n    this.setState({\r\n      naturesFiscale: e,\r\n    });\r\n  };\r\n  onChangeAbattement = () => {\r\n    let abattement = this.state.abattement;\r\n    this.setState({\r\n      abattement: !abattement,\r\n    });\r\n  };\r\n  handleChangeModeGestion = (e) => {\r\n    this.setState({\r\n      modeGestionValue: e,\r\n    });\r\n  };\r\n\r\n  handleChangeModeCalcul = (e) => {\r\n    this.setState({\r\n      modeCalculCapitalConstitueValue: e,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllPoolInvestissment(this);\r\n  }\r\n\r\n  getAllPoolInvestissment = async (context) => {\r\n    let response = await getPoolInvestissment();\r\n    context.setState({\r\n      poolInvestissments: response.data.content,\r\n    });\r\n  };\r\n\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { current } = this.state;\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form\r\n            {...formItemLayout}\r\n            id=\"steptwogenerale\"\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Informations générales</Divider>\r\n            </Col>\r\n            <Row>\r\n              <Col span={10}>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"N° Compte Takaful\"}</label>} hasFeedback>\r\n                  {getFieldDecorator(\"numeroCompte\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ],\r\n                  })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Intitulé du Compte Takaful\"}</label>} hasFeedback>\r\n                  {getFieldDecorator(\"libelleCompte\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ],\r\n                  })(<Input />)}\r\n                </Form.Item>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Durée minimale de souscription\"}</label>}>\r\n                  {getFieldDecorator(\"dureeMinimalSouscription\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/^[0-9\\b]+$/),\r\n                        message: \"Format invalide!\",\r\n                      },\r\n                    ],\r\n                  })(<Input addonAfter=\"Mois\" type=\"number\" />)}\r\n                </Form.Item>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Renouvellement par tacite reconduction\"}</label>}>\r\n                  {getFieldDecorator(\r\n                    \"renouvellementContratTaciteReconduction\",\r\n                    {\r\n                      initialValue: this.state.renouvellementContratTaciteReconduction,\r\n                    }\r\n                  )(\r\n                    <Radio.Group\r\n                      buttonStyle=\"solid\"\r\n                      defaultValue={this.state.renouvellementContratTaciteReconduction}\r\n                      onChange={this.onChange}\r\n                    >\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n                {formItemInputWithAddons(\r\n                  \"Minimum de la contribution initiale\",\r\n                  \"montantMinContribution\",\r\n                  \"DH\",\r\n                  getFieldDecorator\r\n                )}\r\n                {formItemInputWithAddons(\r\n                  \"Taux de rendement cible avant imposition\",\r\n                  \"tauxRendementAvantImposition\",\r\n                  \"%\",\r\n                  getFieldDecorator\r\n                )}\r\n              </Col>\r\n              <Col span={13}>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Mode de gestion\"}</label>} hasFeedback>\r\n                  {getFieldDecorator(\"modeGestion\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"-sélectionnez -\"\r\n                      onChange={this.handleChangeModeGestion}\r\n                    >\r\n                      {this.state.modeGestion.map((element) => {\r\n                        return (\r\n                          <Option value={element.value} label={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                {this.state.modeGestionValue === \"WAKALABILISTITMAR\"\r\n                  ? formItemInputWithAddons(\r\n                      \"Frais fixe WakalabilIstithmar\",\r\n                      \"fraisFixeWakalabilIstithmar\",\r\n                      \"DH\",\r\n                      getFieldDecorator\r\n                    )\r\n                  : null}\r\n                {this.state.modeGestionValue === \"WAKALABILISTITMAR\"\r\n                  ? formItemInputWithAddons(\r\n                      \"Surperformance WakalabilIstithmar\",\r\n                      \"surperformanceWakalabilIstithmar\",\r\n                      \"%\",\r\n                      getFieldDecorator\r\n                    )\r\n                  : null}\r\n                {this.state.modeGestionValue === \"MOUDARABA\"\r\n                  ? formItemInputWithAddons(\r\n                      \"Profit Moudaraba\",\r\n                      \"profitMoudaraba\",\r\n                      \"%\",\r\n                      getFieldDecorator\r\n                    )\r\n                  : null}\r\n                <Form.Item\r\n                  label={<label style={{whiteSpace : \"normal\"}}>{\"Mode de calcul du capital constitué revalorisé\"}</label>}\r\n                  hasFeedback\r\n                >\r\n                  {getFieldDecorator(\"modeCalculCapitalConstitue\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"-sélectionnez -\"\r\n                      onChange={this.handleChangeModeCalcul}\r\n                    >\r\n                      {this.state.modeCalculCapitalConstitue.map((element) => {\r\n                        return (\r\n                          <Option value={element.value} label={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Informations fiscales</Divider>\r\n            </Col>\r\n            <Row>\r\n              <Col span={10}>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Pool d'investissement\"}</label>} hasFeedback>\r\n                  {getFieldDecorator(\"poolInvestissment\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"choisissez un pool \",\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <Select mode=\"multiple\" placeholder=\"Selectionnez ...\">\r\n                      {this.state.poolInvestissments.map((element) => {\r\n                        return (\r\n                          <Option value={element.id} label={element.libelle}>\r\n                            {element.libelle}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Nature fiscale du produit\"}</label>}>\r\n                  {getFieldDecorator(\"natureFiscale\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"entrez la nature fiscale\",\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"-sélectionnez -\"\r\n                      onChange={this.onChangeNatureFiscale}\r\n                    >\r\n                      {naturesFiscale.map((element) => {\r\n                        return (\r\n                          <Option value={element.value} label={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n                {this.state.naturesFiscale ===\"RETRAITE\" ? (\r\n                  <Form.Item label=\"Avec abattement\">\r\n                    {getFieldDecorator(\"visibilite\", {\r\n                      initialValue: this.state.visibilite,\r\n                    })(\r\n                      <Radio.Group\r\n                        buttonStyle=\"solid\"\r\n                        defaultValue={this.state.visibilite}\r\n                        onChange={this.onChangeAbattement}\r\n                      >\r\n                        <Radio.Button value={true}>Oui</Radio.Button>\r\n                        <Radio.Button value={false}>Non</Radio.Button>\r\n                      </Radio.Group>\r\n                    )}\r\n                  </Form.Item>\r\n                ) : null}\r\n\r\n                {this.state.naturesFiscale === \"RETRAITE\" &&\r\n                this.state.abattement\r\n                  ? formItemInputWithAddons(\r\n                      \"Revenu global imposable\",\r\n                      \"revenuGlobal\",\r\n                      \"DH\",\r\n                      getFieldDecorator\r\n                    )\r\n                  : null}\r\n              </Col>\r\n              <Col span={10}>\r\n                <Form.Item label={<label style={{whiteSpace : \"normal\"}}>{\"Régime fiscale\"}</label>} hasFeedback>\r\n                  {getFieldDecorator(\"regimeFiscal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                      },\r\n                    ],\r\n                  })(\r\n                    <Select\r\n                      placeholder=\"-sélectionnez -\"\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      {this.state.regimeFiscal.map((element) => {\r\n                        return (\r\n                          <Option value={element.value} label={element.value}>\r\n                            {element.name}\r\n                          </Option>\r\n                        );\r\n                      })}\r\n                    </Select>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            </Row>\r\n            <Col span={24} style={{ marginTop: 30 }}>\r\n              {current > 0 && (\r\n                <Button onClick={() => prev(this)}>\r\n                  <Icon type=\"arrow-left\" />\r\n                  Précédent\r\n                </Button>\r\n              )}\r\n              {current === 3 && (\r\n                <Button\r\n                  type=\"primary\"\r\n                  form=\"steptwogenerale\"\r\n                  htmlType=\"submit\"\r\n                  style={{ marginLeft: 8, marginBottom: 25 }}\r\n                >\r\n                  <Icon type=\"save\" />\r\n                  Enregistrer\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      numeroCompte: Form.createFormField({\r\n        ...props.numeroCompte,\r\n        value: props.numeroCompte.value,\r\n      }),\r\n      libelleCompte: Form.createFormField({\r\n        ...props.libelleCompte,\r\n        value: props.libelleCompte.value,\r\n      }),\r\n      dureeMinimalSouscription: Form.createFormField({\r\n        ...props.dureeMinimalSouscription,\r\n        value: props.dureeMinimalSouscription.value,\r\n      }),\r\n      renouvellementContratTaciteReconduction: Form.createFormField({\r\n        ...props.renouvellementContratTaciteReconduction,\r\n        value: props.renouvellementContratTaciteReconduction.value,\r\n      }),\r\n      montantMinContribution: Form.createFormField({\r\n        ...props.montantMinContribution,\r\n        value: props.montantMinContribution.value,\r\n      }),\r\n      tauxRendementAvantImposition: Form.createFormField({\r\n        ...props.tauxRendementAvantImposition,\r\n        value: props.tauxRendementAvantImposition.value,\r\n      }),\r\n      poolInvestissment: Form.createFormField({\r\n        ...props.poolInvestissment,\r\n        value: props.poolInvestissment.value,\r\n      }),\r\n      natureFiscale: Form.createFormField({\r\n        ...props.natureFiscale,\r\n        value: props.natureFiscale.value,\r\n      }),\r\n      revenuGlobal: Form.createFormField({\r\n        ...props.revenuGlobal,\r\n        value: props.revenuGlobal.value,\r\n      }),\r\n      regimeFiscal: Form.createFormField({\r\n        ...props.regimeFiscal,\r\n        value: props.regimeFiscal.value,\r\n      }),\r\n      modeGestion: Form.createFormField({\r\n        ...props.modeGestion,\r\n        value: props.modeGestion.value,\r\n      }),\r\n      fraisFixeWakalabilIstithmar: Form.createFormField({\r\n        ...props.fraisFixeWakalabilIstithmar,\r\n        value: props.fraisFixeWakalabilIstithmar.value,\r\n      }),\r\n      surperformanceWakalabilIstithmar: Form.createFormField({\r\n        ...props.surperformanceWakalabilIstithmar,\r\n        value: props.surperformanceWakalabilIstithmar.value,\r\n      }),\r\n      profitMoudaraba: Form.createFormField({\r\n        ...props.profitMoudaraba,\r\n        value: props.profitMoudaraba.value,\r\n      }),\r\n      modeCalculCapitalConstitue: Form.createFormField({\r\n        ...props.modeCalculCapitalConstitue,\r\n        value: props.modeCalculCapitalConstitue.value,\r\n      }),\r\n\r\n      visibilite: Form.createFormField({\r\n        ...props.visibilite,\r\n        value: props.visibilite.value,\r\n      }),\r\n      \r\n    };\r\n  },\r\n})(StepTwo);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Button, Col, Form, Icon, Row, Select } from \"antd\";\r\nimport React from \"react\";\r\nimport { next } from \"./StepsServices/next\";\r\nimport { getAllPartenaire } from \"../../partenaire/PartenaireAPI\";\r\nimport {\r\n  getCategorie,\r\n  getRisque,\r\n  selectStepZero\r\n} from \"../../ProduitDeces/ProduitDecesAPI\";\r\nimport {\r\n  BRANCH_TYPE_DECES_ET_RETRAITE,\r\n  BRANCH_TYPE_RETRAITE\r\n} from \"../../../../constants\";\r\nconst { Option } = Select;\r\nclass StepZero extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      risques: [],\r\n      categories: [],\r\n      partenaire: [],\r\n      current: 0\r\n    };\r\n  }\r\n\r\n  handleChange(value) {}\r\n\r\n  componentDidMount() {\r\n    this.getAllCategorie();\r\n    this.getAllPartenaires();\r\n    this.getAllRisque(BRANCH_TYPE_RETRAITE);\r\n  }\r\n\r\n  async getAllPartenaires() {\r\n    let response = await getAllPartenaire();\r\n    this.setState({\r\n      partenaire: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllRisque(value) {\r\n    let response = await getRisque(value);\r\n\r\n    this.setState({\r\n      risques: response.data.content\r\n    });\r\n  }\r\n  async getAllCategorie() {\r\n    let response = await getCategorie();\r\n\r\n    this.setState({\r\n      categories: response.data.content\r\n    });\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (\r\n        values.risque !== \"\" &&\r\n        values.categorie !== \"\" &&\r\n        values.partenaire !== \"\"\r\n      ) {\r\n        next(this, 0);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 12 },\r\n        sm: { span: 6 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 12 }\r\n      }\r\n    };\r\n    const { current } = this.state;\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form id=\"formZero\" {...formItemLayout} onSubmit={this.handleSubmit}>\r\n            {/*RISQUE :*/}\r\n            <Col span={7}>\r\n              <Form.Item label=\"Risque : \" hasFeedback>\r\n                {getFieldDecorator(\"risque\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Choisissez un risque\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.risques.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.name}\r\n                        >\r\n                          {element.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            {/*CATEGORIE : */}\r\n            <Col span={8}>\r\n              <Form.Item label=\"Catégorie : \" hasFeedback>\r\n                {getFieldDecorator(\"categorie\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez une catégorie \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.categories.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            {/*INTERMEDIAIRE:*/}\r\n            <Col span={9}>\r\n              <Form.Item label=\"Intermédiaire\" hasFeedback>\r\n                {getFieldDecorator(\"partenaire\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez un intermédiaire \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"cliquez pour choisir un type\"\r\n                    onChange={this.handleChangeSelect}\r\n                  >\r\n                    {this.state.partenaire.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.raisonSocial}\r\n                        >\r\n                          {element.raisonSocial}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            {/*NEXT BUTTON*/}\r\n            <Col span={24}>\r\n              <Form.Item>\r\n                {current === 0 && (\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    style={{ marginBottom: \"25px\" }}\r\n                  >\r\n                    Suivant\r\n                    <Icon type=\"arrow-right\" />\r\n                  </Button>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      risque: Form.createFormField({\r\n        ...props.risque,\r\n        value: props.risque.value\r\n      }),\r\n      categorie: Form.createFormField({\r\n        ...props.categorie,\r\n        value: props.categorie.value\r\n      }),\r\n      partenaire: Form.createFormField({\r\n        ...props.partenaire,\r\n        value: props.partenaire.value\r\n      })\r\n    };\r\n  }\r\n})(StepZero);\r\n","import \"./ProduitRetraite.css\";\r\n\r\nimport { Button, notification, Steps } from \"antd\";\r\nimport React from \"react\";\r\nimport {\r\n  formatDateToFormatOne,\r\n  formatDateToFormatTwo\r\n} from \"../../../util/Helpers\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport StepModalite from \"./Steps/StepModalite\";\r\nimport StepOne from \"./Steps/StepOne\";\r\nimport StepTwo from \"./Steps/StepTwo\";\r\nimport StepZero from \"./Steps/StepZero\";\r\nimport { ajoutRetraitProduit } from \"./ProduitRetraiteAPI\";\r\n\r\nconst { Step } = Steps;\r\n\r\nclass ProduitRetraite extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0,\r\n      fields: {\r\n        //--------------Step 0------------------//\r\n        risque: { value: \"\" },\r\n        categorie: { value: \"\" },\r\n        partenaire: { value: \"\" },\r\n        //--------------Step 1-----------------//\r\n        libelle: { value: \"\" },\r\n        code: { value: \"\" },\r\n        numeroHomologation: { value: \"\" },\r\n        dateHomologation: { value: \"\" },\r\n        periodicites: {},\r\n        fraisGestion: { value: \"\" },\r\n        fraisAcquisition: { value: \"\" },\r\n        tvaFraisGestion: { value: \"\" },\r\n        taxe: { value: \"\" },\r\n        tvaFraisAcquisition: { value: \"\" },\r\n        //--------------Step 2-----------------//\r\n        rachatTotal: { value: false },\r\n        dureeMinimalSouscriptionAvantRachatTotal: { value: \"\" },\r\n        conditionDisciplinaireTotale: { value: false },\r\n        natureConditionDisciplinaireTotale: { value: \"\" },\r\n        valeurConditionDisciplinaireTotale: { value: \"\" },\r\n        rachatPartiel: { value: false },\r\n        maximumMontantRachatPartiel: { value: \"\" },\r\n        nombreMaximumRachatPartiel: { value: \"\" },\r\n        dureeMinimalSouscriptionAvantRachatPartiel: { value: \"\" },\r\n        conditionDisciplinairePartiel: { value: false },\r\n        natureConditionDisciplinairePartiel: { value: \"\" },\r\n        valeurConditionDisciplinairePartiel: { value: \"\" },\r\n        //--------------Step 3-----------------//\r\n        numeroCompte: { value: \"\" },\r\n        libelleCompte: { value: \"\" },\r\n        dureeMinimalSouscription: { value: \"\" },\r\n        renouvellementContratTaciteReconduction: { value: false },\r\n        montantMinContribution: { value: \"\" },\r\n        tauxRendementAvantImposition: { value: \"\" },\r\n        poolInvestissment: {},\r\n        natureFiscale: { value: \"\" },\r\n        revenuGlobal: { value: \"\" },\r\n        regimeFiscal: { value: \"\" },\r\n        modeGestion: { value: \"\" },\r\n        fraisFixeWakalabilIstithmar: { value: \"\" },\r\n        surperformanceWakalabilIstithmar: { value: \"\" },\r\n        profitMoudaraba: { value: \"\" },\r\n        modeCalculCapitalConstitue: { value: \"\" },\r\n        visibilite: { value: false }\r\n      }\r\n    };\r\n  }\r\n\r\n  checkCurrent = compteur => {\r\n    this.setState({ current: compteur });\r\n  };\r\n\r\n  handleFormChange = changedFields => {\r\n    this.setState(({ fields }) => ({\r\n      fields: { ...fields, ...changedFields }\r\n    }));\r\n  };\r\n  submit = () => {\r\n    const fields = this.state.fields;\r\n\r\n    let productToSend = {};\r\n    productToSend.categorie = {\r\n      id: fields.categorie.value\r\n    };\r\n    productToSend.code = fields.code.value;\r\n    productToSend.conditionDisciplinairePartiel =\r\n      fields.conditionDisciplinairePartiel.value;\r\n    productToSend.conditionDisciplinaireTotale =\r\n      fields.conditionDisciplinaireTotale.value;\r\n    productToSend.creationDate = formatDateToFormatOne(new Date());\r\n    productToSend.dateHomologation = formatDateToFormatTwo(\r\n      fields.dateHomologation.value.toDate()\r\n    );\r\n    productToSend.dateModification = \"\";\r\n    productToSend.dureeMinimalSouscription =\r\n      fields.dureeMinimalSouscription.value;\r\n    productToSend.dureeMinimalSouscriptionAvantRachatPartiel =\r\n      fields.dureeMinimalSouscriptionAvantRachatPartiel.value;\r\n    productToSend.dureeMinimalSouscriptionAvantRachatTotal =\r\n      fields.dureeMinimalSouscriptionAvantRachatTotal.value;\r\n    productToSend.fraisAcquisition = fields.fraisAcquisition.value;\r\n    productToSend.fraisFixeWakalabilIstithmar =\r\n      fields.fraisFixeWakalabilIstithmar.value;\r\n    productToSend.fraisGestion = fields.fraisGestion.value;\r\n    productToSend.libelle = fields.libelle.value;\r\n    productToSend.libelleCompte = fields.libelleCompte.value;\r\n    productToSend.maximumMontantRachatPartiel =\r\n      fields.maximumMontantRachatPartiel.value;\r\n    productToSend.modeCalculCapitalConstitue =\r\n      fields.modeCalculCapitalConstitue.value;\r\n    productToSend.modeGestion = fields.modeGestion.value;\r\n    productToSend.montantMinContribution = fields.montantMinContribution.value;\r\n    productToSend.natureConditionDisciplinairePartiel =\r\n      fields.natureConditionDisciplinairePartiel.value;\r\n    productToSend.natureConditionDisciplinaireTotale =\r\n      fields.natureConditionDisciplinaireTotale.value;\r\n    productToSend.natureFiscale = fields.natureFiscale.value;\r\n    productToSend.nombreMaximumRachatPartiel =\r\n      fields.nombreMaximumRachatPartiel.value;\r\n    productToSend.numeroCompte = fields.numeroCompte.value;\r\n    productToSend.numeroHomologation = fields.numeroHomologation.value;\r\n    productToSend.partenaire = {\r\n      id: fields.partenaire.value\r\n    };\r\n    productToSend.periodicites = fields.periodicites.value.map(e => {\r\n      return {\r\n        id: e\r\n      };\r\n    });\r\n    productToSend.poolInvestissment = fields.poolInvestissment.value.map(e => {\r\n      return {\r\n        id: e\r\n      };\r\n    });\r\n    productToSend.profitMoudaraba = fields.profitMoudaraba.value;\r\n    productToSend.rachatPartiel = fields.rachatPartiel.value;\r\n    productToSend.rachatTotal = fields.rachatTotal.value;\r\n    productToSend.regimeFiscal = fields.regimeFiscal.value;\r\n    productToSend.renouvellementContratTaciteReconduction =\r\n      fields.renouvellementContratTaciteReconduction.value;\r\n    productToSend.revenuGlobal = fields.revenuGlobal.value;\r\n    productToSend.risque = {\r\n      id: fields.risque.value\r\n    };\r\n    productToSend.surperformanceWakalabilIstithmar =\r\n      fields.surperformanceWakalabilIstithmar.value;\r\n    productToSend.tauxRendementAvantImposition =\r\n      fields.tauxRendementAvantImposition.value;\r\n    productToSend.taxe = fields.taxe.value;\r\n    productToSend.tvaFraisAcquisition = fields.tvaFraisAcquisition.value;\r\n    productToSend.tvaFraisGestion = fields.tvaFraisGestion.value;\r\n    productToSend.valeurConditionDisciplinairePartiel =\r\n      fields.valeurConditionDisciplinairePartiel.value;\r\n    productToSend.valeurConditionDisciplinaireTotale =\r\n      fields.valeurConditionDisciplinaireTotale.value;\r\n\r\n    ajoutRetraitProduit(productToSend)\r\n      .then(value => {\r\n        notification.open({\r\n          message: \"Votre Produit Retraite a été bien crée!\",\r\n          btn: btn,\r\n          duration: null\r\n        });\r\n      })\r\n      .catch(e => {\r\n        notification.open({\r\n          message: \"Erreur issue lors de la création du produit : \" + e.message\r\n        });\r\n      });\r\n\r\n    const btn = (\r\n      <Button\r\n        type=\"primary\"\r\n        size=\"small\"\r\n        onClick={() => window.open(\"/consultproduitretraite\", \"_self\")}\r\n      >\r\n        Confirmer\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { current, fields } = this.state;\r\n    const steps = [\r\n      {\r\n        title: \"Etape 1\",\r\n        content: (\r\n          <StepZero\r\n            check={this.checkCurrent}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Informations\"\r\n      },\r\n      {\r\n        title: \"Etape 2\",\r\n        content: (\r\n          <StepOne\r\n            check={this.checkCurrent}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Informations générales\"\r\n      },\r\n      {\r\n        title: \"Etape 3\",\r\n        content: (\r\n          <StepModalite\r\n            check={this.checkCurrent}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Modalités de rachat\"\r\n      },\r\n      {\r\n        title: \"Etape 4\",\r\n        content: (\r\n          <StepTwo\r\n            check={this.checkCurrent}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n            submit={this.submit}\r\n          />\r\n        ),\r\n        description: \"Paramètres globaux\"\r\n      }\r\n    ];\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Nouveau produit investissement\" />\r\n        <Steps current={current}>\r\n          {steps.map(item => (\r\n            <Step\r\n              key={item.title}\r\n              title={item.title}\r\n              description={item.description}\r\n            />\r\n          ))}\r\n        </Steps>\r\n        <div className=\"steps-content-style\">{steps[current].content}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProduitRetraite;\r\n","import { Button, Col, Divider, Form, Icon, Input, Row, Table, Tag } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport { MyContext } from \"./ConsultProduitDeces.js\";\r\nclass Details extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      record: {},\r\n      value: \"\",\r\n      keyRecord: \"\",\r\n      auxiliaire: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Date Début\",\r\n        dataIndex: \"dateDebut\",\r\n        key: \"dateDebut\"\r\n      },\r\n      {\r\n        title: \"Date Fin\",\r\n        dataIndex: \"dateFin\",\r\n        key: \"Date Fin\"\r\n      },\r\n      {\r\n        title: \"Commission partenaire\",\r\n        dataIndex: \"commissionPartenaire\",\r\n        key: \"Commission partenaire\"\r\n      },\r\n      {\r\n        title: \"TVA\",\r\n        dataIndex: \"tva\",\r\n        key: \"tva\"\r\n      }\r\n    ];\r\n    this.columns2 = [\r\n      {\r\n        title: \"Age min\",\r\n        dataIndex: \"ageMin\",\r\n        key: \"ageMin\"\r\n      },\r\n      {\r\n        title: \"Age max\",\r\n        dataIndex: \"ageMax\",\r\n        key: \"Age max\"\r\n      },\r\n      {\r\n        title: \"Capital min\",\r\n        dataIndex: \"capitalMin\",\r\n        key: \"Capital min\"\r\n      },\r\n      {\r\n        title: \"Capital Max\",\r\n        dataIndex: \"capitalMax\",\r\n        key: \"capitalMax\"\r\n      },\r\n      {\r\n        title: \"Différé min\",\r\n        dataIndex: \"differeMin\",\r\n        key: \"differeMin\"\r\n      },\r\n      {\r\n        title: \"Différé Max\",\r\n        dataIndex: \"differeMax\",\r\n        key: \"différeMax\"\r\n      },\r\n      {\r\n        title: \"Durée Min\",\r\n        dataIndex: \"dureeMin\",\r\n        key: \"dureeMin\"\r\n      },\r\n      {\r\n        title: \"Durée Max\",\r\n        dataIndex: \"dureeMax\",\r\n        key: \"dureeMax\"\r\n      },\r\n      {\r\n        title: \"Taux\",\r\n        dataIndex: \"taux\",\r\n        key: \"taux\"\r\n      }\r\n    ];\r\n    this.columns3 = [\r\n      {\r\n        title: \"Age min\",\r\n        dataIndex: \"ageMin\",\r\n        key: \"ageMin\"\r\n      },\r\n      {\r\n        title: \"Age max\",\r\n        dataIndex: \"ageMax\",\r\n        key: \"Age max\"\r\n      },\r\n      {\r\n        title: \"Capital min\",\r\n        dataIndex: \"capitalMin\",\r\n        key: \"Capital min\"\r\n      },\r\n      {\r\n        title: \"Capital Max\",\r\n        dataIndex: \"capitalMax\",\r\n        key: \"capitalMax\"\r\n      },\r\n      {\r\n        title: \"Différé min\",\r\n        dataIndex: \"differeMin\",\r\n        key: \"differeMin\"\r\n      },\r\n      {\r\n        title: \"Différé Max\",\r\n        dataIndex: \"differeMax\",\r\n        key: \"differeMax\"\r\n      },\r\n      {\r\n        title: \"Durée Min\",\r\n        dataIndex: \"dureeMin\",\r\n        key: \"dureeMin\"\r\n      },\r\n      {\r\n        title: \"Durée Max\",\r\n        dataIndex: \"dureeMax\",\r\n        key: \"dureeMax\"\r\n      },\r\n      {\r\n        title: \"Forfait\",\r\n        dataIndex: \"forfait\",\r\n        key: \"forfait\"\r\n      }\r\n    ];\r\n    this.columns1 = [\r\n      {\r\n        title: \"Type prestation\",\r\n        dataIndex: \"typePrestation.libelle\",\r\n        key: \"typePrestation.libelle\"\r\n      },\r\n      {\r\n        title: \"Pièces justificatives\",\r\n        key: \"pieceJointe\",\r\n        dataIndex: \"pieceJointe\",\r\n        render: pieceJointe => (\r\n          <span>\r\n            {pieceJointe.map(tag => {\r\n              let color = \"geekblue\";\r\n              return (\r\n                <Tag key={tag.id} color={color}>\r\n                  {tag.libelle}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n  }\r\n  handleReload() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 10\r\n      },\r\n      wrapperCol: {\r\n        span: 12\r\n      }\r\n    };\r\n\r\n    return (\r\n      <div className=\"person\">\r\n        <ComponentTitle title=\"Consultation Produit\" />\r\n        <MyContext.Consumer>\r\n          {context => (\r\n            <React.Fragment>\r\n              <h3>Détails du produit : {context.state.libelle}</h3>\r\n              <Divider\r\n                style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n              ></Divider>\r\n\r\n              <Row\r\n                style={{\r\n                  backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                  marginBottom: \"30px\",\r\n                  marginTop: \"10px\"\r\n                }}\r\n              >\r\n                <Col span={24}>\r\n                  <Form {...formItemLayout}>\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Code\">\r\n                        <Input value={context.state.code} />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"N° d'homologation\">\r\n                        <Input value={context.state.numeroHomologation} />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"Différé minimale\">\r\n                        <Input\r\n                          value={context.state.differeMin}\r\n                          addonAfter=\"Mois\"\r\n                        />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"Age minimum\">\r\n                        <Input value={context.state.ageMin} addonAfter=\"ANS\" />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"Echéance impayées à assurer\">\r\n                        <Input\r\n                          value={context.state.echeanceImpayees}\r\n                          addonAfter=\"Mois\"\r\n                        />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"Frais de gestion WAKALA\">\r\n                        <Input\r\n                          value={context.state.fraisGestion}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Frais d'acquisition\">\r\n                        <Input\r\n                          value={context.state.fraisAcquisition}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Seuil Conseil\">\r\n                        <Input\r\n                          value={context.state.seuilConseil}\r\n                          addonAfter=\"DH\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Seuil prestation\">\r\n                        <Input\r\n                          value={context.state.seuilPrestation}\r\n                          addonAfter=\"DH\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Taux taxe d'assurance\">\r\n                        <Input value={context.state.taxe} addonAfter=\"%\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Libelle\">\r\n                        <Input value={context.state.libelle} />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"Date d'homologation\">\r\n                        <Input value={context.state.dateHomologation} />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"Différé maximale\">\r\n                        <Input\r\n                          value={context.state.differeMax}\r\n                          addonAfter=\"Mois\"\r\n                        />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"Age maximum à la souscription\">\r\n                        <Input value={context.state.ageMax} addonAfter=\"ANS\" />\r\n                      </Form.Item>\r\n\r\n                      <Form.Item label=\"Age maximum d'éligibilité\">\r\n                        <Input\r\n                          value={context.state.ageMaxEligibilite}\r\n                          addonAfter=\"ANS\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"TVA frais de gestion\">\r\n                        <Input\r\n                          value={context.state.tvaFraisGestion}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"TVA frais d'acquisition'\">\r\n                        <Input\r\n                          value={context.state.tvaFraisAcquisition}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Seuil examinateur\">\r\n                        <Input\r\n                          value={context.state.seuilExaminateur}\r\n                          addonAfter=\"DH\"\r\n                        />\r\n                      </Form.Item>\r\n                      <Form.Item label=\"Seuil Réassurance\">\r\n                        <Input\r\n                          value={context.state.seuilReassurance}\r\n                          addonAfter=\"DH\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Form>\r\n                </Col>\r\n                <Col span={8}>\r\n                  <h3>Périodicités</h3>\r\n                  <Divider\r\n                    style={{\r\n                      marginBottom: \"3px\",\r\n                      marginTop: \"10px\",\r\n                      width: \"5%\"\r\n                    }}\r\n                  ></Divider>\r\n                  {context.state.periodicites.map(element => {\r\n                    return (\r\n                      <Tag\r\n                        key={element.id}\r\n                        color=\"geekblue\"\r\n                        style={{ margin: \"20px 4px\" }}\r\n                      >\r\n                        {element.libelle}\r\n                      </Tag>\r\n                    );\r\n                  })}\r\n                </Col>\r\n                <Col span={8}>\r\n                  <h3>Exclusions</h3>\r\n                  <Divider\r\n                    style={{ marginBottom: \"3px\", marginTop: \"10px\" }}\r\n                  ></Divider>\r\n                  {context.state.exclusions.map(element => {\r\n                    return (\r\n                      <Tag\r\n                        key={element.id}\r\n                        color=\"purple\"\r\n                        style={{ margin: \"20px 4px\" }}\r\n                      >\r\n                        {element.exclusionNom}\r\n                      </Tag>\r\n                    );\r\n                  })}\r\n                </Col>\r\n                <Col span={8}>\r\n                  <h3>Points de Vente</h3>\r\n                  <Divider\r\n                    style={{ marginBottom: \"3px\", marginTop: \"10px\" }}\r\n                  ></Divider>\r\n                  {context.state.pointVentes.map(element => {\r\n                    return (\r\n                      <Tag\r\n                        key={element.id}\r\n                        color=\"cyan\"\r\n                        style={{ margin: \"20px 4px\" }}\r\n                      >\r\n                        {element.libelle}\r\n                      </Tag>\r\n                    );\r\n                  })}\r\n                </Col>\r\n              </Row>\r\n\r\n              <h3>Commisssions</h3>\r\n              <Divider\r\n                style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n              ></Divider>\r\n              <Row\r\n                style={{\r\n                  backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                  marginBottom: \"30px\",\r\n                  marginTop: \"10px\"\r\n                }}\r\n              >\r\n                <Col span={24}>\r\n                  <Table\r\n                    rowClassName=\"editable-row\"\r\n                    columns={this.columns}\r\n                    dataSource={context.state.commissions}\r\n                    pagination={false}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <h3>Types de prestations</h3>\r\n              <Divider\r\n                style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n              ></Divider>\r\n              <Row\r\n                style={{\r\n                  backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                  marginBottom: \"30px\",\r\n                  marginTop: \"10px\"\r\n                }}\r\n              >\r\n                <Col span={24}>\r\n                  <Table\r\n                    rowClassName=\"editable-row\"\r\n                    columns={this.columns1}\r\n                    dataSource={context.state.prestations}\r\n                    pagination={false}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n\r\n              <h3>Tarifications</h3>\r\n              <Divider\r\n                style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n              ></Divider>\r\n              <Row\r\n                style={{\r\n                  backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                  marginBottom: \"30px\",\r\n                  marginTop: \"10px\"\r\n                }}\r\n              >\r\n                {context.state.tarrifications[0].forfait === null ? (\r\n                  <Col span={24}>\r\n                    <Table\r\n                      rowClassName=\"editable-row\"\r\n                      columns={this.columns2}\r\n                      dataSource={context.state.tarrifications}\r\n                      pagination={false}\r\n                    />\r\n                  </Col>\r\n                ) : (\r\n                  <Col span={24}>\r\n                    <Table\r\n                      rowClassName=\"editable-row\"\r\n                      columns={this.columns3}\r\n                      dataSource={context.state.tarrifications}\r\n                      pagination={false}\r\n                    />\r\n                  </Col>\r\n                )}\r\n              </Row>\r\n            </React.Fragment>\r\n          )}\r\n        </MyContext.Consumer>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"add-button\"\r\n          onClick={() => this.handleReload()}\r\n        >\r\n          <Icon type=\"arrow-left\" />\r\n          Retour\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Details;\r\n","/* eslint-disable react/prop-types */\r\nimport \"./ConsultProduitDeces.css\";\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Button, Divider, Form, Icon, notification, Table } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport Details from \"./Details\";\r\nimport { getAllPointVente } from \"../pointvente/PointVenteAPI\";\r\nimport {\r\n  getCategorie,\r\n  getDecesProduit,\r\n  getRisque,\r\n  updateDecesProduct\r\n} from \"./ProduitDecesAPI\";\r\nimport { getExclusion } from \"../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nimport { getColumnSearchProps } from \"../ProduitRetraite/ProduitRetraiteServices/getColumnSearchProps\";\r\nimport { getPeriodicite } from \"../../GestionContrats/ContratsAPI\";\r\n\r\nexport const MyContext = React.createContext();\r\n\r\nlet exclus = [];\r\nlet periodicts = [];\r\nlet points = [];\r\nclass ConsultProduitDeces extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      record: {},\r\n      value: \"\",\r\n      keyRecord: \"\",\r\n      isEdit: false,\r\n      isEdited: false,\r\n      periodicite: [],\r\n      exclusion: [],\r\n      pointVente: [],\r\n      risques: [],\r\n      categories: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        ...getColumnSearchProps(\"code\", \"Code\", this)\r\n      },\r\n      {\r\n        title: \"Libellé\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\",\r\n        ...getColumnSearchProps(\"libelle\", \"Libelle\", this)\r\n      },\r\n      {\r\n        title: \"Date création\",\r\n        dataIndex: \"creationDate\",\r\n        key: \"creation_date\",\r\n        ...getColumnSearchProps(\"creationDate\", \"Date creation\", this)\r\n      },\r\n      {\r\n        title: \"Risque \",\r\n        dataIndex: \"risque.libelle\",\r\n        key: \"risque\",\r\n        ...getColumnSearchProps(\"risque\", \"risque\", this)\r\n      },\r\n      {\r\n        title: \"Catégorie \",\r\n        dataIndex: \"categorie.libelle\",\r\n        key: \"categorie\",\r\n        ...getColumnSearchProps(\"categorie\", \"Categorie\", this)\r\n      },\r\n      {\r\n        title: \"Date modification \",\r\n        dataIndex: \"dateModification\",\r\n        key: \"dateModification\",\r\n        ...getColumnSearchProps(\"dateModification\", \"dateModification\", this)\r\n      },\r\n\r\n      {\r\n        title: \"Opérations\",\r\n        align: \"center\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Link\r\n                to={{ pathname: \"/Modification\", state: { record: record } }}\r\n              >\r\n                <Icon\r\n                  type=\"edit\"\r\n                  style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n                />\r\n              </Link>\r\n              <Divider type=\"vertical\" />\r\n              <a href=\"#top\" onClick={() => this.handleClick(record)}>\r\n                <Icon\r\n                  type=\"profile\"\r\n                  style={{ color: \"rgb(109, 143, 204)\", fontSize: \"25px\" }}\r\n                />\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  componentDidMount() {\r\n    this.getAllPeriodicite();\r\n    this.getAllExclusion();\r\n    this.getAllPointVentes();\r\n    this.getAllRisque();\r\n    this.getAllCategorie();\r\n    this.rechercheDecesProduit();\r\n  }\r\n  async getAllRisque() {\r\n    let response = await getRisque();\r\n\r\n    this.setState({\r\n      risques: response.data.content\r\n    });\r\n  }\r\n  async getAllCategorie() {\r\n    let response = await getCategorie();\r\n\r\n    this.setState({\r\n      categories: response.data.content\r\n    });\r\n  }\r\n  async getAllPeriodicite() {\r\n    let response = await getPeriodicite();\r\n\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n  async getAllExclusion() {\r\n    let response = await getExclusion();\r\n\r\n    this.setState({\r\n      exclusion: response.data.content\r\n    });\r\n  }\r\n  async getAllPointVentes() {\r\n    let response = await getAllPointVente();\r\n    this.setState({\r\n      pointVente: response.data.content\r\n    });\r\n  }\r\n  rechercheDecesProduit = () => {\r\n    getDecesProduit()\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.content.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Votre login ou mot de passe est incorrect. Veuillez réessayer!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message ||\r\n              \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  handleClick = value => {\r\n    this.setState({ visible: true, isEdit: true, record: value });\r\n  };\r\n  handleClicked = value => {\r\n    this.setState({ isEdited: true, keyRecord: value.id });\r\n    exclus = [];\r\n    periodicts = [];\r\n    points = [];\r\n\r\n    value.exclusions.map(element => {\r\n      return exclus.push(element.id);\r\n    });\r\n    value.periodicites.map(element => {\r\n      return periodicts.push(element.id);\r\n    });\r\n    value.pointVentes.map(element => {\r\n      return points.push(element.id);\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      risqueId: value.risque.id,\r\n      categorieId: value.categorie.id,\r\n      code: value.code,\r\n      libelle: value.libelle,\r\n      differeMin: value.differeMin,\r\n      differeMax: value.differeMax,\r\n      ageMin: value.ageMin,\r\n      ageMax: value.ageMax,\r\n      montantAccessoire: value.montantAccessoire,\r\n      taxe: value.taxe,\r\n      fraisGestion: value.fraisGestion,\r\n      fraisAcquisition: value.fraisAcquisition,\r\n      codeExoneration: value.codeExoneration\r\n    });\r\n  };\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex\r\n    });\r\n  };\r\n  handleReset = clearFilters => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  onClose = () => {\r\n    this.setState({\r\n      isEdited: false\r\n    });\r\n  };\r\n  async updateproduct(id, body) {\r\n    try {\r\n      let response = await updateDecesProduct(id, body);\r\n      if (response.status === 200) {\r\n        this.onClose();\r\n        notification.success({\r\n          message: \"la modification est bien faite\"\r\n        });\r\n        window.location.reload();\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message ||\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        let exclu = [];\r\n        values.exclusions.forEach(element => {\r\n          exclu.push({ id: element });\r\n        });\r\n        values.exclusions = [...exclu];\r\n\r\n        let period = [];\r\n        values.periodicites.forEach(element => {\r\n          period.push({ id: element });\r\n        });\r\n        values.periodicites = [...period];\r\n\r\n        let pointV = [];\r\n        values.pointVentes.forEach(element => {\r\n          pointV.push({ id: element });\r\n        });\r\n        values.pointVentes = [...pointV];\r\n\r\n        this.updateproduct(this.state.keyRecord, values);\r\n      }\r\n    });\r\n  };\r\n\r\n  handleConfirmBlur = e => {\r\n    const { value } = e.target;\r\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Provider\r\n          value={{\r\n            state: this.state.record\r\n          }}\r\n        >\r\n          {this.state.isEdit ? (\r\n            <Details />\r\n          ) : (\r\n            <div>\r\n              <ComponentTitle title=\"Paramétrage produit\" />\r\n              <Button type=\"primary\" className=\"add-button nouveau-btn\">\r\n                <Link to=\"/produitDeces\">\r\n                  <Icon type=\"plus\" /> Nouveau produit\r\n                </Link>\r\n              </Button>\r\n              <Table\r\n                bordered\r\n                rowClassName=\"editable-row\"\r\n                columns={this.columns}\r\n                dataSource={this.state.data}\r\n                pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n              />\r\n            </div>\r\n          )}\r\n        </MyContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(ConsultProduitDeces);\r\n","import \"antd/dist/antd.css\";\r\nimport { Button, DatePicker, Form, Input, notification, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { LABORATOIRE } from \"../../../../../constants/index\";\r\nimport {\r\n  ajouterAcceptationExamens,\r\n  ajouterAcceptationTestMedical\r\n} from \"../../AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass LaboForm extends Component {\r\n  state = { honoraires: [] };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterExamens(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let array = [];\r\n    const { produit } = this.props.record.contrat;\r\n    produit.normes.forEach(norme => {\r\n      norme.honoraires.forEach(honoraire => {\r\n        if (honoraire.typeAuxiliaireHon.libelle === LABORATOIRE) {\r\n          array.push({ label: honoraire.libelle, value: honoraire.id });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ honoraires: [...array] });\r\n  }\r\n\r\n  async ajouterExamens(values) {\r\n    try {\r\n      values.dateAnalyse = values.dateAnalyse.format(\"YYYY-MM-DD\");\r\n      values.dateReception = values.dateReception.format(\"YYYY-MM-DD\");\r\n      values.laboratoire = { id: values.laboratoire };\r\n      values.acceptation = this.props.record;\r\n      let response = await ajouterAcceptationExamens(values);\r\n\r\n      let testsArray = [{ id: values.tests }];\r\n\r\n      let tests = {\r\n        acceptationExamens: { id: response.data.id },\r\n        acceptation: { id: this.props.record.id },\r\n        honoraires: testsArray\r\n      };\r\n      let responseTest = await ajouterAcceptationTestMedical(tests);\r\n\r\n      if (response.status === 200 && responseTest.status === 200) {\r\n        this.props.parentCallback(responseTest.data);\r\n\r\n        notification.success({\r\n          message: \"bien ajouté\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description: \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Form hideRequiredMark {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Laboratoire\" hasFeedback>\r\n          {getFieldDecorator(\"laboratoire\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"sélectionnez un laboratoire\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"sélectionnez\">\r\n              {this.props.laboratoires.map(element => {\r\n                return (\r\n                  <Option value={element.id} label={element.nom}>\r\n                    {element.nom}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Date Analyse\" hasFeedback>\r\n          {getFieldDecorator(\"dateAnalyse\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date d'analyse\"\r\n              }\r\n            ]\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Date réception\" hasFeedback>\r\n          {getFieldDecorator(\"dateReception\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date de réception\"\r\n              }\r\n            ]\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Test Médical\" hasFeedback>\r\n          {getFieldDecorator(\"tests\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                message: \"sélectionnez un Test Médical\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"sélectionnez\">\r\n              {this.state.honoraires.map(element => {\r\n                return (\r\n                  <Option value={element.value} label={element.label}>\r\n                    {element.label}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Observations\" hasFeedback>\r\n          {getFieldDecorator(\"observations\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Ajouter\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ExamensComlementaireAjouter = Form.create()(LaboForm);\r\n\r\nexport default ExamensComlementaireAjouter;\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Table,\r\n  Input,\r\n  Select,\r\n  Popconfirm,\r\n  Form,\r\n  Tag,\r\n  DatePicker,\r\n  notification,\r\n  Icon,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { LABORATOIRE } from \"../../../../../constants/index\";\r\nimport { getAcceptationExamnsByAcceptation,\r\n        getAcceptationTestMedicalByAcceptationExamensComplementaire,\r\n        updateAcceptationTestMedical, } from \"../../AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"laboratoire\") {\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"sélectionnez\"\r\n          labelInValue\r\n        >\r\n          {this.props.laboratoires.map((element) => {\r\n            return (\r\n              <Option value={element.id} label={element.nom}>\r\n                {element.nom}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (\r\n      this.props.inputType === \"date analyse\" ||\r\n      this.props.inputType === \"date réception\"\r\n    ) {\r\n      return <DatePicker className=\"date-style\"></DatePicker>;\r\n    } else if (this.props.inputType === \"Test Medical\") {\r\n      let array = [];\r\n      this.props.produit.normes.forEach((norme) => {\r\n        norme.honoraires.forEach((honoraire) => {\r\n          if (honoraire.typeAuxiliaireHon.libelle === LABORATOIRE) {\r\n            array.push({ value: honoraire.id, label: honoraire.libelle });\r\n          }\r\n        });\r\n      });\r\n      return (\r\n        <Select style={{ width: \"100%\" }} labelInValue>\r\n          {array.map((element) => {\r\n            return (\r\n              <Option key={element.id} value={element.value} label={element.label}>\r\n                {element.label}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    }\r\n    return <TextArea rows={2} />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      testsMedical,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    if (editing && title === \"Test Medical\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"honoraires\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: testsMedical,\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"observations\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observations\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex][title],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"laboratoire\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"laboratoire\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: {\r\n                key: record[dataIndex].laboratoire.id,\r\n                label: record[dataIndex].laboratoire.nom,\r\n              },\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"date réception\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateReception\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: moment(record[dataIndex].dateReception),\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"date analyse\") {\r\n      moment(record[dataIndex].dateAnalyse);\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateAnalyse\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: moment(record[dataIndex].dateAnalyse),\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else return <td {...restProps}>{children}</td>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\", testsMedical: [] };\r\n    this.columns = [\r\n      {\r\n        title: \"laboratoire\",\r\n        dataIndex: \"acceptationExamens\",\r\n        editable: true,\r\n\r\n        render: (acceptationExamensComplementaire) => (\r\n          <span>{acceptationExamensComplementaire.laboratoire.nom}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"date analyse\",\r\n        dataIndex: \"acceptationExamens\",\r\n        editable: true,\r\n\r\n        render: (acceptationExamensComplementaire) => (\r\n          <span>\r\n            {moment(acceptationExamensComplementaire.dateAnalyse).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"date réception\",\r\n        dataIndex: \"acceptationExamens\",\r\n        editable: true,\r\n\r\n        render: (acceptationExamensComplementaire) => (\r\n          <span>\r\n            {moment(acceptationExamensComplementaire.dateReception).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"observations\",\r\n        dataIndex: \"acceptationExamens\",\r\n        editable: true,\r\n\r\n        render: (acceptationExamensComplementaire) => (\r\n          <span>{acceptationExamensComplementaire.observations}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Test Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n\r\n        render: (honoraires) => (\r\n          <span>\r\n            {honoraires.map((tag) => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {(form) => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"êtes-vous certain de vouloir annuler?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Annuler</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a\r\n              href=\"#top\"\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => this.edit(record.key)}\r\n            >\r\n            <Icon type=\"edit\" style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }} />\r\n            </a>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  isEditing = (record) => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        let honoraire = [\r\n          { id: row.honoraires.key, libelle: row.honoraires.label },\r\n        ];\r\n\r\n        delete row.honoraires;\r\n        row.dateAnalyse = row.dateAnalyse.format(\"YYYY-MM-DD\");\r\n        row.dateReception = row.dateReception.format(\"YYYY-MM-DD\");\r\n        row.laboratoire = {\r\n          id: row.laboratoire.key,\r\n          nom: row.laboratoire.label,\r\n        };\r\n        let myRow = {\r\n          acceptationExamens: { ...item.acceptationExamens, ...row },\r\n          honoraires: honoraire,\r\n        };\r\n\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...myRow,\r\n        });\r\n\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n\r\n\r\n        this.updateTestMedical(item.id, { ...item, ...myRow });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  updateTestMedical = (id, Data) => {\r\n    updateAcceptationTestMedical(id, Data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"acceptation Examens Complementaire bien modifier !\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data.message === \"wrong data\") {\r\n          notification.error({\r\n            message: \"acception Examens Complementaire ne ce trouve pas\",\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Désolé! Quelque chose a mal tourné. Veuillez réessayer!\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n    const newData = [...this.state.data];\r\n    const index = newData.findIndex((item) => key === item.key);\r\n    if (index > -1) {\r\n      const item = newData[index];\r\n      let tests = [];\r\n      item.honoraires.forEach((element) => {\r\n        tests.push({\r\n          key: element.id,\r\n          value: element.id,\r\n          label: element.libelle,\r\n        });\r\n      });\r\n\r\n      this.setState({ testsMedical: [...tests] });\r\n    }\r\n  }\r\n\r\n  async acceptationExamensComplementaire(id) {\r\n    let Response = await getAcceptationExamnsByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let responseAcc = await getAcceptationTestMedicalByAcceptationExamensComplementaire(\r\n        id,\r\n        element.id\r\n      );\r\n      \r\n      let key = { key: responseAcc.data.id };\r\n      let elementone = { ...responseAcc.data, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n    this.setState({\r\n      data: [...newDataList],\r\n    });\r\n  }\r\n // TODO : modification not working + not getting medical tests\r\n  componentDidMount() {\r\n    this.acceptationExamensComplementaire(this.props.record.id);\r\n  }\r\n  componentDidUpdate(prevProps, _){\r\n    if(this.props.dataTable !== prevProps.dataTable){\r\n\r\n      let list  = [...this.state.data]\r\n\r\n      list.push(this.props.dataTable)   \r\n      this.setState({data : [...list] })\r\n\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      } \r\n      else\r\n        return {\r\n          ...col,\r\n          onCell: (record) => ({\r\n            record,\r\n            inputType: col.title,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            editing: this.isEditing(record),\r\n            laboratoires: this.props.laboratoires,\r\n            produit: this.props.record.contrat.produit,\r\n            testsMedical: this.state.testsMedical,\r\n          }),\r\n        };\r\n    });\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            hideOnSinglePage: true,\r\n            defaultPageSize: 50,\r\n          }}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ExamensComlementaireTable = Form.create()(EditableTable);\r\n\r\nexport default ExamensComlementaireTable;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport ExamensComlementaireAjouter from \"./ExamensComlementaireAjouter\";\r\nimport ExamensComlementaireTable from \"./ExamensComlementaireTable\";\r\nimport { LABORATOIRE } from \"../../../../../constants/index\";\r\nimport { getAuxiliairesByType } from \"../../../../Parametrage/Auxiliaires/AuxiliaireAPI\";\r\n\r\nclass ExamensComlementaire extends Component {\r\n  state = {\r\n    laboratoires: [],\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.AuxiliairesByType(LABORATOIRE);\r\n  }\r\n\r\n  handleCallback = childData => {\r\n    this.setState({ data: childData });\r\n  };\r\n\r\n  async AuxiliairesByType(type) {\r\n    let respense = await getAuxiliairesByType(type);\r\n    this.setState({ laboratoires: respense.data });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ExamensComlementaireAjouter\r\n          parentCallback={this.handleCallback}\r\n          laboratoires={this.state.laboratoires}\r\n          record={this.props.record}\r\n        ></ExamensComlementaireAjouter>\r\n        <ExamensComlementaireTable\r\n          dataTable={this.state.data}\r\n          laboratoires={this.state.laboratoires}\r\n          record={this.props.record}\r\n        ></ExamensComlementaireTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExamensComlementaire;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Button,\r\n  DatePicker,\r\n  Checkbox,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  notification\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { MEDECIN_EXAMINATEUR } from \"../../../../../constants/index\";\r\nimport {\r\n  ajouterAcceptationTestMedical,\r\n  ajouterAcceptationExaminateur,\r\n  ajouterAcceptationEtape,\r\n  lettreAcceptation\r\n} from \"../../AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass LaboForm extends Component {\r\n  state = { honoraires: [], listOnglets: [] };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterLaboratoire(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let array = [];\r\n    const { produit } = this.props.record.contrat;\r\n    produit.normes.forEach(norme => {\r\n      norme.honoraires.forEach(honoraire => {\r\n        if (honoraire.typeAuxiliaireHon.libelle === MEDECIN_EXAMINATEUR) {\r\n          array.push({ label: honoraire.libelle, value: honoraire.id });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ honoraires: [...array] });\r\n  }\r\n  async jasperLettreAcceptation(requestLettre) {\r\n    let response = await lettreAcceptation(requestLettre);\r\n\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  async ajouterLaboratoire(values) {\r\n    try {\r\n      let verdict = values.verdict.label;\r\n      values.dateVisite = values.dateVisite.format(\"YYYY-MM-DD\");\r\n      values.dateReception = values.dateReception.format(\"YYYY-MM-DD\");\r\n      values.medecin = { id: values.medecin };\r\n      values.verdict = { id: values.verdict.key, status: values.verdict.label };\r\n      values.acceptation = this.props.record;\r\n      let response = await ajouterAcceptationExaminateur(values);\r\n\r\n      if (verdict === \"Acceptation au tarif normal\") {\r\n        const key = `open${Date.now()}`;\r\n        const btn = (\r\n          <Button\r\n            type=\"primary\"\r\n            size=\"small\"\r\n            onClick={() => notification.close(key)}\r\n          >\r\n            Confirmer\r\n          </Button>\r\n        );\r\n        notification.success({\r\n          message: \"CONTRAT ACCEPTER\",\r\n          description:\r\n            \" CONTRAT NUMERO     : \" +\r\n            response.data.acceptation.contrat.numeroContrat,\r\n          btn,\r\n          duration: 0,\r\n          key\r\n        });\r\n        let requestAcceptation = {\r\n          intermediaire: this.props.record.contrat.produit.partenaire\r\n            .raisonSocial,\r\n          nom:\r\n            this.props.record.contrat.assure.nom +\r\n            \" \" +\r\n            this.props.record.contrat.assure.prenom,\r\n          agence: this.props.record.contrat.pointVente.libelle,\r\n          numeroAcceptation: this.props.record.code,\r\n          montantMourabaha: this.props.record.contrat.capitalAssure,\r\n          encours: this.props.record.encours,\r\n          cumul: this.props.record.cumul,\r\n          duree: this.props.record.contrat.dureeContrat,\r\n          differe: this.props.record.contrat.differe,\r\n          montantCotisation: this.props.record.contrat.montantCotisation\r\n        };\r\n        console.log(\"request :\", requestAcceptation);\r\n        this.jasperLettreAcceptation(requestAcceptation);\r\n      }\r\n      let testsArray = [];\r\n      values.tests.forEach(element => {\r\n        let object = { id: element };\r\n        testsArray.push(object);\r\n      });\r\n      let tests = {\r\n        acceptationExaminateur: { id: response.data.id },\r\n        acceptation: { id: this.props.record.id },\r\n        honoraires: testsArray\r\n      };\r\n      let responseTest = await ajouterAcceptationTestMedical(tests);\r\n      let responseEtape = await ajouterAcceptationEtape({\r\n        acceptationTestMedical: { id: responseTest.data.id },\r\n        etape: \"examinateur\",\r\n        dateVerdict: moment().format(\"YYYY-MM-DD\"),\r\n        verdict: values.verdict\r\n      });\r\n      if (\r\n        response.status === 200 &&\r\n        responseTest.status === 200 &&\r\n        responseEtape.status === 200\r\n      ) {\r\n        this.props.parentCallback(responseTest.data);\r\n        notification.success({\r\n          message: \"bien ajouté\"\r\n        });\r\n\r\n        let list = [...this.state.listOnglets];\r\n\r\n        if (verdict === \"Expertise médecin conseil\") {\r\n          list.push({\r\n            key: \"medecinConseil\",\r\n            tab: \"Médecin Conseil\"\r\n          });\r\n\r\n          this.setState({ listOnglets: [...list] });\r\n          this.props.onglet(list);\r\n        }\r\n        if (verdict === \"Réassurance\") {\r\n          list.push({\r\n            key: \"reassurance\",\r\n            tab: \"Réassurance\"\r\n          });\r\n          this.setState({ listOnglets: [...list] });\r\n          this.props.onglet(list);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description: \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Form hideRequiredMark {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Medecin\" hasFeedback>\r\n          {getFieldDecorator(\"medecin\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"sélectionnez un medecin\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"sélectionnez\">\r\n              {this.props.medecins.map(element => {\r\n                return (\r\n                  <Option\r\n                    key={element.id}\r\n                    value={element.id}\r\n                    label={element.nom}\r\n                  >\r\n                    {element.nom}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Date Visite\" hasFeedback>\r\n          {getFieldDecorator(\"dateVisite\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date de visite\"\r\n              }\r\n            ]\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Date réception\" hasFeedback>\r\n          {getFieldDecorator(\"dateReception\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date de réception\"\r\n              }\r\n            ]\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Tests Médicaux\">\r\n          {getFieldDecorator(\"tests\", {\r\n            valuePropName: \"checked\"\r\n          })(\r\n            <Checkbox.Group style={{ width: \"100%\" }}>\r\n              <Row>\r\n                {this.state.honoraires.map(element => {\r\n                  return (\r\n                    <Col span={8}>\r\n                      <Checkbox value={element.value} label={element.label}>\r\n                        {element.label}\r\n                      </Checkbox>\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n            </Checkbox.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Observations\" hasFeedback>\r\n          {getFieldDecorator(\"observation\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Verdict\" hasFeedback>\r\n          {getFieldDecorator(\"verdict\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"sélectionnez un verdict\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select labelInValue placeholder=\"sélectionnez\">\r\n              {this.props.verdicts.map(element => {\r\n                return (\r\n                  <Option\r\n                    key={element.id}\r\n                    value={element.id}\r\n                    label={element.status}\r\n                  >\r\n                    {element.status}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"Motif\" hasFeedback>\r\n          {getFieldDecorator(\"motif\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Tapez un motif\",\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item> */}\r\n        <Form.Item label=\"Observation verdict\" hasFeedback>\r\n          {getFieldDecorator(\"observationsVerdict\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Ajouter\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ExaminateurAjouter = Form.create()(LaboForm);\r\n\r\nexport default ExaminateurAjouter;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  Table,\r\n  Tag,\r\n  Icon\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { MEDECIN_EXAMINATEUR } from \"../../../../../constants/index\";\r\nimport {\r\n  getAcceptationExaminateurByAcceptation,\r\n  getAcceptationTestByAcceptationsExaminateur,\r\n  updateAcceptationTestMedical\r\n} from \"../../AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"Medecin\") {\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"sélectionnez\"\r\n          labelInValue\r\n        >\r\n          {this.props.medecins.map(element => {\r\n            return (\r\n              <Option key={element.id} value={element.id} label={element.nom}>\r\n                {element.nom}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (this.props.inputType === \"Verdict\") {\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"sélectionnez\"\r\n          labelInValue\r\n        >\r\n          {this.props.verdicts.map(element => {\r\n            return (\r\n              <Option\r\n                key={element.id}\r\n                value={element.id}\r\n                label={element.status}\r\n              >\r\n                {element.status}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (\r\n      this.props.inputType === \"Date visite\" ||\r\n      this.props.inputType === \"Date réception\"\r\n    ) {\r\n      return <DatePicker className=\"date-style\"></DatePicker>;\r\n    } else if (this.props.inputType === \"Tests Medical\") {\r\n      let array = [];\r\n      this.props.produit.normes.forEach(norme => {\r\n        norme.honoraires.forEach(honoraire => {\r\n          if (honoraire.typeAuxiliaireHon.libelle === MEDECIN_EXAMINATEUR) {\r\n            array.push({ value: honoraire.id, label: honoraire.libelle });\r\n          }\r\n        });\r\n      });\r\n      return (\r\n        <Select mode=\"multiple\" style={{ width: \"100%\" }} labelInValue>\r\n          {array.map(element => {\r\n            return (\r\n              <Option\r\n                key={element.id}\r\n                value={element.value}\r\n                label={element.label}\r\n              >\r\n                {element.label}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (\r\n      this.props.inputType === \"Observations\" ||\r\n      this.props.inputType === \"Observation verdict\"\r\n    ) {\r\n      return <TextArea rows={2} />;\r\n    }\r\n    return <Input></Input>;\r\n  };\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      testsMedical,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    if (editing && title === \"Tests Medical\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"honoraires\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: testsMedical\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Observations\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observation\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex].observation\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Motif\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"motif\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex].motif\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Observation verdict\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observationsVerdict\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex].observationsVerdict\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Medecin\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"medecin\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: {\r\n                key: record[dataIndex].medecin.id,\r\n                label: record[dataIndex].medecin.nom\r\n              }\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Verdict\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"verdict\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: {\r\n                key: record[dataIndex].verdict.id,\r\n                label: record[dataIndex].verdict.status\r\n              }\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Date réception\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateReception\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: moment(record[dataIndex].dateReception)\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Date visite\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateVisite\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: moment(record[dataIndex].dateVisite)\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else return <td {...restProps}>{children}</td>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nclass EditableTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editingKey: \"\",\r\n      testsMedical: [],\r\n      listOnglets: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Medecin\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.medecin.nom}</span>\r\n      },\r\n      {\r\n        title: \"Date visite\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n\r\n        render: acceptationsLabo => <span>{acceptationsLabo.dateVisite}</span>\r\n      },\r\n      {\r\n        title: \"Date réception\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.dateReception}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Observations\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.observation}</span>\r\n      },\r\n      {\r\n        title: \"Verdict\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.verdict.status}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Observation verdict\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.observationsVerdict}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Tests Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n        render: honoraires => (\r\n          <span>\r\n            {honoraires.map(tag => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"êtes-vous certain de vouloir annuler??\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a>Annuler</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => this.edit(record.key)}\r\n            >\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n              />\r\n            </a>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  isEditing = record => record.key === this.state.editingKey;\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        let honoraire = [];\r\n        row.honoraires.forEach(element => {\r\n          honoraire.push({ id: element.key, libelle: element.label });\r\n        });\r\n        delete row.honoraires;\r\n\r\n        row.medecin = { id: row.medecin.key, nom: row.medecin.label };\r\n        row.verdict = { id: row.verdict.key, status: row.verdict.label };\r\n        let myRow = {\r\n          acceptationExaminateur: { ...item.acceptationExaminateur, ...row },\r\n          honoraires: honoraire\r\n        };\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...myRow\r\n        });\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n        this.updateTestMedical(item.id, { ...item, ...myRow });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  updateTestMedical = (id, Data) => {\r\n    updateAcceptationTestMedical(id, Data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"acceptation Examinateur bien modifier !\"\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        if (error.response.data.message === \"wrong data\") {\r\n          notification.error({\r\n            message: \"acception Examinateur ne ce trouve pas\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Désolé! Quelque chose a mal tourné. Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n    const newData = [...this.state.data];\r\n    const index = newData.findIndex(item => key === item.key);\r\n    if (index > -1) {\r\n      const item = newData[index];\r\n      let tests = [];\r\n      item.honoraires.forEach(element => {\r\n        tests.push({\r\n          key: element.id,\r\n          value: element.id,\r\n          label: element.libelle\r\n        });\r\n      });\r\n      this.setState({ testsMedical: [...tests] });\r\n    }\r\n  }\r\n  async acceptationsExaminateur(id) {\r\n    let Response = await getAcceptationExaminateurByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let responseAcc = await getAcceptationTestByAcceptationsExaminateur(\r\n        id,\r\n        element.id\r\n      );\r\n      let list = [...this.state.listOnglets];\r\n      if (\r\n        responseAcc.data.acceptationExaminateur.verdict.status ===\r\n        \"Expertise médecin conseil\"\r\n      ) {\r\n        list.push({\r\n          key: \"medecinConseil\",\r\n          tab: \"Médecin Conseil\"\r\n        });\r\n        this.setState({ listOnglets: [...list] });\r\n        this.props.onglet(list);\r\n      }\r\n      if (\r\n        responseAcc.data.acceptationExaminateur.verdict.status === \"Réassurance\"\r\n      ) {\r\n        list.push({\r\n          key: \"reassurance\",\r\n          tab: \"Réassurance\"\r\n        });\r\n        this.setState({ listOnglets: [...list] });\r\n        this.props.onglet(list);\r\n      }\r\n      let key = { key: responseAcc.data.id };\r\n      let elementone = { ...responseAcc.data, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n    this.setState({\r\n      data: [...newDataList]\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsExaminateur(this.props.record.id);\r\n  }\r\n  componentDidUpdate(prevProps, _) {\r\n    if (this.props.dataTable !== prevProps.dataTable) {\r\n      let list = [...this.state.data];\r\n      list.push(this.props.dataTable);\r\n      this.setState({ data: [...list] });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      } else\r\n        return {\r\n          ...col,\r\n          onCell: record => ({\r\n            record,\r\n            inputType: col.title,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            editing: this.isEditing(record),\r\n            medecins: this.props.medecins,\r\n            produit: this.props.record.contrat.produit,\r\n            testsMedical: this.state.testsMedical,\r\n            verdicts: this.props.verdicts\r\n          })\r\n        };\r\n    });\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            hideOnSinglePage: true,\r\n            defaultPageSize: 50\r\n          }}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst ExaminateurTable = Form.create()(EditableTable);\r\nexport default ExaminateurTable;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport ExaminateurAjouter from \"./ExaminateurAjouter\";\r\nimport ExaminateurTable from \"./ExaminateurTable\";\r\nimport {\r\n  MEDECIN_EXAMINATEUR,\r\n  VERDICT_EXAMINATEUR\r\n} from \"../../../../../constants/index\";\r\nimport { getAuxiliairesByType } from \"../../../../Parametrage/Auxiliaires/AuxiliaireAPI\";\r\nimport { getVerdictByType } from \"../../AcceptationsAPI\";\r\n\r\nclass Examinateur extends Component {\r\n  state = {\r\n    medecins: [],\r\n    verdicts: [],\r\n    tabListNoTitle: [],\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.AuxiliairesByType(MEDECIN_EXAMINATEUR);\r\n    this.VerdictByType(VERDICT_EXAMINATEUR);\r\n  }\r\n\r\n  handleCallback = childData => {\r\n    this.setState({ data: childData });\r\n  };\r\n\r\n  async AuxiliairesByType(type) {\r\n    let respense = await getAuxiliairesByType(type);\r\n    this.setState({ medecins: respense.data });\r\n  }\r\n  async VerdictByType(type) {\r\n    let respense = await getVerdictByType(type);\r\n    this.setState({ verdicts: respense.data });\r\n  }\r\n\r\n  acctivatedOnglet = list => {\r\n    let helpList = [...this.state.tabListNoTitle];\r\n    let filtredList = [...list];\r\n    let MedecinHelp = false;\r\n    let reassuranceHelp = false;\r\n    helpList.forEach(element => {\r\n      if (element.key === \"medecinConseil\") {\r\n        MedecinHelp = true;\r\n      }\r\n      if (element.key === \"reassurance\") reassuranceHelp = true;\r\n    });\r\n\r\n    if (MedecinHelp) {\r\n      filtredList = list.filter(item => item.key !== \"medecinConseil\");\r\n    }\r\n    if (reassuranceHelp) {\r\n      filtredList = list.filter(item => item.key !== \"reassurance\");\r\n    }\r\n    if (reassuranceHelp && MedecinHelp) {\r\n      filtredList = list.filter(\r\n        item => item.key !== \"reassurance\" && item.key !== \"medecinConseil\"\r\n      );\r\n    }\r\n    this.setState({ tabListNoTitle: [...helpList, ...filtredList] });\r\n    this.props.onglet(this.state.tabListNoTitle);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ExaminateurAjouter\r\n          parentCallback={this.handleCallback}\r\n          onglet={this.acctivatedOnglet}\r\n          verdicts={this.state.verdicts}\r\n          medecins={this.state.medecins}\r\n          record={this.props.record}\r\n        ></ExaminateurAjouter>\r\n        <ExaminateurTable\r\n          dataTable={this.state.data}\r\n          onglet={this.acctivatedOnglet}\r\n          verdicts={this.state.verdicts}\r\n          medecins={this.state.medecins}\r\n          record={this.props.record}\r\n        ></ExaminateurTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Examinateur;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport { Descriptions, Button, Icon } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  lettreOrientation,\r\n  getNormeByCapitalAndAge\r\n} from \"../../Souscription/SouscriptionAPI\";\r\nimport { STATUS_WAITING_ACCEPTATION } from \"../../../../constants/index\";\r\n\r\nclass General extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      normes: {}\r\n    };\r\n  }\r\n  async jasperLettre(requestLettre) {\r\n    let response = await lettreOrientation(requestLettre);\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  async normeCapitalAge(age, capital, produit) {\r\n    let responseNorme = await getNormeByCapitalAndAge(age, capital, produit);\r\n    this.setState({\r\n      normes: responseNorme.data\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    const agee = moment().diff(\r\n      moment(\r\n        this.props.record.contrat.souscripteur.dateNaissance,\r\n        \"DD-MM-YYYY\"\r\n      ).format(),\r\n      \"years\"\r\n    );\r\n    this.normeCapitalAge(\r\n      agee,\r\n      this.props.record.contrat.capitalAssure,\r\n      this.props.record.contrat.produit.id\r\n    );\r\n  }\r\n  edit = () => {\r\n    let examens = [];\r\n    for (let honoraire of this.state.normes.honoraires) {\r\n      examens.push(honoraire.libelle);\r\n    }\r\n\r\n    const listNorme = examens.toString();\r\n    console.log(\"listNorme:\", this.state.normes);\r\n    let requestLettreOrientation = {\r\n      ville: this.props.record.contrat.souscripteur.adressVille,\r\n      nomPrenom:\r\n        this.props.record.contrat.souscripteur.nom +\r\n        \" \" +\r\n        this.props.record.contrat.souscripteur.prenom,\r\n      cin: this.props.record.contrat.souscripteur.cin,\r\n      montantFinancement: this.props.record.contrat.capitalAssure,\r\n      montantEncours: this.props.record.encours,\r\n      montantCumul: this.props.record.cumul,\r\n      differe: this.props.record.contrat.differe,\r\n      duree: this.props.record.contrat.dureeContrat,\r\n      taux: this.props.record.contrat.tauxInteret,\r\n      intermediaire: this.props.record.contrat.produit.partenaire.raisonSocial,\r\n      agence: this.props.record.contrat.pointVente.libelle,\r\n      norme: listNorme,\r\n      dateNaissance: this.props.record.contrat.souscripteur.dateNaissance,\r\n      pointVenteVille: this.props.record.contrat.pointVente.adressVille,\r\n      examinateurId: this.props.record.contrat.orientation\r\n    };\r\n\r\n    this.jasperLettre(requestLettreOrientation);\r\n  };\r\n  render() {\r\n    const { record } = this.props;\r\n    const age = moment().diff(\r\n      moment(record.contrat.assure.dateNaissance, \"DD-MM-YYYY\").format(),\r\n      \"years\"\r\n    );\r\n\r\n    return (\r\n      <div>\r\n        <Descriptions size=\"middle\" title=\"Produit\" bordered>\r\n          <Descriptions.Item label=\"Partenaire\">\r\n            {record.contrat.produit.partenaire.libelle}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Produit\">\r\n            {record.contrat.produit.libelle}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Agence\">\r\n            {record.contrat.pointVente.libelle}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Intermédiaire\">\r\n            {record.contrat.produit.partenaire.raisonSocial}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <br></br>\r\n        <Descriptions size=\"middle\" title=\"Information contribuant\" bordered>\r\n          <Descriptions.Item label=\"Date de naissance\">\r\n            {record.contrat.assure.dateNaissance}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Nom assuré\">\r\n            {record.contrat.assure.nom}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Prenom assuré\">\r\n            {record.contrat.assure.prenom}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"CIN\">\r\n            {record.contrat.assure.cin}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Date de creation\" span={2}>\r\n            {record.contrat.assure.creationDate}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"N Compte Bancaire\" span={3}>\r\n            {record.contrat.assure.rib}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Age\">{age}</Descriptions.Item>\r\n          <Descriptions.Item label=\"Observation\">\r\n            {record.contrat.observation}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <br></br>\r\n        <Descriptions size=\"middle\" title=\"Détail\" bordered>\r\n          <Descriptions.Item label=\"Montant Financement(DH)\">\r\n            {record.contrat.capitalAssure}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"L'encours(DH)\">\r\n            {record.encours}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Cumul(DH)\">\r\n            {record.cumul}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Durée(mois)\">\r\n            {record.contrat.dureeContrat}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Différé(mois)\" span={2}>\r\n            {record.contrat.differe}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"N° dossier de financement\" span={3}>\r\n            {record.numeroDeDossier}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Code Acceptation\">\r\n            {record.code}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <br></br>\r\n        <Descriptions size=\"middle\" title=\"Prime\" bordered>\r\n          <Descriptions.Item label=\"périodicité\">\r\n            {record.contrat.periodicite.libelle}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Cotisation au tarif normal\">\r\n            {record.contrat.montantCotisation}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Surprime\">\r\n            {record.contrat.tauxSurprime}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Cotisation avec surprime\">\r\n            {record.contrat.montantSurprime}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <br></br>\r\n        {record.contrat.status === STATUS_WAITING_ACCEPTATION && (\r\n          <Descriptions size=\"middle\" title=\"Fichiers\">\r\n            <Descriptions.Item label=\"Lettre d'orientation \">\r\n              <Button onClick={() => this.edit()}>\r\n                <Icon type=\"upload\" />\r\n                Télécharger\r\n              </Button>\r\n            </Descriptions.Item>\r\n          </Descriptions>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default General;\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {ajouterAcceptationTestMedical,ajouterAcceptationLaboratoire } from \"../../AcceptationsAPI\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Button,\r\n  DatePicker,\r\n  Checkbox,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  notification,\r\n} from \"antd\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass LaboForm extends Component {\r\n  state = { honoraires: [] };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterLaboratoire(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let array = [];\r\n    const { produit } = this.props.record.contrat;\r\n    produit.normes.forEach((norme) => {\r\n      norme.honoraires.forEach((honoraire) => {\r\n        if (honoraire.typeAuxiliaireHon.libelle === \"LABORATOIRE\") {\r\n          array.push({ label: honoraire.libelle, value: honoraire.id });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ honoraires: [...array] });\r\n  }\r\n\r\n  async ajouterLaboratoire(values) {\r\n    try {\r\n      values.dateAnalyse = values.dateAnalyse.format(\"YYYY-MM-DD\");\r\n      values.dateReception = values.dateReception.format(\"YYYY-MM-DD\");\r\n      values.laboratoire = { id: values.laboratoire };\r\n      values.acceptation = this.props.record;\r\n      let response = await ajouterAcceptationLaboratoire(values);\r\n\r\n      let testsArray = [];\r\n      values.tests.forEach((element) => {\r\n        let object = { id: element };\r\n        testsArray.push(object);\r\n      });\r\n      let tests = {\r\n        acceptationLaboratoire: { id: response.data.id },\r\n        acceptation: { id: this.props.record.id },\r\n        honoraires: testsArray,\r\n      };\r\n      let responseTest = await ajouterAcceptationTestMedical(tests);\r\n\r\n      if (response.status === 200 && responseTest.status === 200) {\r\n        this.props.parentCallback(responseTest.data);\r\n\r\n        notification.success({\r\n          message: \"bien ajouté\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Form hideRequiredMark {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Laboratoire\" hasFeedback>\r\n          {getFieldDecorator(\"laboratoire\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"sélectionnez un laboratoire\",\r\n              },\r\n            ],\r\n          })(\r\n            <Select placeholder=\"sélectionnez\">\r\n              {this.props.laboratoires.map((element) => {\r\n                return (\r\n                  <Option value={element.id} label={element.raisonSociale}>\r\n                    {element.raisonSociale}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Date Analyse\" hasFeedback>\r\n          {getFieldDecorator(\"dateAnalyse\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date d'analyse\",\r\n              },\r\n            ],\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Date réception\" hasFeedback>\r\n          {getFieldDecorator(\"dateReception\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date de réception\",\r\n              },\r\n            ],\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Tests Médicaux\">\r\n          {getFieldDecorator(\"tests\", {\r\n            valuePropName: \"checked\",\r\n          })(\r\n            <Checkbox.Group style={{ width: \"100%\" }}>\r\n              <Row>\r\n                {this.state.honoraires.map((element) => {\r\n                  return (\r\n                    <Col span={8}>\r\n                      <Checkbox value={element.value} label={element.label}>\r\n                        {element.label}\r\n                      </Checkbox>\r\n                    </Col>\r\n                  );\r\n                })}\r\n              </Row>\r\n            </Checkbox.Group>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Observations\" hasFeedback>\r\n          {getFieldDecorator(\"observations\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Ajouter\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst Laboratoire = Form.create()(LaboForm);\r\n\r\nexport default Laboratoire;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  Table,\r\n  Tag,\r\n  Icon\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { LABORATOIRE } from \"../../../../../constants/index\";\r\nimport {\r\n  getAcceptationlaboByAcceptation,\r\n  getAcceptationlaboByAcceptationsLaboratoire,\r\n  updateAcceptationTestMedical\r\n} from \"../../AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"laboratoire\") {\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"sélectionnez\"\r\n          labelInValue\r\n        >\r\n          {this.props.laboratoires.map(element => {\r\n            return (\r\n              <Option key={element.id} value={element.id} label={element.nom}>\r\n                {element.nom}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (\r\n      this.props.inputType === \"date analyse\" ||\r\n      this.props.inputType === \"date réception\"\r\n    ) {\r\n      return <DatePicker className=\"date-style\"></DatePicker>;\r\n    } else if (this.props.inputType === \"Tests Medical\") {\r\n      let array = [];\r\n      this.props.produit.normes.forEach(norme => {\r\n        norme.honoraires.forEach(honoraire => {\r\n          if (honoraire.typeAuxiliaireHon.libelle === LABORATOIRE) {\r\n            array.push({ value: honoraire.id, label: honoraire.libelle });\r\n          }\r\n        });\r\n      });\r\n      return (\r\n        <Select mode=\"multiple\" style={{ width: \"100%\" }} labelInValue>\r\n          {array.map(element => {\r\n            return (\r\n              <Option\r\n                key={element.id}\r\n                value={element.value}\r\n                label={element.label}\r\n              >\r\n                {element.label}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    }\r\n    return <TextArea rows={2} />;\r\n  };\r\n\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      testsMedical,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n\r\n    if (editing && title === \"Tests Medical\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"honoraires\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: testsMedical\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"observations\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observations\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex][title]\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"laboratoire\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"laboratoire\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: {\r\n                key: record[dataIndex].laboratoire.id,\r\n                label: record[dataIndex].laboratoire.nom\r\n              }\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"date réception\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateReception\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: moment(record[dataIndex].dateReception)\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"date analyse\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateAnalyse\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: moment(record[dataIndex].dateAnalyse)\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else return <td {...restProps}>{children}</td>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\", testsMedical: [] };\r\n    this.columns = [\r\n      {\r\n        title: \"laboratoire\",\r\n        dataIndex: \"acceptationLaboratoire\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.laboratoire.nom}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"date analyse\",\r\n        dataIndex: \"acceptationLaboratoire\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.dateAnalyse}</span>\r\n      },\r\n      {\r\n        title: \"date réception\",\r\n        dataIndex: \"acceptationLaboratoire\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.dateReception}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"observations\",\r\n        dataIndex: \"acceptationLaboratoire\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.observations}</span>\r\n      },\r\n      {\r\n        title: \"Tests Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n        render: honoraires => (\r\n          <span>\r\n            {honoraires.map(tag => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"êtes-vous certain de vouloir annuler??\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Annuler</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a\r\n              href=\"#top\"\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => this.edit(record.key)}\r\n            >\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n              />\r\n            </a>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  isEditing = record => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        let honoraire = [];\r\n        row.honoraires.forEach(element => {\r\n          honoraire.push({ id: element.key, libelle: element.label });\r\n        });\r\n        delete row.honoraires;\r\n        row.dateAnalyse = row.dateAnalyse.format(\"YYYY-MM-DD\");\r\n        row.dateReception = row.dateReception.format(\"YYYY-MM-DD\");\r\n        row.laboratoire = {\r\n          id: row.laboratoire.key,\r\n          nom: row.laboratoire.label\r\n        };\r\n        let myRow = {\r\n          acceptationLaboratoire: { ...item.acceptationLaboratoire, ...row },\r\n          honoraires: honoraire\r\n        };\r\n\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...myRow\r\n        });\r\n\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n\r\n        this.updateTestMedical(item.id, { ...item, ...myRow });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  updateTestMedical = (id, Data) => {\r\n    updateAcceptationTestMedical(id, Data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"acceptation laboratoire bien modifier !\"\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        if (error.response.data.message === \"wrong data\") {\r\n          notification.error({\r\n            message: \"acception laboratoire ne ce trouve pas\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Désolé! Quelque chose a mal tourné. Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n\r\n    const newData = [...this.state.data];\r\n    const index = newData.findIndex(item => key === item.key);\r\n    if (index > -1) {\r\n      const item = newData[index];\r\n      let tests = [];\r\n      item.honoraires.forEach(element => {\r\n        tests.push({\r\n          key: element.id,\r\n          value: element.id,\r\n          label: element.libelle\r\n        });\r\n      });\r\n\r\n      this.setState({ testsMedical: [...tests] });\r\n    }\r\n  }\r\n\r\n  async acceptationsLabo(id) {\r\n    let Response = await getAcceptationlaboByAcceptation(id);\r\n    let newDataList = [];\r\n\r\n    for (const element of Response.data) {\r\n      let responseAcc = await getAcceptationlaboByAcceptationsLaboratoire(\r\n        id,\r\n        element.id\r\n      );\r\n\r\n      let key = { key: responseAcc.data.id };\r\n      let elementone = { ...responseAcc.data, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n    this.setState({\r\n      data: [...newDataList]\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsLabo(this.props.record.id);\r\n  }\r\n  componentDidUpdate(prevProps, _) {\r\n    if (this.props.dataTable !== prevProps.dataTable) {\r\n      let list = [...this.state.data];\r\n\r\n      list.push(this.props.dataTable);\r\n      this.setState({ data: [...list] });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      } else\r\n        return {\r\n          ...col,\r\n          onCell: record => ({\r\n            record,\r\n            inputType: col.title,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            editing: this.isEditing(record),\r\n            laboratoires: this.props.laboratoires,\r\n            produit: this.props.record.contrat.produit,\r\n            testsMedical: this.state.testsMedical\r\n          })\r\n        };\r\n    });\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            hideOnSinglePage: true,\r\n            defaultPageSize: 50\r\n          }}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst LaboratoireTable = Form.create()(EditableTable);\r\n\r\nexport default LaboratoireTable;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport LaboratoireAjouter from \"./LaboratoireAjouter\";\r\nimport LaboratoireTable from \"./LaboratoireTable\";\r\nimport { getAuxiliairesByType } from \"../../../../Parametrage/Auxiliaires/AuxiliaireAPI\";\r\n\r\nclass Laboratoire extends Component {\r\n  state = {\r\n    laboratoires: [],\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.AuxiliairesByType(\"LABORATOIRE\");\r\n  }\r\n\r\n  async AuxiliairesByType(type) {\r\n    let respense = await getAuxiliairesByType(type);\r\n    this.setState({ laboratoires: respense.data });\r\n  }\r\n\r\n  handleCallback = childData => {\r\n    this.setState({ data: childData });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LaboratoireAjouter\r\n          parentCallback={this.handleCallback}\r\n          laboratoires={this.state.laboratoires}\r\n          record={this.props.record}\r\n        ></LaboratoireAjouter>\r\n        <LaboratoireTable\r\n          dataTable={this.state.data}\r\n          laboratoires={this.state.laboratoires}\r\n          record={this.props.record}\r\n        ></LaboratoireTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Laboratoire;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  ajouterAcceptationEtape,\r\n  ajouterAcceptationTestMedical,\r\n  ajouterAcceptationConseil,\r\n  lettreAcceptation,\r\n  lettreRejet\r\n} from \"../../AcceptationsAPI\";\r\nimport { Form, Select, Button, DatePicker, Input, notification } from \"antd\";\r\nimport moment from \"moment\";\r\nimport { MEDECIN_CONSEIL } from \"../../../../../constants/index\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass LaboForm extends Component {\r\n  state = { honoraires: [], listOnglets: [] };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterLaboratoire(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    let array = [];\r\n\r\n    const { produit } = this.props.record.contrat;\r\n\r\n    produit.normes.forEach(norme => {\r\n      norme.honoraires.forEach(honoraire => {\r\n        if (honoraire.typeAuxiliaireHon.libelle === MEDECIN_CONSEIL) {\r\n          array.push({ label: honoraire.libelle, value: honoraire.id });\r\n        }\r\n      });\r\n    });\r\n    this.setState({ honoraires: [...array] });\r\n  }\r\n  async jasperLettreAcceptation(requestLettre) {\r\n    let response = await lettreAcceptation(requestLettre);\r\n\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n\r\n  async jasperLettreRejet(requestLettreRejet) {\r\n    let response = await lettreRejet(requestLettreRejet);\r\n\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  async ajouterLaboratoire(values) {\r\n    try {\r\n      let verdict = values.verdict.label;\r\n      values.dateExpertise = values.dateExpertise.format(\"YYYY-MM-DD\");\r\n      values.medecin = { id: values.medecin };\r\n      values.verdict = { id: values.verdict.key, status: values.verdict.label };\r\n      values.acceptation = this.props.record;\r\n      let testsArray = [{ id: values.tests }];\r\n      values.tauxSurmoralite = parseFloat(values.tauxSurmoralite);\r\n      values.tauxSurprime = parseFloat(values.tauxSurprime);\r\n      delete values.tests;\r\n      let response = await ajouterAcceptationConseil(values);\r\n      if (verdict === \"Acceptation au tarif normal\") {\r\n        let requestAcceptation = {\r\n          intermediaire: this.props.record.contrat.produit.partenaire\r\n            .raisonSocial,\r\n          nom:\r\n            this.props.record.contrat.assure.nom +\r\n            \" \" +\r\n            this.props.record.contrat.assure.prenom,\r\n          agence: this.props.record.contrat.pointVente.libelle,\r\n          numeroAcceptation: this.props.record.code,\r\n          montantMourabaha: this.props.record.contrat.capitalAssure,\r\n          encours: this.props.record.encours,\r\n          cumul: this.props.record.cumul,\r\n          duree: this.props.record.contrat.dureeContrat,\r\n          differe: this.props.record.contrat.differe,\r\n          montantCotisation: this.props.record.contrat.montantCotisation\r\n        };\r\n        this.jasperLettreAcceptation(requestAcceptation);\r\n      } else if (verdict === \"Rejet\") {\r\n        console.log(\"hello rejet verdict\");\r\n\r\n        let requestRejet = {\r\n          intermediaire: this.props.record.contrat.produit.partenaire\r\n            .raisonSocial,\r\n          nomParticipant:\r\n            this.props.record.contrat.assure.nom +\r\n            \" \" +\r\n            this.props.record.contrat.assure.prenom,\r\n          agence: this.props.record.contrat.pointVente.libelle,\r\n          numeroAcceptation: this.props.record.code,\r\n          montantFinancement: this.props.record.contrat.capitalAssure,\r\n          encours: this.props.record.encours,\r\n          cumul: this.props.record.cumul,\r\n          duree: this.props.record.contrat.dureeContrat,\r\n          differe: this.props.record.contrat.differe,\r\n          date: moment().format(\"DD-MM-YYYY\")\r\n        };\r\n        console.log(\"hello rejet verdict:\", requestRejet);\r\n        this.jasperLettreRejet(requestRejet);\r\n      }\r\n      let tests = {\r\n        acceptationConseil: { id: response.data.id },\r\n        acceptation: { id: this.props.record.id },\r\n        honoraires: testsArray\r\n      };\r\n\r\n      let responseTest = await ajouterAcceptationTestMedical(tests);\r\n      let responseEtape = await ajouterAcceptationEtape({\r\n        acceptationTestMedical: { id: responseTest.data.id },\r\n        etape: \"medecinConseil\",\r\n        dateVerdict: moment().format(\"YYYY-MM-DD\"),\r\n        verdict: values.verdict\r\n      });\r\n\r\n      if (\r\n        response.status === 200 &&\r\n        responseTest.status === 200 &&\r\n        responseEtape.status === 200\r\n      ) {\r\n        this.props.parentCallback(responseTest.data);\r\n\r\n        notification.success({\r\n          message: \"bien ajouté\"\r\n        });\r\n\r\n        let list = [...this.state.listOnglets];\r\n        if (verdict === \"Examen complementaire\") {\r\n          list.push(\r\n            {\r\n              key: \"examens\",\r\n              tab: \"Examens Complémentaire\"\r\n            },\r\n            {\r\n              key: \"specialiste\",\r\n              tab: \"Specialiste\"\r\n            }\r\n          );\r\n\r\n          this.setState({ listOnglets: [...list] });\r\n          this.props.onglet(list);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description: \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Form hideRequiredMark {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Medecin\" hasFeedback>\r\n          {getFieldDecorator(\"medecin\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"sélectionnez un medecin\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"sélectionnez\">\r\n              {this.props.medecins.map(element => {\r\n                return (\r\n                  <Option\r\n                    key={element.id}\r\n                    value={element.id}\r\n                    label={element.nom}\r\n                  >\r\n                    {element.nom}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Date Expertise\" hasFeedback>\r\n          {getFieldDecorator(\"dateExpertise\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une Date expertise\"\r\n              }\r\n            ]\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Test Médical\" hasFeedback>\r\n          {getFieldDecorator(\"tests\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                message: \"sélectionnez un Test Médical\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"sélectionnez\">\r\n              {this.state.honoraires.map(element => {\r\n                return (\r\n                  <Option\r\n                    key={element.id}\r\n                    value={element.value}\r\n                    label={element.label}\r\n                  >\r\n                    {element.label}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Observations\" hasFeedback>\r\n          {getFieldDecorator(\"observation\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Verdict\" hasFeedback>\r\n          {getFieldDecorator(\"verdict\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"sélectionnez un verdict\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select labelInValue placeholder=\"sélectionnez\">\r\n              {this.props.verdicts.map(element => {\r\n                return (\r\n                  <Option\r\n                    key={element.id}\r\n                    value={element.id}\r\n                    label={element.status}\r\n                  >\r\n                    {element.status}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Observation verdict\" hasFeedback>\r\n          {getFieldDecorator(\"observationsVerdict\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Ajouter\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst MedecinConseilAjouter = Form.create()(LaboForm);\r\n\r\nexport default MedecinConseilAjouter;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  Table,\r\n  Tag,\r\n  Icon,\r\n  Divider\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { MEDECIN_CONSEIL } from \"../../../../../constants/index\";\r\nimport {\r\n  getAcceptationTestByAcceptationsConseil,\r\n  updateAcceptationTestMedical,\r\n  getAcceptationConseilByAcceptation,\r\n  lettreAcceptation,\r\n  lettreRejet\r\n} from \"../../AcceptationsAPI\";\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"Medecin\") {\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"sélectionnez\"\r\n          labelInValue\r\n        >\r\n          {this.props.medecins.map(element => {\r\n            return (\r\n              <Option key={element.id} value={element.id} label={element.nom}>\r\n                {element.nom}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (this.props.inputType === \"Verdict\") {\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"sélectionnez\"\r\n          labelInValue\r\n        >\r\n          {this.props.verdicts.map(element => {\r\n            return (\r\n              <Option\r\n                key={element.id}\r\n                value={element.id}\r\n                label={element.status}\r\n              >\r\n                {element.status}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (this.props.inputType === \"Date Expertise\") {\r\n      return <DatePicker className=\"date-style\"></DatePicker>;\r\n    } else if (this.props.inputType === \"Test Medical\") {\r\n      let array = [];\r\n      this.props.produit.normes.forEach(norme => {\r\n        norme.honoraires.forEach(honoraire => {\r\n          if (honoraire.typeAuxiliaireHon.libelle === MEDECIN_CONSEIL) {\r\n            array.push({ value: honoraire.id, label: honoraire.libelle });\r\n          }\r\n        });\r\n      });\r\n      return (\r\n        <Select style={{ width: \"100%\" }} labelInValue>\r\n          {array.map(element => {\r\n            return (\r\n              <Option\r\n                key={element.value}\r\n                value={element.value}\r\n                label={element.label}\r\n              >\r\n                {element.label}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (\r\n      this.props.inputType === \"Observations\" ||\r\n      this.props.inputType === \"Observation verdict\"\r\n    ) {\r\n      return <TextArea rows={2} />;\r\n    }\r\n    return <Input></Input>;\r\n  };\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      testsMedical,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n\r\n    if (editing && title === \"Test Medical\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"honoraires\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: testsMedical\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Observations\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observation\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex].observation\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Motif\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"motif\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex].motif\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Observation verdict\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observationsVerdict\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex].observationsVerdict\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Medecin\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"medecin\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: {\r\n                key: record[dataIndex].medecin.id,\r\n                label: record[dataIndex].medecin.nom\r\n              }\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Verdict\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"verdict\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: {\r\n                key: record[dataIndex].verdict.id,\r\n                label: record[dataIndex].verdict.status\r\n              }\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Date Expertise\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateExpertise\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: moment(record[dataIndex].dateExpertise)\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Taux de surprime\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"tauxSurprime\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex].tauxSurprime\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Taux de surmoralité\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"tauxSurmoralite\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex].tauxSurmoralite\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else return <td {...restProps}>{children}</td>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nclass EditableTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      editingKey: \"\",\r\n      testsMedical: [],\r\n      listOnglets: [],\r\n      verdic: \"\"\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Medecin\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.medecin.nom}</span>\r\n      },\r\n      {\r\n        title: \"Date Expertise\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.dateExpertise}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Observations\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.observation}</span>\r\n      },\r\n      {\r\n        title: \"Test Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n        render: honoraires => (\r\n          <span>\r\n            {honoraires.map(tag => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Verdict\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.verdict.status}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Observation verdict\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.observationsVerdict}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Taux de surprime\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.tauxSurprime}</span>\r\n      },\r\n      {\r\n        title: \"Taux de surmoralité\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.tauxSurmoralite}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Confirmer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"êtes-vous certain de vouloir annuler?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Annuler</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <span>\r\n              <a\r\n                disabled={editingKey !== \"\"}\r\n                onClick={() => this.edit(record.key)}\r\n              >\r\n                <Icon\r\n                  type=\"edit\"\r\n                  style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n                />\r\n              </a>\r\n              <Divider type=\"vertical\" />\r\n              <a\r\n                disabled={this.state.verdic !== \"Acceptation au tarif normal\"}\r\n                onClick={() => this.download()}\r\n                href=\"#top\"\r\n              >\r\n                <Icon\r\n                  type=\"download\"\r\n                  style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n                />\r\n              </a>\r\n            </span>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n  isEditing = record => record.key === this.state.editingKey;\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      this.setState({ verdic: row.verdict.label });\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        let honoraire = [];\r\n        row.honoraires.forEach(element => {\r\n          honoraire.push({ id: element.key, libelle: element.label });\r\n        });\r\n        delete row.honoraires;\r\n        row.dateExpertise = row.dateExpertise.format(\"YYYY-MM-DD\");\r\n        row.medecin = { id: row.medecin.key, nom: row.medecin.label };\r\n        row.verdict = { id: row.verdict.key, status: row.verdict.label };\r\n        row.tauxSurmoralite = parseFloat(row.tauxSurmoralite);\r\n        row.tauxSurprime = parseFloat(row.tauxSurprime);\r\n        let myRow = {\r\n          acceptationConseil: { ...item.acceptationConseil, ...row },\r\n          honoraires: honoraire\r\n        };\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...myRow\r\n        });\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n        this.updateTestMedical(item.id, { ...item, ...myRow });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  async jasperLettreAcceptation(requestLettre) {\r\n    let response = await lettreAcceptation(requestLettre);\r\n\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  async jasperLettreRejet(requestLettreRejet) {\r\n    let response = await lettreRejet(requestLettreRejet);\r\n\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  updateTestMedical = (id, Data) => {\r\n    updateAcceptationTestMedical(id, Data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"acceptation Medecin conseil bien modifier !\"\r\n          });\r\n          let requestAcceptation = {\r\n            intermediaire: this.props.record.contrat.produit.partenaire\r\n              .raisonSocial,\r\n            nom:\r\n              this.props.record.contrat.assure.nom +\r\n              \" \" +\r\n              this.props.record.contrat.assure.prenom,\r\n            agence: this.props.record.contrat.pointVente.libelle,\r\n            numeroAcceptation: this.props.record.code,\r\n            montantMourabaha: this.props.record.contrat.capitalAssure,\r\n            encours: this.props.record.encours,\r\n            cumul: this.props.record.cumul,\r\n            duree: this.props.record.contrat.dureeContrat,\r\n            differe: this.props.record.contrat.differe,\r\n            montantCotisation: this.props.record.contrat.montantCotisation\r\n          };\r\n          if (\r\n            Data.acceptationConseil.verdict.status ===\r\n            \"Acceptation au tarif normal\"\r\n          ) {\r\n            this.jasperLettreAcceptation(requestAcceptation);\r\n          } else if (Data.acceptationConseil.verdict.status === \"Rejet\") {\r\n            console.log(\"hello rejet verdict\");\r\n\r\n            let requestRejet = {\r\n              intermediaire: this.props.record.contrat.produit.partenaire\r\n                .raisonSocial,\r\n              nomParticipant:\r\n                this.props.record.contrat.assure.nom +\r\n                \" \" +\r\n                this.props.record.contrat.assure.prenom,\r\n              agence: this.props.record.contrat.pointVente.libelle,\r\n              numeroAcceptation: this.props.record.code,\r\n              montantFinancement: this.props.record.contrat.capitalAssure,\r\n              encours: this.props.record.encours,\r\n              cumul: this.props.record.cumul,\r\n              duree: this.props.record.contrat.dureeContrat,\r\n              differe: this.props.record.contrat.differe,\r\n              date: moment().format(\"DD-MM-YYYY\")\r\n            };\r\n            console.log(\"hello rejet verdict:\", requestRejet);\r\n            this.jasperLettreRejet(requestRejet);\r\n          }\r\n        }\r\n      })\r\n      .catch(error => {\r\n        if (error.response.data.message === \"wrong data\") {\r\n          notification.error({\r\n            message: \"acception Medecin conseil ne ce trouve pas\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Désolé! Quelque chose a mal tourné. Veuillez réessayer!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n    const newData = [...this.state.data];\r\n    const index = newData.findIndex(item => key === item.key);\r\n    if (index > -1) {\r\n      const item = newData[index];\r\n      let tests = [];\r\n      item.honoraires.forEach(element => {\r\n        tests.push({\r\n          key: element.id,\r\n          value: element.id,\r\n          label: element.libelle\r\n        });\r\n      });\r\n      this.setState({ testsMedical: [...tests] });\r\n    }\r\n  }\r\n  download() {\r\n    let requestAcceptation = {\r\n      intermediaire: this.props.record.contrat.produit.partenaire.raisonSocial,\r\n      nom:\r\n        this.props.record.contrat.assure.nom +\r\n        \" \" +\r\n        this.props.record.contrat.assure.prenom,\r\n      agence: this.props.record.contrat.pointVente.libelle,\r\n      numeroAcceptation: this.props.record.code,\r\n      montantMourabaha: this.props.record.contrat.capitalAssure,\r\n      encours: this.props.record.encours,\r\n      cumul: this.props.record.cumul,\r\n      duree: this.props.record.contrat.dureeContrat,\r\n      differe: this.props.record.contrat.differe,\r\n      montantCotisation: this.props.record.contrat.montantCotisation\r\n    };\r\n    this.jasperLettreAcceptation(requestAcceptation);\r\n  }\r\n  async acceptationsConseil(id) {\r\n    let Response = await getAcceptationConseilByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let responseAcc = await getAcceptationTestByAcceptationsConseil(\r\n        id,\r\n        element.id\r\n      );\r\n      let list = [...this.state.listOnglets];\r\n      if (\r\n        responseAcc.data.acceptationConseil.verdict.status ===\r\n        \"Examen complementaire\"\r\n      ) {\r\n        list.push(\r\n          {\r\n            key: \"examens\",\r\n            tab: \"Examens Complémentaire\"\r\n          },\r\n          {\r\n            key: \"specialiste\",\r\n            tab: \"Specialiste\"\r\n          }\r\n        );\r\n        this.setState({ listOnglets: [...list] });\r\n        this.props.onglet(this.state.listOnglets);\r\n      }\r\n      let key = { key: responseAcc.data.id };\r\n      let elementone = { ...responseAcc.data, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n\r\n    this.setState({ data: [...newDataList] });\r\n    if (newDataList.length !== 0) {\r\n      this.setState({\r\n        verdic: newDataList[0].acceptationConseil.verdict.status\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsConseil(this.props.record.id);\r\n    console.log(\"props conseil:\", this.props);\r\n  }\r\n  componentDidUpdate(prevProps, _) {\r\n    if (this.props.dataTable !== prevProps.dataTable) {\r\n      let list = [...this.state.data];\r\n      list.push(this.props.dataTable);\r\n      this.setState({ data: [...list] });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      } else\r\n        return {\r\n          ...col,\r\n          onCell: record => ({\r\n            record,\r\n            inputType: col.title,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            editing: this.isEditing(record),\r\n            medecins: this.props.medecins,\r\n            produit: this.props.record.contrat.produit,\r\n            testsMedical: this.state.testsMedical,\r\n            verdicts: this.props.verdicts\r\n          })\r\n        };\r\n    });\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            hideOnSinglePage: true,\r\n            defaultPageSize: 50\r\n          }}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\nconst MedecinConseilTable = Form.create()(EditableTable);\r\nexport default MedecinConseilTable;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport MedecinConseilAjouter from \"./MedecinConseilAjouter\";\r\nimport MedecinConseilTable from \"./MedecinConseilTable\";\r\nimport {\r\n  MEDECIN_CONSEIL,\r\n  VERDICT_NON_EXAMINATEUR\r\n} from \"../../../../../constants/index\";\r\nimport { getAuxiliairesByType } from \"../../../../Parametrage/Auxiliaires/AuxiliaireAPI\";\r\nimport { getVerdictByType } from \"../../AcceptationsAPI\";\r\n\r\nclass MedecinConseil extends Component {\r\n  state = {\r\n    medecins: [],\r\n    verdicts: [],\r\n    tabListNoTitle: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.AuxiliairesByType(MEDECIN_CONSEIL);\r\n    this.VerdictByType(VERDICT_NON_EXAMINATEUR);\r\n  }\r\n\r\n  handleCallback = childData => {\r\n    this.setState({ data: childData });\r\n  };\r\n\r\n  async AuxiliairesByType(type) {\r\n    let respense = await getAuxiliairesByType(type);\r\n    this.setState({ medecins: respense.data });\r\n  }\r\n  async VerdictByType(type) {\r\n    let respense = await getVerdictByType(type);\r\n    this.setState({ verdicts: respense.data });\r\n  }\r\n\r\n  acctivatedOnglet = list => {\r\n    let helpList = [...this.state.tabListNoTitle];\r\n    let filtredList = [...list];\r\n    let examensHelp = false;\r\n    helpList.forEach(element => {\r\n      if (element.key === \"examens\") {\r\n        examensHelp = true;\r\n      }\r\n    });\r\n\r\n    if (examensHelp) {\r\n      filtredList = list.filter(item => item.key !== \"examens\");\r\n    }\r\n\r\n    this.setState({ tabListNoTitle: [...helpList, ...filtredList] });\r\n    this.props.onglet(this.state.tabListNoTitle);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MedecinConseilAjouter\r\n          parentCallback={this.handleCallback}\r\n          onglet={this.acctivatedOnglet}\r\n          verdicts={this.state.verdicts}\r\n          medecins={this.state.medecins}\r\n          record={this.props.record}\r\n        ></MedecinConseilAjouter>\r\n\r\n        <MedecinConseilTable\r\n          dataTable={this.state.data}\r\n          onglet={this.acctivatedOnglet}\r\n          verdicts={this.state.verdicts}\r\n          medecins={this.state.medecins}\r\n          record={this.props.record}\r\n        ></MedecinConseilTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedecinConseil;\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport moment from \"moment\";\r\nimport { Form, Select, Button, DatePicker, Input, notification } from \"antd\";\r\nimport { ajouterAcceptationEtape,ajouterAcceptationReassurance } from \"../../AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass LaboForm extends Component {\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterSpecialiste(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  async ajouterSpecialiste(values) {\r\n    try {\r\n      values.dateReassurance = values.dateReassurance.format(\"YYYY-MM-DD\");\r\n      values.dateReception = values.dateReception.format(\"YYYY-MM-DD\");\r\n      values.verdict = { id: values.verdict };\r\n      values.tauxSurprime = parseFloat(values.tauxSurprime);\r\n\r\n      values.acceptation = this.props.record;\r\n      let response = await ajouterAcceptationReassurance(values);\r\n\r\n      let responseEtape = await ajouterAcceptationEtape({\r\n        acceptationReassurance: { id: response.data.id },\r\n        etape: \"reassurance\",\r\n        dateVerdict: moment().format(\"YYYY-MM-DD\"),\r\n        verdict: values.verdict,\r\n      });\r\n      if (response.status === 200 && responseEtape.status === 200) {\r\n        this.props.parentCallback(response.data);\r\n        notification.success({\r\n          message: \"bien ajouté\",\r\n        });\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\",\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 },\r\n      },\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0,\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8,\r\n        },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Form hideRequiredMark {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Date Reassurance\" hasFeedback>\r\n          {getFieldDecorator(\"dateReassurance\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date d'reassurance\",\r\n              },\r\n            ],\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Date réception\" hasFeedback>\r\n          {getFieldDecorator(\"dateReception\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date de réception\",\r\n              },\r\n            ],\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Observation\" hasFeedback>\r\n          {getFieldDecorator(\"observation\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Taux de surprime\" hasFeedback>\r\n          {getFieldDecorator(\"tauxSurprime\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Tapez une nature de test\",\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Verdict\" hasFeedback>\r\n          {getFieldDecorator(\"verdict\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"sélectionnez un verdict\",\r\n              },\r\n            ],\r\n          })(\r\n            <Select placeholder=\"sélectionnez\">\r\n              {this.props.verdicts.map((element) => {\r\n                return (\r\n                  <Option value={element.id} label={element.status}>\r\n                    {element.status}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        {/* <Form.Item label=\"Motif\" hasFeedback>\r\n          {getFieldDecorator(\"motif\", {\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Tapez un motif\",\r\n              },\r\n            ],\r\n          })(<Input />)}\r\n        </Form.Item> */}\r\n        <Form.Item label=\"Observation verdict\" hasFeedback>\r\n          {getFieldDecorator(\"observationVerdict\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Ajouter\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ReassuranceAjouter = Form.create()(LaboForm);\r\n\r\nexport default ReassuranceAjouter;\r\n","import \"antd/dist/antd.css\";\r\nimport {\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  Table,\r\n  Icon,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getAcceptationReassuranceByAcceptation, updateAcceptationReassurance} from \"../../AcceptationsAPI\";\r\n\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"Verdict\") {\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"sélectionnez\"\r\n          labelInValue\r\n        >\r\n          {this.props.verdicts.map((element) => {\r\n            return (\r\n              <Option value={element.id} label={element.status}>\r\n                {element.status}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (\r\n      this.props.inputType === \"Date réception\" ||\r\n      this.props.inputType === \"Date reassurance\"\r\n    ) {\r\n      return <DatePicker className=\"date-style\"></DatePicker>;\r\n    } else if (\r\n      this.props.inputType === \"Observation\" ||\r\n      this.props.inputType === \"Observation verdict\"\r\n    ) {\r\n      return <TextArea rows={2} />;\r\n    }\r\n    return <Input />;\r\n  };\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    if (editing && title === \"Observation\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observation\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Observation verdict\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observationVerdict\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Verdict\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"verdict\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: {\r\n                key: record[dataIndex].id,\r\n                label: record[dataIndex].status,\r\n              },\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Date reassurance\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateReassurance\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: moment(record[dataIndex]),\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Date réception\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateReception\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: moment(record[dataIndex]),\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Taux de Surprime\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"tauxSurprime\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Motif\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"motif\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else return <td {...restProps}>{children}</td>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nclass EditableTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\" };\r\n    this.columns = [\r\n      {\r\n        title: \"Date réception\",\r\n        dataIndex: \"dateReception\",\r\n        editable: true,\r\n        render: (dateConsultation) => (\r\n          <span>{moment(dateConsultation).format(\"YYYY-MM-DD\")}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Date reassurance\",\r\n        dataIndex: \"dateReassurance\",\r\n        editable: true,\r\n        render: (dateConsultation) => (\r\n          <span>{moment(dateConsultation).format(\"YYYY-MM-DD\")}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Observation\",\r\n        dataIndex: \"observation\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Taux de Surprime\",\r\n        dataIndex: \"tauxSurprime\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Verdict\",\r\n        dataIndex: \"verdict\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => <span>{acceptationsLabo.status}</span>,\r\n      },\r\n\r\n      {\r\n        title: \"Observation verdict\",\r\n        dataIndex: \"observationVerdict\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {(form) => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"êtes-vous certain de vouloir annuler?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Annuler</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a\r\n              href=\"#top\"\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => this.edit(record.key)}\r\n            >\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n              />\r\n            </a>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  isEditing = (record) => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n\r\n        row.dateReassurance = row.dateReassurance.format(\"YYYY-MM-DD\");\r\n        row.dateReception = row.dateReception.format(\"YYYY-MM-DD\");\r\n        row.tauxSurprime = parseFloat(row.tauxSurprime);\r\n        row.verdict = { id: row.verdict.key, status: row.verdict.label };\r\n\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n\r\n        this.updateSpecialiste(item.id, { ...item, ...row });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  updateSpecialiste = (id, Data) => {\r\n    updateAcceptationReassurance(id, Data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"acceptation reassurance bien modifier !\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data.message === \"wrong data\") {\r\n          notification.error({\r\n            message: \"acception reassurance ne ce trouve pas\",\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Désolé! Quelque chose a mal tourné. Veuillez réessayer!\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  async acceptationsSpecialiste(id) {\r\n    let Response = await getAcceptationReassuranceByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let key = { key: element.id };\r\n      let elementone = { ...element, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n\r\n    this.setState({\r\n      data: [...newDataList],\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsSpecialiste(this.props.record.id);\r\n  }\r\n  componentDidUpdate(prevProps, _) {\r\n    if (this.props.dataTable !== prevProps.dataTable) {\r\n      let list = [...this.state.data];\r\n\r\n      list.push(this.props.dataTable);\r\n      this.setState({ data: [...list] });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      } else\r\n        return {\r\n          ...col,\r\n          onCell: (record) => ({\r\n            record,\r\n            inputType: col.title,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            editing: this.isEditing(record),\r\n            produit: this.props.record.contrat.produit,\r\n            verdicts: this.props.verdicts,\r\n          }),\r\n        };\r\n    });\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            hideOnSinglePage: true,\r\n            defaultPageSize: 50,\r\n          }}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst ReassuranceTable = Form.create()(EditableTable);\r\n\r\nexport default ReassuranceTable;\r\n","import React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport ReassuranceAjouter from \"./ReassuranceAjouter\";\r\nimport ReassuranceTable from \"./ReassuranceTable\";\r\nimport { VERDICT_EXAMINATEUR } from \"../../../../../constants/index\";\r\nimport { getVerdictByType } from \"../../AcceptationsAPI\";\r\n\r\nclass Reassurance extends Component {\r\n  state = {\r\n    verdicts: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.VerdictByType(VERDICT_EXAMINATEUR);\r\n  }\r\n\r\n  async VerdictByType(type) {\r\n    let respense = await getVerdictByType(type);\r\n    this.setState({ verdicts: respense.data });\r\n  }\r\n  handleCallback = childData => {\r\n    this.setState({ data: childData });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ReassuranceAjouter\r\n          parentCallback={this.handleCallback}\r\n          verdicts={this.state.verdicts}\r\n          record={this.props.record}\r\n        ></ReassuranceAjouter>\r\n        <ReassuranceTable\r\n          dataTable={this.state.data}\r\n          verdicts={this.state.verdicts}\r\n          record={this.props.record}\r\n        ></ReassuranceTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reassurance;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form, Select, Button, DatePicker, Input, notification } from \"antd\";\r\nimport {\r\n  ajouterAcceptationSpecialiste,\r\n  ajouterAcceptationTestMedical\r\n} from \"../../AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\n\r\nclass LaboForm extends Component {\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFieldsAndScroll((err, values) => {\r\n      if (!err) {\r\n        this.ajouterSpecialiste(values);\r\n      }\r\n    });\r\n  };\r\n\r\n  async ajouterSpecialiste(values) {\r\n    try {\r\n      values.dateConsultation = values.dateConsultation.format(\"YYYY-MM-DD\");\r\n      values.specialiste = { id: values.specialiste };\r\n      values.acceptation = this.props.record;\r\n      let response = await ajouterAcceptationSpecialiste(values);\r\n\r\n      let tests = {\r\n        acceptationSpecialiste: { id: response.data.id },\r\n        acceptation: { id: this.props.record.id }\r\n      };\r\n      let responseTest = await ajouterAcceptationTestMedical(tests);\r\n\r\n      if (response.status === 200 && responseTest.status === 200) {\r\n        this.props.parentCallback(responseTest.data.acceptationSpecialiste);\r\n        notification.success({\r\n          message: \"bien ajouté\"\r\n        });\r\n      }\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description: \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 8 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 16 }\r\n      }\r\n    };\r\n    const tailFormItemLayout = {\r\n      wrapperCol: {\r\n        xs: {\r\n          span: 24,\r\n          offset: 0\r\n        },\r\n        sm: {\r\n          span: 16,\r\n          offset: 8\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Form hideRequiredMark {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <Form.Item label=\"Specialiste\" hasFeedback>\r\n          {getFieldDecorator(\"specialiste\", {\r\n            valuePropName: \"selected\",\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"sélectionnez un Specialiste\"\r\n              }\r\n            ]\r\n          })(\r\n            <Select placeholder=\"sélectionnez\">\r\n              {this.props.specialistes.map(element => {\r\n                return (\r\n                  <Option\r\n                    key={element.id}\r\n                    value={element.id}\r\n                    label={element.nom}\r\n                  >\r\n                    {element.nom}\r\n                  </Option>\r\n                );\r\n              })}\r\n            </Select>\r\n          )}\r\n        </Form.Item>\r\n        <Form.Item label=\"Specialité\" hasFeedback>\r\n          {getFieldDecorator(\"specialite\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Tapez une specialité\"\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Nature de test\" hasFeedback>\r\n          {getFieldDecorator(\"natureTest\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Tapez une nature de test\"\r\n              }\r\n            ]\r\n          })(<Input />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item label=\"Date de consultation\" hasFeedback>\r\n          {getFieldDecorator(\"dateConsultation\", {\r\n            valuePropName: \"selected\",\r\n\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"selectionnez une date de consultation\"\r\n              }\r\n            ]\r\n          })(<DatePicker className=\"date-style\"></DatePicker>)}\r\n        </Form.Item>\r\n        <Form.Item label=\"Observations\" hasFeedback>\r\n          {getFieldDecorator(\"observations\")(<TextArea rows={4} />)}\r\n        </Form.Item>\r\n\r\n        <Form.Item {...tailFormItemLayout}>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Ajouter\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst SpecialisteAjouter = Form.create()(LaboForm);\r\n\r\nexport default SpecialisteAjouter;\r\n","import \"antd/dist/antd.css\";\r\nimport {\r\n  DatePicker,\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  Table,\r\n  Icon,\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getAcceptationSpecialisteByAcceptation,updateAcceptationSpecialiste} from \"../../AcceptationsAPI\";\r\n\r\nconst { Option } = Select;\r\nconst { TextArea } = Input;\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"Specialiste\") {\r\n      return (\r\n        <Select\r\n          style={{ width: \"100%\" }}\r\n          placeholder=\"sélectionnez\"\r\n          labelInValue\r\n        >\r\n          {this.props.specialistes.map((element) => {\r\n            return (\r\n              <Option value={element.id} label={element.nom}>\r\n                {element.nom}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    } else if (this.props.inputType === \"Date consultation\") {\r\n      return <DatePicker className=\"date-style\"></DatePicker>;\r\n    } else if (this.props.inputType === \"observations\") {\r\n      return <TextArea rows={2} />;\r\n    }\r\n    return <Input />;\r\n  };\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    if (editing && title === \"observations\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"observations\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Specialiste\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"specialiste\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: {\r\n                key: record[dataIndex].id,\r\n                label: record[dataIndex].nom,\r\n              },\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Date consultation\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"dateConsultation\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: moment(record[dataIndex]),\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Nature de test\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"natureTest\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing && title === \"Specialité\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"specialite\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`,\r\n                },\r\n              ],\r\n              initialValue: record[dataIndex],\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else return <td {...restProps}>{children}</td>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nclass EditableTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\" };\r\n    this.columns = [\r\n      {\r\n        title: \"Specialiste\",\r\n        dataIndex: \"specialiste\",\r\n        editable: true,\r\n        render: (specialiste) => <span>{specialiste.nom}</span>,\r\n      },\r\n      {\r\n        title: \"Specialité\",\r\n        dataIndex: \"specialite\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Nature de test\",\r\n        dataIndex: \"natureTest\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Date consultation\",\r\n        dataIndex: \"dateConsultation\",\r\n        editable: true,\r\n        render: (dateConsultation) => (\r\n          <span>{moment(dateConsultation).format(\"YYYY-MM-DD\")}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"observations\",\r\n        dataIndex: \"observations\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {(form) => (\r\n                  <a\r\n                    href=\"#top\"\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"êtes-vous certain de vouloir annuler?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a href=\"#top\">Annuler</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a\r\n              href=\"#top\"\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => this.edit(record.key)}\r\n            >\r\n              <Icon\r\n                type=\"edit\"\r\n                style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n              />\r\n            </a>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n\r\n  isEditing = (record) => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex((item) => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n\r\n        row.dateConsultation = row.dateConsultation.format(\"YYYY-MM-DD\");\r\n        row.specialiste = {\r\n          id: row.specialiste.key,\r\n          nom: row.specialiste.label,\r\n        };\r\n\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...row,\r\n        });\r\n\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n\r\n        this.updateSpecialiste(item.id, { ...item, ...row });\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n  updateSpecialiste = (id, Data) => {\r\n    updateAcceptationSpecialiste(id, Data)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"acceptation specialiste bien modifier !\",\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        if (error.response.data.message === \"wrong data\") {\r\n          notification.error({\r\n            message: \"acception specialiste ne ce trouve pas\",\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Désolé! Quelque chose a mal tourné. Veuillez réessayer!\",\r\n          });\r\n        }\r\n      });\r\n  };\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n  }\r\n\r\n  async acceptationsSpecialiste(id) {\r\n    let Response = await getAcceptationSpecialisteByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let key = { key: element.id };\r\n      let elementone = { ...element, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n\r\n    this.setState({\r\n      data: [...newDataList],\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsSpecialiste(this.props.record.id);\r\n  }\r\n  componentDidUpdate(prevProps, _) {\r\n    if (this.props.dataTable !== prevProps.dataTable) {\r\n      let list = [...this.state.data];\r\n      list.push(this.props.dataTable);\r\n      this.setState({ data: [...list] });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell,\r\n      },\r\n    };\r\n\r\n    const columns = this.columns.map((col) => {\r\n      if (!col.editable) {\r\n        return col;\r\n      } else\r\n        return {\r\n          ...col,\r\n          onCell: (record) => ({\r\n            record,\r\n            inputType: col.title,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            editing: this.isEditing(record),\r\n            specialistes: this.props.specialistes,\r\n            produit: this.props.record.contrat.produit,\r\n          }),\r\n        };\r\n    });\r\n    return (\r\n      <EditableContext.Provider value={this.props.form}>\r\n        <Table\r\n          components={components}\r\n          bordered\r\n          dataSource={this.state.data}\r\n          columns={columns}\r\n          rowClassName=\"editable-row\"\r\n          pagination={{\r\n            hideOnSinglePage: true,\r\n            defaultPageSize: 50,\r\n          }}\r\n        />\r\n      </EditableContext.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nconst SpecialisteTable = Form.create()(EditableTable);\r\n\r\nexport default SpecialisteTable;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport SpecialisteAjouter from \"./SpecialisteAjouter\";\r\nimport SpecialisteTable from \"./SpecialisteTable\";\r\nimport { MEDECIN_SPECIALISTE } from \"../../../../../constants/index\";\r\nimport { getAuxiliairesByType } from \"../../../../Parametrage/Auxiliaires/AuxiliaireAPI\";\r\n\r\nclass Laboratoire extends Component {\r\n  state = {\r\n    specialistes: [],\r\n    tabListNoTitle: [],\r\n    data: null\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.AuxiliairesByType(MEDECIN_SPECIALISTE);\r\n  }\r\n\r\n  async AuxiliairesByType(type) {\r\n    let respense = await getAuxiliairesByType(type);\r\n    this.setState({ specialistes: respense.data });\r\n  }\r\n\r\n  handleCallback = childData => {\r\n    this.setState({ data: childData });\r\n  };\r\n\r\n  acctivatedOnglet = list => {\r\n    let helpList = [...this.state.tabListNoTitle];\r\n    let filtredList = [...list];\r\n    helpList.forEach(element => {\r\n      if (element.key === \"examens\") {\r\n        filtredList = list.filter(item => item.key !== \"examens\");\r\n      }\r\n    });\r\n    this.setState({ tabListNoTitle: [...helpList, ...filtredList] });\r\n    this.props.onglet(this.state.tabListNoTitle);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SpecialisteAjouter\r\n          parentCallback={this.handleCallback}\r\n          specialistes={this.state.specialistes}\r\n          record={this.props.record}\r\n        ></SpecialisteAjouter>\r\n        <SpecialisteTable\r\n          dataTable={this.state.data}\r\n          specialistes={this.state.specialistes}\r\n          record={this.props.record}\r\n        ></SpecialisteTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Laboratoire;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Card, Descriptions } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport ExamensComlementaire from \"./ModificationTabs/ExamensComlementaire/ExamensComlementaire\";\r\nimport Examinateur from \"./ModificationTabs/Examinateur/Examinateur\";\r\nimport General from \"./ModificationTabs/General\";\r\nimport Laboratoire from \"./ModificationTabs/Laboratoire/Laboratoire\";\r\nimport MedecinConseil from \"./ModificationTabs/MedecinConseil/MedecinConseil\";\r\nimport Reassurance from \"./ModificationTabs/Reassurance/Reassurance\";\r\nimport Specialiste from \"./ModificationTabs/Specialiste/Specialiste\";\r\n\r\nclass ModificationAcceptation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      key: \"tab1\",\r\n      noTitleKey: \"general\",\r\n      tabListNoTitle: [\r\n        {\r\n          key: \"general\",\r\n          tab: \"Général\"\r\n        },\r\n        {\r\n          key: \"laboratoire\",\r\n          tab: \"Laboratoire\"\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  acctivatedOnglet = list => {\r\n    let helpList = [...this.state.tabListNoTitle];\r\n    let filtredList = [...list];\r\n    let MedecinHelp = false;\r\n    let reassuranceHelp = false;\r\n    let examenseHelp = false;\r\n\r\n    helpList.forEach(element => {\r\n      if (element.key === \"medecinConseil\") {\r\n        MedecinHelp = true;\r\n      }\r\n      if (element.key === \"reassurance\") reassuranceHelp = true;\r\n\r\n      if (element.key === \"examens\") {\r\n        examenseHelp = true;\r\n      }\r\n    });\r\n\r\n    if (examenseHelp) {\r\n      filtredList = list.filter(\r\n        item => item.key !== \"examens\" && item.key !== \"specialiste\"\r\n      );\r\n    }\r\n    if (MedecinHelp) {\r\n      filtredList = list.filter(item => item.key !== \"medecinConseil\");\r\n    }\r\n    if (reassuranceHelp) {\r\n      filtredList = list.filter(item => item.key !== \"reassurance\");\r\n    }\r\n    if (reassuranceHelp && MedecinHelp) {\r\n      filtredList = list.filter(\r\n        item => item.key !== \"reassurance\" && item.key !== \"medecinConseil\"\r\n      );\r\n    }\r\n    if (MedecinHelp && examenseHelp) {\r\n      filtredList = list.filter(\r\n        item =>\r\n          item.key !== \"medecinConseil\" &&\r\n          item.key !== \"examens\" &&\r\n          item.key !== \"specialiste\"\r\n      );\r\n    }\r\n    if (reassuranceHelp && examenseHelp) {\r\n      filtredList = list.filter(\r\n        item =>\r\n          item.key !== \"reassurance\" &&\r\n          item.key !== \"examens\" &&\r\n          item.key !== \"specialiste\"\r\n      );\r\n    }\r\n    if (reassuranceHelp && MedecinHelp && examenseHelp) {\r\n      filtredList = list.filter(\r\n        item =>\r\n          item.key !== \"reassurance\" &&\r\n          item.key !== \"medecinConseil\" &&\r\n          item.key !== \"examens\" &&\r\n          item.key !== \"specialiste\"\r\n      );\r\n    }\r\n\r\n    this.setState({ tabListNoTitle: [...helpList, ...filtredList] });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { record } = this.props.record.location.state;\r\n\r\n    if (\r\n      record.contrat.produit.seuilExaminateur <\r\n        record.cumul <\r\n        record.contrat.produit.seuilConseil ||\r\n      record.contrat.produit.seuilConseil <\r\n        record.cumul <\r\n        record.contrat.produit.seuilReassurance ||\r\n      record.cumul > record.contrat.produit.seuilReassurance\r\n    ) {\r\n      this.setState({\r\n        tabListNoTitle: [\r\n          {\r\n            key: \"general\",\r\n            tab: \"Général\"\r\n          },\r\n          {\r\n            key: \"laboratoire\",\r\n            tab: \"Laboratoire\"\r\n          },\r\n          {\r\n            key: \"examinateur\",\r\n            tab: \"Examinateur\"\r\n          }\r\n        ]\r\n      });\r\n    }\r\n\r\n    if (record.contrat.produit.seuilExaminateur > record.cumul) {\r\n      // todo : add the accepted condition\r\n      this.setState({\r\n        tabListNoTitle: [\r\n          {\r\n            key: \"general\",\r\n            tab: \"Général\"\r\n          },\r\n          {\r\n            key: \"laboratoire\",\r\n            tab: \"Laboratoire\"\r\n          },\r\n          {\r\n            key: \"examinateur\",\r\n            tab: \"Examinateur\"\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }\r\n\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  render() {\r\n    let contentListNoTitle = {\r\n      general: <General record={this.props.record.location.state.record} />,\r\n      laboratoire: (\r\n        <Laboratoire record={this.props.record.location.state.record} />\r\n      ),\r\n      examinateur: (\r\n        <Examinateur\r\n          onglet={this.acctivatedOnglet}\r\n          record={this.props.record.location.state.record}\r\n        />\r\n      ),\r\n      medecinConseil: (\r\n        <MedecinConseil\r\n          onglet={this.acctivatedOnglet}\r\n          record={this.props.record.location.state.record}\r\n        />\r\n      ),\r\n      specialiste: (\r\n        <Specialiste record={this.props.record.location.state.record} />\r\n      ),\r\n      examens: (\r\n        <ExamensComlementaire\r\n          record={this.props.record.location.state.record}\r\n        />\r\n      ),\r\n      reassurance: (\r\n        <Reassurance record={this.props.record.location.state.record} />\r\n      )\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Descriptions size=\"default\">\r\n          <Descriptions.Item label=\"Code acceptation\">\r\n            {this.props.record.location.state.record.code}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Nom assuré\">\r\n            {this.props.record.location.state.record.contrat.assure.nom}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Prenom assuré\">\r\n            {this.props.record.location.state.record.contrat.assure.prenom}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <br></br>\r\n\r\n        <Card\r\n          style={{ width: \"100%\" }}\r\n          tabList={this.state.tabListNoTitle}\r\n          activeTabKey={this.state.noTitleKey}\r\n          onTabChange={key => {\r\n            this.onTabChange(key, \"noTitleKey\");\r\n          }}\r\n        >\r\n          {contentListNoTitle[this.state.noTitleKey]}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ModificationAcceptation;\r\n","import \"antd/dist/antd.css\";\r\nimport { Table, Tag } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getAcceptationExamnsByAcceptation,\r\n         getAcceptationTestMedicalByAcceptationExamensComplementaire} from \"../AcceptationsAPI\";\r\n\r\nclass ExamensComlementaire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [] };\r\n    this.columns = [\r\n      {\r\n        title: \"laboratoire\",\r\n        dataIndex: \"acceptationExamens\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>{acceptationsLabo.laboratoire.nom}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"date analyse\",\r\n        dataIndex: \"acceptationExamens\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>\r\n            {moment(acceptationsLabo.dateAnalyse).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"date réception\",\r\n        dataIndex: \"acceptationExamens\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>\r\n            {moment(acceptationsLabo.dateReception).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"observations\",\r\n        dataIndex: \"acceptationExamens\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>{acceptationsLabo.observations}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Test Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n        render: (honoraires) => (\r\n          <span>\r\n            {honoraires.map((tag) => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  }\r\n\r\n  async acceptationsLabo(id) {\r\n    let Response = await getAcceptationExamnsByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let responseAcc = await getAcceptationTestMedicalByAcceptationExamensComplementaire(\r\n        id,\r\n        element.id\r\n      );\r\n\r\n      let key = { key: responseAcc.data.id };\r\n      let elementone = { ...responseAcc.data, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n    this.setState({\r\n      data: [...newDataList],\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsLabo(this.props.record.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        bordered\r\n        dataSource={this.state.data}\r\n        columns={this.columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          hideOnSinglePage: true,\r\n          defaultPageSize: 50,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ExamensComlementaire;\r\n","import \"antd/dist/antd.css\";\r\nimport { Table, Tag } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport { getAcceptationExaminateurByAcceptation,getAcceptationTestByAcceptationsExaminateur} from \"../AcceptationsAPI\";\r\n\r\nclass Examinateur extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [] };\r\n    this.columns = [\r\n      {\r\n        title: \"Medecin\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>{acceptationsLabo.medecin.nom}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Date visite\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>\r\n            {moment(acceptationsLabo.dateVisite).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Date réception\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>\r\n            {moment(acceptationsLabo.dateReception).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Observations\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>{acceptationsLabo.observation}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Verdict\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>{acceptationsLabo.verdict.status}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Observation verdict\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>{acceptationsLabo.observationsVerdict}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Motif\",\r\n        dataIndex: \"acceptationExaminateur\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => <span>{acceptationsLabo.motif}</span>,\r\n      },\r\n      {\r\n        title: \"Tests Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n        render: (honoraires) => (\r\n          <span>\r\n            {honoraires.map((tag) => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  }\r\n\r\n  async acceptationsExaminateur(id) {\r\n    let Response = await getAcceptationExaminateurByAcceptation(id);\r\n    let newDataList = [];\r\n\r\n    for (const element of Response.data) {\r\n      let responseAcc = await getAcceptationTestByAcceptationsExaminateur(\r\n        id,\r\n        element.id\r\n      );\r\n\r\n      let key = { key: responseAcc.data.id };\r\n      let elementone = { ...responseAcc.data, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n    this.setState({\r\n      data: [...newDataList],\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsExaminateur(this.props.record.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        bordered\r\n        dataSource={this.state.data}\r\n        columns={this.columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          hideOnSinglePage: true,\r\n          defaultPageSize: 50,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Examinateur;\r\n","import \"antd/dist/antd.css\";\r\nimport { Table, Tag } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getAcceptationlaboByAcceptation, getAcceptationlaboByAcceptationsLaboratoire} from \"../AcceptationsAPI\";\r\n\r\nclass Laboratoire extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\", testsMedical: [] };\r\n    this.columns = [\r\n      {\r\n        title: \"laboratoire\",\r\n        dataIndex: \"acceptationLaboratoire\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>{acceptationsLabo.laboratoire.nom}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"date analyse\",\r\n        dataIndex: \"acceptationLaboratoire\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>\r\n            {moment(acceptationsLabo.dateAnalyse).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"date réception\",\r\n        dataIndex: \"acceptationLaboratoire\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>\r\n            {moment(acceptationsLabo.dateReception).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"observations\",\r\n        dataIndex: \"acceptationLaboratoire\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => (\r\n          <span>{acceptationsLabo.observations}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Tests Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n        render: (honoraires) => (\r\n          <span>\r\n            {honoraires.map((tag) => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  }\r\n\r\n  async acceptationsLabo(id) {\r\n    let Response = await getAcceptationlaboByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let responseAcc = await getAcceptationlaboByAcceptationsLaboratoire(\r\n        id,\r\n        element.id\r\n      );\r\n\r\n      let key = { key: responseAcc.data.id };\r\n      let elementone = { ...responseAcc.data, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n    this.setState({\r\n      data: [...newDataList],\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsLabo(this.props.record.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        bordered\r\n        dataSource={this.state.data}\r\n        columns={this.columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          hideOnSinglePage: true,\r\n          defaultPageSize: 50,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Laboratoire;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Table, Tag } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  getAcceptationConseilByAcceptation,\r\n  getAcceptationTestByAcceptationsConseil\r\n} from \"../AcceptationsAPI\";\r\n\r\nclass MedecinConseil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\", testsMedical: [] };\r\n    this.columns = [\r\n      {\r\n        title: \"Medecin\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.medecin.nom}</span>\r\n      },\r\n      {\r\n        title: \"Date Expertise\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>\r\n            {moment(acceptationsLabo.dateExpertise).format(\"YYYY-MM-DD\")}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Taux de surprime\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.tauxSurprime}</span>\r\n      },\r\n      {\r\n        title: \"Taux de surmoralité\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.tauxSurmoralite}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Observations\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.observation}</span>\r\n      },\r\n      {\r\n        title: \"Verdict\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.verdict.status}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Observation verdict\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => (\r\n          <span>{acceptationsLabo.observationsVerdict}</span>\r\n        )\r\n      },\r\n      {\r\n        title: \"Motif\",\r\n        dataIndex: \"acceptationConseil\",\r\n        editable: true,\r\n        render: acceptationsLabo => <span>{acceptationsLabo.motif}</span>\r\n      },\r\n      {\r\n        title: \"Test Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n        render: honoraires => (\r\n          <span>\r\n            {honoraires.map(tag => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        )\r\n      }\r\n    ];\r\n  }\r\n\r\n  async acceptationsConseil(id) {\r\n    let Response = await getAcceptationConseilByAcceptation(id);\r\n    let newDataList = [];\r\n\r\n    for (const element of Response.data) {\r\n      let responseAcc = await getAcceptationTestByAcceptationsConseil(\r\n        id,\r\n        element.id\r\n      );\r\n\r\n      let key = { key: responseAcc.data.id };\r\n      let elementone = { ...responseAcc.data, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n\r\n    this.setState({\r\n      data: [...newDataList]\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsConseil(this.props.record.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        bordered\r\n        dataSource={this.state.data}\r\n        columns={this.columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          hideOnSinglePage: true,\r\n          defaultPageSize: 50\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MedecinConseil;\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Table } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getAcceptationReassuranceByAcceptation } from \"../AcceptationsAPI\";\r\n\r\nclass Reassurance extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\" };\r\n    this.columns = [\r\n      {\r\n        title: \"Date réception\",\r\n        dataIndex: \"dateReception\",\r\n        editable: true,\r\n        render: (dateConsultation) => (\r\n          <span>{moment(dateConsultation).format(\"YYYY-MM-DD\")}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Date reassurance\",\r\n        dataIndex: \"dateReassurance\",\r\n        editable: true,\r\n        render: (dateConsultation) => (\r\n          <span>{moment(dateConsultation).format(\"YYYY-MM-DD\")}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"Observation\",\r\n        dataIndex: \"observation\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Taux de Surprime\",\r\n        dataIndex: \"tauxSurprime\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Verdict\",\r\n        dataIndex: \"verdict\",\r\n        editable: true,\r\n        render: (acceptationsLabo) => <span>{acceptationsLabo.status}</span>,\r\n      },\r\n      {\r\n        title: \"Motif\",\r\n        dataIndex: \"motif\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Observation verdict\",\r\n        dataIndex: \"observationVerdict\",\r\n        editable: true,\r\n      },\r\n    ];\r\n  }\r\n\r\n  async acceptationsSpecialiste(id) {\r\n    let Response = await getAcceptationReassuranceByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let key = { key: element.id };\r\n      let elementone = { ...element, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n\r\n    this.setState({\r\n      data: [...newDataList],\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsSpecialiste(this.props.record.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        bordered\r\n        dataSource={this.state.data}\r\n        columns={this.columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          hideOnSinglePage: true,\r\n          defaultPageSize: 50,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Reassurance;\r\n","import \"antd/dist/antd.css\";\r\n\r\nimport { Table } from \"antd\";\r\nimport moment from \"moment\";\r\nimport React, { Component } from \"react\";\r\nimport { getAcceptationSpecialisteByAcceptation } from \"../AcceptationsAPI\";\r\n\r\nclass Specialiste extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\" };\r\n    this.columns = [\r\n      {\r\n        title: \"Specialiste\",\r\n        dataIndex: \"specialiste\",\r\n        editable: true,\r\n        render: (specialiste) => <span>{specialiste.nom}</span>,\r\n      },\r\n      {\r\n        title: \"Specialité\",\r\n        dataIndex: \"specialite\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Nature de test\",\r\n        dataIndex: \"natureTest\",\r\n        editable: true,\r\n      },\r\n      {\r\n        title: \"Date consultation\",\r\n        dataIndex: \"dateConsultation\",\r\n        editable: true,\r\n        render: (dateConsultation) => (\r\n          <span>{moment(dateConsultation).format(\"YYYY-MM-DD\")}</span>\r\n        ),\r\n      },\r\n      {\r\n        title: \"observations\",\r\n        dataIndex: \"observations\",\r\n        editable: true,\r\n      },\r\n    ];\r\n  }\r\n\r\n  async acceptationsSpecialiste(id) {\r\n    let Response = await getAcceptationSpecialisteByAcceptation(id);\r\n    let newDataList = [];\r\n    for (const element of Response.data) {\r\n      let key = { key: element.id };\r\n      let elementone = { ...element, ...key };\r\n      newDataList.push(elementone);\r\n    }\r\n\r\n    this.setState({\r\n      data: [...newDataList],\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.acceptationsSpecialiste(this.props.record.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Table\r\n        bordered\r\n        dataSource={this.state.data}\r\n        columns={this.columns}\r\n        rowClassName=\"editable-row\"\r\n        pagination={{\r\n          hideOnSinglePage: true,\r\n          defaultPageSize: 50,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default Specialiste;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Card, Descriptions } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport ExamensComlementaire from \"./ConsultationTabs/ExamensComlementaire\";\r\nimport Examinateur from \"./ConsultationTabs/Examinateur\";\r\nimport Laboratoire from \"./ConsultationTabs/Laboratoire\";\r\nimport MedecinConseil from \"./ConsultationTabs/MedecinConseil\";\r\nimport Reassurance from \"./ConsultationTabs/Reassurance\";\r\nimport Specialiste from \"./ConsultationTabs/Specialiste\";\r\nimport General from \"./ModificationTabs/General\";\r\n\r\nconst tabListNoTitle = [\r\n  {\r\n    key: \"general\",\r\n    tab: \"Général\"\r\n  },\r\n  {\r\n    key: \"laboratoire\",\r\n    tab: \"Laboratoire\"\r\n  },\r\n  {\r\n    key: \"examinateur\",\r\n    tab: \"Examinateur\"\r\n  },\r\n  {\r\n    key: \"medecinConseil\",\r\n    tab: \"Médecin Conseil\"\r\n  },\r\n  {\r\n    key: \"specialiste\",\r\n    tab: \"Specialiste\"\r\n  },\r\n  {\r\n    key: \"examens\",\r\n    tab: \"Examens Complémentaire\"\r\n  },\r\n  {\r\n    key: \"reassurance\",\r\n    tab: \"Réassurance\"\r\n  }\r\n];\r\n\r\nclass ConsultationAcceptation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      key: \"tab1\",\r\n      noTitleKey: \"general\"\r\n    };\r\n  }\r\n\r\n  contentListNoTitle = {\r\n    general: <General record={this.props.record.location.state.record} />,\r\n    laboratoire: (\r\n      <Laboratoire record={this.props.record.location.state.record} />\r\n    ),\r\n    examinateur: (\r\n      <Examinateur record={this.props.record.location.state.record} />\r\n    ),\r\n    medecinConseil: (\r\n      <MedecinConseil record={this.props.record.location.state.record} />\r\n    ),\r\n    specialiste: (\r\n      <Specialiste record={this.props.record.location.state.record} />\r\n    ),\r\n    examens: (\r\n      <ExamensComlementaire record={this.props.record.location.state.record} />\r\n    ),\r\n    reassurance: (\r\n      <Reassurance record={this.props.record.location.state.record} />\r\n    )\r\n  };\r\n\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Descriptions size=\"default\">\r\n          <Descriptions.Item label=\"Code acceptation\">\r\n            {this.props.record.location.state.record.code}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Nom assuré\">\r\n            {this.props.record.location.state.record.contrat.assure.nom}\r\n          </Descriptions.Item>\r\n          <Descriptions.Item label=\"Prenom assuré\">\r\n            {this.props.record.location.state.record.contrat.assure.prenom}\r\n          </Descriptions.Item>\r\n        </Descriptions>\r\n        <br></br>\r\n\r\n        <Card\r\n          style={{ width: \"100%\" }}\r\n          tabList={tabListNoTitle}\r\n          activeTabKey={this.state.noTitleKey}\r\n          onTabChange={key => {\r\n            this.onTabChange(key, \"noTitleKey\");\r\n          }}\r\n        >\r\n          {this.contentListNoTitle[this.state.noTitleKey]}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ConsultationAcceptation;\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Col, Divider, Form, Input, Row, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getPeriodicite } from \"../../../GestionContrats/ContratsAPI\";\r\nimport { getCategorie, getRisque } from \"../ProduitDecesAPI\";\r\n\r\nconst { Option } = Select;\r\nclass StepOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      risques: [],\r\n      categories: [],\r\n      periodicite: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllRisque();\r\n    this.getAllCategorie();\r\n    this.getAllPeriodicite();\r\n  }\r\n\r\n  async getAllPeriodicite() {\r\n    let response = await getPeriodicite();\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllRisque() {\r\n    let response = await getRisque();\r\n    this.setState({\r\n      risques: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllCategorie() {\r\n    let response = await getCategorie();\r\n    this.setState({\r\n      categories: response.data.content\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 10 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 }\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayout} id=\"formadd\">\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Informations générales</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Risque\" hasFeedback>\r\n                {getFieldDecorator(\"risque\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Choisissez un risque\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.risques.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Catégorie\" hasFeedback>\r\n                {getFieldDecorator(\"categorie\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez une catégorie \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.categories.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Libelle\">\r\n                {getFieldDecorator(\"libelle\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez la libelle\"\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Abréviation\">\r\n                {getFieldDecorator(\"code\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez le code \"\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Périodicité</Divider>\r\n            </Col>\r\n            <Col span={24} offset={2}>\r\n              <Form.Item>\r\n                {\" \"}\r\n                {getFieldDecorator(\"periodicites\", {\r\n                  rules: [{ required: true, message: \"Champs Obligatoire !\" }]\r\n                })(\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"Selectionnez ...\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.periodicite.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.abb}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      libelle: Form.createFormField({\r\n        ...props.libelle,\r\n        value: props.libelle.value\r\n      }),\r\n      code: Form.createFormField({\r\n        ...props.code,\r\n        value: props.code.value\r\n      }),\r\n      risque: Form.createFormField({\r\n        ...props.risque,\r\n        value: props.risque.value\r\n      }),\r\n      categorie: Form.createFormField({\r\n        ...props.categorie,\r\n        value: props.categorie.value\r\n      }),\r\n      periodicites: Form.createFormField({\r\n        ...props.periodicites,\r\n        value: props.periodicites.value\r\n      })\r\n    };\r\n  }\r\n})(StepOne);\r\n","import \"./StepThree.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Form } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nclass NormeAjouter extends Component {\r\n  state = {\r\n    laboratoires: [],\r\n  };\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\nexport default Form.create({ name: \"global_state\" })(NormeAjouter);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Input,\r\n  notification,\r\n  Popconfirm,\r\n  Select,\r\n  Table,\r\n  Tag\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getNormeById, updateNorme } from \"../ProduitDecesAPI\";\r\n\r\nconst { Option } = Select;\r\nconst EditableContext = React.createContext();\r\n\r\nclass EditableCell extends Component {\r\n  getInput = () => {\r\n    if (this.props.inputType === \"Tests Medical\") {\r\n      return (\r\n        <Select mode=\"multiple\" style={{ width: \"100%\" }} labelInValue>\r\n          {this.props.honoraire.map(element => {\r\n            return (\r\n              <Option\r\n                key={element.id}\r\n                value={element.id}\r\n                label={element.libelle}\r\n              >\r\n                {element.libelle}\r\n              </Option>\r\n            );\r\n          })}\r\n        </Select>\r\n      );\r\n    }\r\n    return <Input />;\r\n  };\r\n  renderCell = ({ getFieldDecorator }) => {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      record,\r\n      testsMedical,\r\n      children,\r\n      ...restProps\r\n    } = this.props;\r\n    if (editing && title === \"Tests Medical\") {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(\"honoraires\", {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: testsMedical\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else if (editing) {\r\n      return (\r\n        <td {...restProps}>\r\n          <Form.Item style={{ margin: 0 }}>\r\n            {getFieldDecorator(dataIndex, {\r\n              rules: [\r\n                {\r\n                  required: true,\r\n                  message: `Please Input ${title}!`\r\n                }\r\n              ],\r\n              initialValue: record[dataIndex]\r\n            })(this.getInput())}\r\n          </Form.Item>\r\n        </td>\r\n      );\r\n    } else return <td {...restProps}>{children}</td>;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <EditableContext.Consumer>{this.renderCell}</EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nclass NormeTable extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { data: [], editingKey: \"\", testsMedical: [] };\r\n    this.columns = [\r\n      {\r\n        title: \"Age min\",\r\n        dataIndex: \"ageMin\",\r\n        editable: true\r\n      },\r\n      {\r\n        title: \"Age max\",\r\n        dataIndex: \"ageMax\",\r\n        editable: true\r\n      },\r\n      {\r\n        title: \"Capital min\",\r\n        dataIndex: \"capitalMin\",\r\n        editable: true\r\n      },\r\n      {\r\n        title: \"Capital max\",\r\n        dataIndex: \"capitalMax\",\r\n        editable: true\r\n      },\r\n      {\r\n        title: \"Tests Medical\",\r\n        dataIndex: \"honoraires\",\r\n        editable: true,\r\n        render: honoraires => (\r\n          <span>\r\n            {honoraires.map(tag => {\r\n              let color = \"volcano\";\r\n              return (\r\n                <Tag color={color} key={tag}>\r\n                  {tag.libelle.toUpperCase()}\r\n                </Tag>\r\n              );\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n      {\r\n        title: \"operation\",\r\n        render: (text, record) => {\r\n          const { editingKey } = this.state;\r\n          const editable = this.isEditing(record);\r\n          return editable ? (\r\n            <span>\r\n              <EditableContext.Consumer>\r\n                {form => (\r\n                  <a\r\n                    onClick={() => this.save(form, record.key)}\r\n                    style={{ marginRight: 8 }}\r\n                  >\r\n                    Enregistrer\r\n                  </a>\r\n                )}\r\n              </EditableContext.Consumer>\r\n              <Popconfirm\r\n                title=\"Sure to cancel?\"\r\n                onConfirm={() => this.cancel(record.key)}\r\n              >\r\n                <a>Fermer</a>\r\n              </Popconfirm>\r\n            </span>\r\n          ) : (\r\n            <a\r\n              disabled={editingKey !== \"\"}\r\n              onClick={() => this.edit(record.key)}\r\n            >\r\n              Modifier\r\n            </a>\r\n          );\r\n        }\r\n      }\r\n    ];\r\n  }\r\n\r\n  isEditing = record => record.key === this.state.editingKey;\r\n\r\n  cancel = () => {\r\n    this.setState({ editingKey: \"\" });\r\n  };\r\n\r\n  save(form, key) {\r\n    form.validateFields((error, row) => {\r\n      if (error) {\r\n        return;\r\n      }\r\n      const newData = [...this.state.data];\r\n      const index = newData.findIndex(item => key === item.key);\r\n      if (index > -1) {\r\n        const item = newData[index];\r\n        let honoraire = [];\r\n        let honoraireList = [];\r\n        row.honoraires.forEach(element => {\r\n          honoraire.push({ id: element.key, libelle: element.label });\r\n\r\n          honoraireList.push({ id: element.key });\r\n        });\r\n        delete row.honoraires;\r\n        let myRow = { ...row, honoraires: honoraire };\r\n\r\n        newData.splice(index, 1, {\r\n          ...item,\r\n          ...myRow\r\n        });\r\n        const request = {\r\n          ageMin: row.ageMin,\r\n          ageMax: row.ageMax,\r\n          capitalMin: row.capitalMin,\r\n          capitalMax: row.capitalMax,\r\n          honoraires: honoraireList\r\n        };\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n        this.updateNormes(item.id, request);\r\n      } else {\r\n        newData.push(row);\r\n        this.setState({ data: newData, editingKey: \"\" });\r\n      }\r\n    });\r\n  }\r\n\r\n  updateNormes = (id, Data) => {\r\n    updateNorme(id, Data)\r\n      .then(response => {\r\n        if (response.status === 200) {\r\n          notification.success({\r\n            message: \"Les normes sont  bien modifiées.\"\r\n          });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message || \"Sorry! Something went wrong. Please try again!\"\r\n        });\r\n      });\r\n  };\r\n\r\n  edit(key) {\r\n    this.setState({ editingKey: key });\r\n    const newData = [...this.state.data];\r\n    const index = newData.findIndex(item => key === item.key);\r\n    if (index > -1) {\r\n      const item = newData[index];\r\n      let tests = [];\r\n      item.honoraires.forEach(element => {\r\n        tests.push({\r\n          key: element.id,\r\n          value: element.id,\r\n          label: element.libelle\r\n        });\r\n      });\r\n\r\n      this.setState({ testsMedical: [...tests] });\r\n    }\r\n  }\r\n\r\n  rechercheNorme = id => {\r\n    getNormeById(id)\r\n      .then(response => {\r\n        let newDataList = [];\r\n        response.data.forEach(element => {\r\n          let key = { key: element.id };\r\n          element = { ...element, ...key };\r\n          newDataList.push(element);\r\n        });\r\n        this.setState({\r\n          data: newDataList\r\n        });\r\n      })\r\n      .catch(error => {\r\n        if (error.status === 401) {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              \"Your Username or Password is incorrect. Please try again!\"\r\n          });\r\n        } else {\r\n          notification.error({\r\n            message: \"Takaful\",\r\n            description:\r\n              error.message || \"Sorry! Something went wrong. Please try again!\"\r\n          });\r\n        }\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.record);\r\n    this.rechercheNorme(this.props.record.id);\r\n  }\r\n\r\n  render() {\r\n    const components = {\r\n      body: {\r\n        cell: EditableCell\r\n      }\r\n    };\r\n    const columns = this.columns.map(col => {\r\n      if (!col.editable) {\r\n        return col;\r\n      } else\r\n        return {\r\n          ...col,\r\n          onCell: record => ({\r\n            record,\r\n            inputType: col.title,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            editing: this.isEditing(record),\r\n            honoraire: this.props.honoraire,\r\n            testsMedical: this.state.testsMedical\r\n          })\r\n        };\r\n    });\r\n    return (\r\n      <div>\r\n        <EditableContext.Provider value={this.props.form}>\r\n          <Table\r\n            components={components}\r\n            dataSource={this.state.data}\r\n            columns={columns}\r\n            rowClassName=\"editable-row\"\r\n            pagination={{\r\n              hideOnSinglePage: true,\r\n              defaultPageSize: 50\r\n            }}\r\n          />\r\n        </EditableContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create({ name: \"global_state\" })(NormeTable);\r\n","/* eslint-disable react/prop-types */\r\nimport \"./StepThree.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Divider, Form } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport NormeAjouter from \"./NormeAjouter\";\r\nimport NormeTable from \"./NormeTable\";\r\n\r\nclass StepThree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: []\r\n    };\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Divider orientation=\"left\">Normes de Séléction</Divider>\r\n        <NormeAjouter record={this.props.record}></NormeAjouter>\r\n        <NormeTable\r\n          honoraire={this.props.honoraire}\r\n          record={this.props.record}\r\n        ></NormeTable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Form.create({ name: \"global_state\" })(StepThree);\r\n","import \"antd/dist/antd.css\";\r\nimport { Col, Divider, Form, Input, Row, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { getTypePrestation } from \"../../TypePrestation/PrestationAPI\";\r\nimport { getExclusion, getPieceJoint } from \"../../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nlet exclusFamille = \"Deces\";\r\nconst { Option } = Select;\r\nclass StepTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      exclusions: [],\r\n      typePrestation: [],\r\n      pieceJointe: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllExclusion(exclusFamille);\r\n    this.getAllPiece();\r\n    this.getAllTypePrestation();\r\n  }\r\n\r\n  async getAllExclusion(famille) {\r\n    let response = await getExclusion(famille);\r\n    this.setState({\r\n      exclusions: response.data.content,\r\n    });\r\n  }\r\n\r\n  async getAllTypePrestation() {\r\n    let response = await getTypePrestation();\r\n    this.setState({\r\n      typePrestation: response.data.content,\r\n    });\r\n  }\r\n\r\n  async getAllPiece() {\r\n    let response = await getPieceJoint();\r\n    this.setState({\r\n      pieceJointe: response.data.content,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 10 },\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 },\r\n      },\r\n    };\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayout} id=\"formadd\">\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Informations générales</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Frais de gestion WAKALA\">\r\n                {getFieldDecorator(\"fraisGestion\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs Obligatoire\",\r\n                    },\r\n                  ],\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"TVA frais de gestion\">\r\n                {getFieldDecorator(\"tvaFraisGestion\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs Obligatoire\",\r\n                    },\r\n                  ],\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Frais d'acquisition\">\r\n                {getFieldDecorator(\"fraisAcquisition\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs Obligatoire\",\r\n                    },\r\n                  ],\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"TVA frais d'acquisition'\">\r\n                {getFieldDecorator(\"tvaFraisGestion\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs Obligatoire\",\r\n                    },\r\n                  ],\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={11}>\r\n              <Form.Item label=\"Taux taxe\">\r\n                {getFieldDecorator(\"taxe\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs Obligatoire\",\r\n                    },\r\n                  ],\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Exclusion</Divider>\r\n            </Col>\r\n            <Col span={24} offset={2}>\r\n              <Form.Item>\r\n                {\" \"}\r\n                {getFieldDecorator(\"exclusion\", {\r\n                  rules: [\r\n                    { required: true, message: \"Exclusion is required!\" },\r\n                  ],\r\n                })(\r\n                  <Select mode=\"multiple\" placeholder=\"Selectionnez ...\">\r\n                    {this.state.exclusions.map((element) => {\r\n                      return (\r\n                        <Option value={element.id} label={element.exclusionNom}>\r\n                          {element.exclusionNom}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      fraisGestion: Form.createFormField({\r\n        ...props.fraisGestion,\r\n        value: props.fraisGestion.value,\r\n      }),\r\n      tvaFraisGestion: Form.createFormField({\r\n        ...props.tvaFraisGestion,\r\n        value: props.tvaFraisGestion.value,\r\n      }),\r\n      fraisAcquisition: Form.createFormField({\r\n        ...props.fraisAcquisition,\r\n        value: props.fraisAcquisition.value,\r\n      }),\r\n      tvaFraisAcquisition: Form.createFormField({\r\n        ...props.tvaFraisAcquisition,\r\n        value: props.tvaFraisAcquisition.value,\r\n      }),\r\n      montantAccessoire: Form.createFormField({\r\n        ...props.montantAccessoire,\r\n        value: props.montantAccessoire.value,\r\n      }),\r\n      taxe: Form.createFormField({\r\n        ...props.taxe,\r\n        value: props.taxe.value,\r\n      }),\r\n      exclusion: Form.createFormField({\r\n        ...props.exclusion,\r\n        value: props.exclusion.value,\r\n      }),\r\n    };\r\n  },\r\n})(StepTwo);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Button, Icon, notification, Steps } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport StepOne from \"./StepOne\";\r\nimport StepThree from \"./StepThree\";\r\nimport StepTwo from \"./StepTwo\";\r\nimport { getHonoraire } from \"../../Honoraires/HonorairesAPI\";\r\nimport { updateDecesProduct } from \"../ProduitDecesAPI\";\r\n\r\nconst { Step } = Steps;\r\nlet Hon = {};\r\nclass Modification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(\"this.props.record.location\",this.props.record.location)\r\n    this.state = {\r\n      current: 0,\r\n      honoraire: {},\r\n      \r\n      fields: {\r\n        // ///////////Step0//////////////////////\r\n        risque: { value: this.props.record.location.state.record.risque.id },\r\n        categorie: {\r\n          value: this.props.record.location.state.record.categorie.id\r\n        },\r\n        periodicites: {\r\n          value: this.props.record.location.state.record.periodicites.map(\r\n            element => {\r\n              return element.id;\r\n            }\r\n          )\r\n        },\r\n        ///////////Step1///////////////////////\r\n\r\n        libelle: { value: this.props.record.location.state.record.libelle },\r\n        code: { value: this.props.record.location.state.record.code },\r\n        fraisGestion: {\r\n          value: this.props.record.location.state.record.fraisGestion\r\n        },\r\n        fraisAcquisition: {\r\n          value: this.props.record.location.state.record.fraisAcquisition\r\n        },\r\n        tvaFraisAcquisition: {\r\n          value: this.props.record.location.state.record.tvaFraisAcquisition\r\n        },\r\n        tvaFraisGestion: {\r\n          value: this.props.record.location.state.record.tvaFraisGestion\r\n        },\r\n        montantAccessoire: {\r\n          value: this.props.record.location.state.record.montantAccessoire\r\n        },\r\n        taxe: { value: this.props.record.location.state.record.taxe },\r\n        exclusion: {\r\n          value: this.props.record.location.state.record.exclusions.map(\r\n            element => {\r\n              return element.id;\r\n            }\r\n          )\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllHonoraire();\r\n  }\r\n\r\n  async getAllHonoraire() {\r\n    let response = await getHonoraire();\r\n    Hon = response.data.content;\r\n  }\r\n\r\n  next() {\r\n    const current = this.state.current + 1;\r\n    this.setState({ current });\r\n  }\r\n\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n  }\r\n\r\n  handleFormChange = changedFields => {\r\n    this.setState(({ fields }) => ({\r\n      fields: { ...fields, ...changedFields }\r\n    }));\r\n  };\r\n\r\n  handleSubmit() {\r\n    if (this.state.current === 2) {\r\n      let exclus = [];\r\n      this.state.fields.exclusion.value.forEach(element => {\r\n        exclus.push({ id: element });\r\n      });\r\n\r\n      let periodicit = [];\r\n      this.state.fields.periodicites.value.forEach(element => {\r\n        periodicit.push({ id: element });\r\n      });\r\n\r\n      let productRequest = {\r\n        code: this.state.fields.code.value,\r\n        libelle: this.state.fields.libelle.value,\r\n        fraisGestion: this.state.fields.fraisGestion.value,\r\n        fraisAcquisition: this.state.fields.fraisAcquisition.value,\r\n        tvaFraisGestion: this.state.fields.tvaFraisGestion.value,\r\n        tvaFraisAcquisition: this.state.fields.tvaFraisAcquisition.value,\r\n        exclusions: exclus,\r\n        periodicites: periodicit,\r\n        risqueId: this.state.fields.risque.value,\r\n        categorieId: this.state.fields.categorie.value,\r\n        taxe: this.state.fields.taxe.value,\r\n        montantAccessoire: this.state.fields.montantAccessoire.value\r\n      };\r\n      updateDecesProduct(\r\n        this.props.record.location.state.record.id,\r\n        productRequest\r\n      )\r\n        .then(response => {\r\n          notification.success({\r\n            message: \"TAKAFUL\",\r\n            description: \"La est bien faite\"\r\n          });\r\n          this.props.record.history.push(\"/consultproduitdeces\");\r\n        })\r\n        .catch(error => {\r\n          notification.error({\r\n            message: \"TAKAFUL\",\r\n            description:\r\n              error.message || \"Sorry! Something went wrong. Please try again!\"\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    console.log(\"this.props.record.location.state.record\",this.props.record.location.state.record)\r\n    const { current, fields } = this.state;\r\n    const steps = [\r\n      {\r\n        title: \"Etape 1\",\r\n        content: (\r\n          <StepOne\r\n            record={this.props.record.location.state.record}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Informations\"\r\n      },\r\n      {\r\n        title: \"Etape 2\",\r\n        content: (\r\n          <StepTwo\r\n            record={this.props.record.location.state.record}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Informations générales\"\r\n      },\r\n      {\r\n        title: \"Etape 3\",\r\n        content: (\r\n          <StepThree\r\n            record={this.props.record.location.state.record}\r\n            honoraire={Hon}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Paramètres globaux\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <Steps current={current}>\r\n          {steps.map(item => (\r\n            <Step\r\n              key={item.title}\r\n              title={item.title}\r\n              description={item.description}\r\n            />\r\n          ))}\r\n        </Steps>\r\n        <div className=\"steps-content-style\">{steps[current].content}</div>\r\n        <div className=\"steps-action\">\r\n          {current < steps.length - 1 && (\r\n            <Button type=\"primary\" onClick={() => this.next()}>\r\n              Suivant\r\n              <Icon type=\"arrow-right\" />\r\n            </Button>\r\n          )}\r\n          {current === steps.length - 1 && (\r\n            <Button type=\"primary\" onClick={() => this.handleSubmit()}>\r\n              <Icon type=\"save\" />\r\n              Enregistrer\r\n            </Button>\r\n          )}\r\n          {current > 0 && (\r\n            <Button style={{ marginLeft: 8 }} onClick={() => this.prev()}>\r\n              <Icon type=\"arrow-left\" />\r\n              Précédent\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Modification;\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  notification,\r\n  Button,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Input,\r\n  Select,\r\n  Icon,\r\n  Modal,\r\n  Popconfirm,\r\n  Checkbox,\r\n  Table\r\n} from \"antd\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport { getAllPartenaire } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport { addProduitMrb } from \"./ProduitMRBAPI\";\r\nimport { getExclusion } from \"../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nimport { getPeriodicite } from \"../../GestionContrats/ContratsAPI\";\r\nconst { Option } = Select;\r\nlet key = 0;\r\nlet exclusFamille = \"MRB\";\r\nclass AjoutProduit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0,\r\n      periodicite: [],\r\n      exclusions: [],\r\n      tarifications: [],\r\n      data: [],\r\n      visible: false,\r\n      partenaire: []\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Nature du bien\",\r\n        dataIndex: \"natureBien\",\r\n        key: \"natureBien\"\r\n      },\r\n      {\r\n        title: \"Age min\",\r\n        dataIndex: \"ageMin\",\r\n        key: \"ageMin\"\r\n      },\r\n      {\r\n        title: \"Age max\",\r\n        dataIndex: \"ageMax\",\r\n        key: \"ageMax\"\r\n      },\r\n      {\r\n        title: \"Valeur min\",\r\n        dataIndex: \"valeurMin\",\r\n        key: \"valeurMin\"\r\n      },\r\n      {\r\n        title: \"Valeur max\",\r\n        dataIndex: \"valeurMax\",\r\n        key: \"valeurMax\"\r\n      },\r\n      {\r\n        title: \"Montant de Contribution\",\r\n        dataIndex: \"tauxContribution\",\r\n        key: \"tauxContribution\"\r\n      },\r\n      {\r\n        title: \"Opération\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) =>\r\n          this.state.data.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"etes-vous sur?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <a href=\"#top\">\r\n                <Icon type=\"delete\" theme=\"twoTone\" />\r\n              </a>\r\n            </Popconfirm>\r\n          ) : null\r\n      }\r\n    ];\r\n  }\r\n\r\n  handleDelete = keyMrb => {\r\n    const data = [...this.state.data];\r\n    this.setState({ data: data.filter(item => item.keyMrb !== keyMrb) });\r\n  };\r\n\r\n  async getAllPeriodicite() {\r\n    let response = await getPeriodicite();\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllPeriodicite();\r\n    this.getAllExclusion(exclusFamille);\r\n    this.getAllPartenaires();\r\n  }\r\n\r\n  async ajouterProduitMrb(values) {\r\n    try {\r\n      let response = await addProduitMrb(values);\r\n\r\n      if (response.status === 200) {\r\n        notification.success({\r\n          message: \"l'ajout du produit est bien fait\"\r\n        });\r\n      }\r\n      this.props.record.history.push(\"/ProduitMrb\");\r\n    } catch (error) {\r\n      notification.error({\r\n        message: \"Takaful\",\r\n        description:\r\n          error.message ||\r\n          \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\"\r\n      });\r\n    }\r\n  }\r\n\r\n  async getAllPartenaires() {\r\n    let response = await getAllPartenaire();\r\n    this.setState({\r\n      partenaire: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllExclusion(famille) {\r\n    let response = await getExclusion(famille);\r\n    this.setState({\r\n      exclusions: response.data.content\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      let request = {\r\n        key: key,\r\n        natureBien: values.natureBien,\r\n        ageMax: values.ageMax,\r\n        ageMin: values.ageMin,\r\n        valeurMax: values.valeurMax,\r\n        valeurMin: values.valeurMin,\r\n        tauxContribution: values.tauxContribution\r\n      };\r\n      this.state.data.push(request);\r\n      key = key + 1;\r\n    });\r\n\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.form.setFieldsValue({\r\n      natureBien: \"\",\r\n      ageMax: \"\",\r\n      ageMin: \"\",\r\n      valeurMax: \"\",\r\n      valeurMin: \"\",\r\n      tauxContribution: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      let exclus = [];\r\n      values.exclusion.forEach(element => {\r\n        exclus.push({ id: element });\r\n      });\r\n      values.exclusion = [...exclus];\r\n      let periodicite = [];\r\n      values.periodicites.forEach(element => {\r\n        periodicite.push({ id: element });\r\n      });\r\n      values.periodicites = [...periodicite];\r\n\r\n      let data2 = [];\r\n\r\n      for (let index = 0; index < this.state.data.length; index++) {\r\n        let data = {\r\n          ageMax: this.state.data[index].ageMax,\r\n          ageMin: this.state.data[index].ageMin,\r\n          valeurMax: this.state.data[index].valeurMax,\r\n          valeurMin: this.state.data[index].valeurMin,\r\n          natureBienAssure: this.state.data[index].natureBien,\r\n          tauxContribution: this.state.data[index].tauxContribution\r\n        };\r\n        data2.push(data);\r\n      }\r\n\r\n      let requestModel = {\r\n        code: values.code,\r\n        libelle: values.libelle,\r\n        natureParticipant: values.natureSouscripteur,\r\n        natureAssure: values.natureAssure,\r\n        assureDiffParticipant: values.assureDiffParticipant,\r\n        natureBienAssure: values.natureBien,\r\n        franchiseIncendie: values.franchiseIncendie,\r\n        franchiseBrisGlace: values.franchiseBrisGlace,\r\n        franchiseDegatEaux: values.franchiseDegatEaux,\r\n        franchiseCatastropheNaturelles: values.franchiseCatastrophesNaturelles,\r\n        tauxTaxe: values.tauxTaxe,\r\n        montantMaximumGarantie: values.montantMaximum,\r\n        fraisGestion: values.fraisGestion,\r\n        tvaFraisGestion: values.tvaFraisGestion,\r\n        delaiPrescription: values.delaiEnAttente,\r\n        delaiPrescriptionSansSouscription: values.delaiSansSouscription,\r\n        exclusionsProduit: values.exclusion,\r\n        periodicitesMrb: values.periodicites,\r\n        partenaireId: values.intermediaire,\r\n        tarificationsMrb: data2\r\n      };\r\n\r\n      this.ajouterProduitMrb(requestModel);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 10 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 }\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Nouveau produit MRB\" />\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Ajout de tarification\"\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          afterClose={this.handleClose}\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCancel}\r\n              className=\"not-rounded\"\r\n            >\r\n              Annuler\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={this.handleOk}\r\n              className=\"not-rounded\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout} hideRequiredMark>\r\n            <Col>\r\n              <Form.Item label=\"Nature du bien \">\r\n                {getFieldDecorator(\"natureBien\")(\r\n                  <Select placeholder=\"Séléctionnez...\">\r\n                    <Option value=\"Appartement\">Appartement</Option>\r\n                    <Option value=\"Maison\">Maison</Option>\r\n                    <Option value=\"Villa\">Villa</Option>\r\n                    <Option value=\"Bâtiment\">Bâtiment</Option>\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Age du bien\" required={false}>\r\n                {getFieldDecorator(\"ageMin\", {\r\n                  validateTrigger: [\"onChange\", \"onBlur\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"Ans\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Min\"\r\n                  />\r\n                )}\r\n                {getFieldDecorator(\"ageMax\", {\r\n                  validateTrigger: [\"onChange\", \"onBlur\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"Ans\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Max\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Valeur du bien\" required={false}>\r\n                {getFieldDecorator(\"valeurMin\", {\r\n                  validateTrigger: [\"onChange\", \"onBlur\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"Dhs\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Min\"\r\n                  />\r\n                )}\r\n                {getFieldDecorator(\"valeurMax\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"Dhs\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Max\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Montant de la contribution\" required={false}>\r\n                {getFieldDecorator(\"tauxContribution\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    className=\"not-rounded\"\r\n                    addonAfter=\"Dhs\"\r\n                    placeholder=\"Montant de la contribution\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n        <div style={{ background: \"#ECECEC\", padding: \"20px\" }}>\r\n          <Form id=\"formadd\" {...formItemLayout}>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Card\r\n                  title=\"Informations Générales\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Form.Item label=\"Libelle\">\r\n                    {getFieldDecorator(\"libelle\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez la libelle\"\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Abréviation\">\r\n                    {getFieldDecorator(\"code\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Intermédiaire\">\r\n                    {getFieldDecorator(\"intermediaire\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"Selectionnez ...\"\r\n                        onChange={this.handleChange}\r\n                      >\r\n                        {this.state.partenaire.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.raisonSocial}\r\n                            >\r\n                              {element.raisonSocial}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Periodicité\">\r\n                    {getFieldDecorator(\"periodicites\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(\r\n                      <Select\r\n                        mode=\"multiple\"\r\n                        placeholder=\"Selectionnez ...\"\r\n                        onChange={this.handleChange}\r\n                      >\r\n                        {this.state.periodicite.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.abb}\r\n                            >\r\n                              {element.libelle}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Exclusion\">\r\n                    {getFieldDecorator(\"exclusion\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(\r\n                      <Select\r\n                        mode=\"multiple\"\r\n                        placeholder=\"Selectionnez ...\"\r\n                        onChange={this.handleChange}\r\n                      >\r\n                        {this.state.exclusions.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.exclusionNom}\r\n                            >\r\n                              {element.exclusionNom}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </Card>\r\n                <Card\r\n                  title=\"Franchise\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"franchiseIncendie\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Checkbox>Franchise incendie</Checkbox>)}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"franchiseBrisGlace\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(<Checkbox>Franchise bris de glace</Checkbox>)}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"franchiseDegatEaux\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(<Checkbox>Franchise dégats des eaux</Checkbox>)}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"franchiseCatastrophesNaturelles\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(<Checkbox>Franchise catastrophes naturelles</Checkbox>)}\r\n                  </Form.Item>\r\n                </Card>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Card\r\n                  title=\"Paramètres globaux\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Form.Item label=\"Frais de gestion Wakala\">\r\n                    {getFieldDecorator(\"fraisGestion\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"TVA frais de gestion\">\r\n                    {getFieldDecorator(\"tvaFraisGestion\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Montant max de garantie\">\r\n                    {getFieldDecorator(\"montantMaximum\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input addonAfter=\"DH\" />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Taux taxe\">\r\n                    {getFieldDecorator(\"tauxTaxe\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input addonAfter=\"%\" />)}\r\n                  </Form.Item>\r\n                  <label>\r\n                    <Form.Item label=\" Délai de prescription de l’offre EART\" />\r\n                  </label>\r\n                  <Form.Item label=\"En l’attente du retour client\">\r\n                    {getFieldDecorator(\"delaiEnAttente\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input addonAfter=\"Jours\" />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Client sans souscription\">\r\n                    {getFieldDecorator(\"delaiSansSouscription\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input addonAfter=\"Jours\" />)}\r\n                  </Form.Item>\r\n                </Card>\r\n                <Card\r\n                  title=\"Souscripteur/ Assuré\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Form.Item>\r\n                    {\" \"}\r\n                    {getFieldDecorator(\"assureDiffParticipant\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(\r\n                      <Checkbox defaultChecked={false}>\r\n                        Assuré différent du participant\r\n                      </Checkbox>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Nature du participant/souscripteur\">\r\n                    {getFieldDecorator(\"natureSouscripteur\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Nature de l'assuré\">\r\n                    {getFieldDecorator(\"natureAssure\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col span={24}>\r\n                <Card\r\n                  title=\"Tarification\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Table\r\n                    rowClassName=\"editable-row\"\r\n                    columns={this.columns}\r\n                    dataSource={this.state.data}\r\n                  />\r\n                  <Button\r\n                    type=\"primary\"\r\n                    className=\"not-rounded\"\r\n                    onClick={this.showModal}\r\n                    style={{ marginTop: 8 }}\r\n                  >\r\n                    <Icon type=\"plus\" />\r\n                    Ajouter\r\n                  </Button>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"not-rounded\"\r\n                style={{ width: \"25%\", marginTop: 40 }}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Enregistrer\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(AjoutProduit);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Button,\r\n  Card,\r\n  Checkbox,\r\n  Col,\r\n  Form,\r\n  Icon,\r\n  Input,\r\n  Modal,\r\n  Popconfirm,\r\n  Row,\r\n  Select\r\n} from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport { getAllPartenaire } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport { updateProductMrb } from \"./ProduitMRBAPI\";\r\nimport { getExclusion } from \"../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nimport { getPeriodicite } from \"../../GestionContrats/ContratsAPI\";\r\nconst { Option } = Select;\r\nlet key = 0;\r\nlet exclusFamille = \"MRB\";\r\nclass ModifieProduitMRB extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0,\r\n      periodicite: [],\r\n      exclusions: [],\r\n      tarifications: [],\r\n      data: [],\r\n      visible: false,\r\n      partenaire: [],\r\n      periodicites: {\r\n        value: this.props.record.location.state.record.periodicitesMrb.map(\r\n          element => {\r\n            return element.id;\r\n          }\r\n        )\r\n      },\r\n      exclusion: {\r\n        value: this.props.record.location.state.record.exclusionsProduit.map(\r\n          element => {\r\n            return element.id;\r\n          }\r\n        )\r\n      }\r\n    };\r\n\r\n    this.columns = [\r\n      {\r\n        title: \"Nature du bien\",\r\n        dataIndex: \"natureBien\",\r\n        key: \"natureBien\"\r\n      },\r\n      {\r\n        title: \"Age min\",\r\n        dataIndex: \"ageMin\",\r\n        key: \"ageMin\"\r\n      },\r\n      {\r\n        title: \"Age max\",\r\n        dataIndex: \"ageMax\",\r\n        key: \"ageMax\"\r\n      },\r\n      {\r\n        title: \"Valeur min\",\r\n        dataIndex: \"valeurMin\",\r\n        key: \"valeurMin\"\r\n      },\r\n      {\r\n        title: \"Valeur max\",\r\n        dataIndex: \"valeurMax\",\r\n        key: \"valeurMax\"\r\n      },\r\n      {\r\n        title: \"Taux Contribution\",\r\n        dataIndex: \"tauxContribution\",\r\n        key: \"tauxContribution\"\r\n      },\r\n      {\r\n        title: \"Opération\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) =>\r\n          this.state.data.length >= 1 ? (\r\n            <Popconfirm\r\n              title=\"etes-vous sur?\"\r\n              onConfirm={() => this.handleDelete(record.key)}\r\n            >\r\n              <a href=\"#top\">\r\n                <Icon type=\"delete\" theme=\"twoTone\" />\r\n              </a>\r\n            </Popconfirm>\r\n          ) : null\r\n      }\r\n    ];\r\n  }\r\n\r\n  handleDelete = keyMrb => {\r\n    const data = [...this.state.data];\r\n    this.setState({ data: data.filter(item => item.keyMrb !== keyMrb) });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getAllPeriodicite();\r\n    this.getAllExclusion(exclusFamille);\r\n    this.getAllPartenaires();\r\n    let period = [];\r\n    this.props.record.location.state.record.periodicitesMrb.forEach(element => {\r\n      period.push({ id: element });\r\n    });\r\n    this.props.record.location.state.record.periodicitesMrb = [...period];\r\n    this.props.form.setFieldsValue({\r\n      libelle: this.props.record.location.state.record.libelle,\r\n      code: this.props.record.location.state.record.code,\r\n      natureSouscripteur: this.props.record.location.state.record\r\n        .natureParticipant,\r\n      natureAssure: this.props.record.location.state.record.natureAssure,\r\n      assureDiffParticipant: this.props.record.location.state.record\r\n        .assureDiffParticipant,\r\n      natureBienAssure: this.props.record.location.state.record.natureBien,\r\n      franchiseIncendie: this.props.record.location.state.record\r\n        .franchiseIncendie,\r\n      franchiseBrisGlace: this.props.record.location.state.record\r\n        .franchiseBrisGlace,\r\n      franchiseDegatEaux: this.props.record.location.state.record\r\n        .franchiseDegatEaux,\r\n      franchiseCatastrophesNaturelles: this.props.record.location.state.record\r\n        .franchiseCatastropheNaturelles,\r\n      tauxTaxe: this.props.record.location.state.record.tauxTaxe,\r\n      montantMaximum: this.props.record.location.state.record\r\n        .montantMaximumGarantie,\r\n      fraisGestion: this.props.record.location.state.record.fraisGestion,\r\n      tvaFraisGestion: this.props.record.location.state.record.tvaFraisGestion,\r\n      delaiEnAttente: this.props.record.location.state.record.delaiPrescription,\r\n      delaiSansSouscription: this.props.record.location.state.record\r\n        .delaiPrescriptionSansSouscription,\r\n      intermediaire: this.props.record.location.state.record.partenaire.id,\r\n      periodicites: this.state.periodicites.value,\r\n      exclusion: this.state.exclusion.value\r\n    });\r\n  }\r\n\r\n  async getAllPeriodicite() {\r\n    let response = await getPeriodicite();\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n\r\n  async getAllPartenaires() {\r\n    let response = await getAllPartenaire();\r\n    this.setState({\r\n      partenaire: response.data.content\r\n    });\r\n  }\r\n\r\n  async updatedProductMrb(id, body) {\r\n    await updateProductMrb(id, body);\r\n    this.props.record.history.push(\"/ProduitMrb\");\r\n  }\r\n\r\n  async getAllExclusion(famille) {\r\n    let response = await getExclusion(famille);\r\n    this.setState({\r\n      exclusions: response.data.content\r\n    });\r\n  }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true\r\n    });\r\n  };\r\n\r\n  handleOk = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      let request = {\r\n        key: key,\r\n        natureBien: values.natureBien,\r\n        ageMax: values.ageMax,\r\n        ageMin: values.ageMin,\r\n        valeurMax: values.valeurMax,\r\n        valeurMin: values.valeurMin,\r\n        tauxContribution: values.tauxContribution\r\n      };\r\n      this.state.data.push(request);\r\n      key = key + 1;\r\n    });\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleCancel = () => {\r\n    this.setState({ visible: false });\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.props.form.setFieldsValue({\r\n      natureBien: \"\",\r\n      ageMax: \"\",\r\n      ageMin: \"\",\r\n      valeurMax: \"\",\r\n      valeurMin: \"\",\r\n      tauxContribution: \"\"\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      let exclus = [];\r\n      values.exclusion.forEach(element => {\r\n        exclus.push({ id: element });\r\n      });\r\n      values.exclusion = [...exclus];\r\n      let periodicite = [];\r\n      values.periodicites.forEach(element => {\r\n        periodicite.push({ id: element });\r\n      });\r\n      values.periodicites = [...periodicite];\r\n      let requestModel = {\r\n        code: values.code,\r\n        libelle: values.libelle,\r\n        natureParticipant: values.natureSouscripteur,\r\n        natureAssure: values.natureAssure,\r\n        assureDiffParticipant: values.assureDiffParticipant,\r\n        franchiseIncendie: values.franchiseIncendie,\r\n        franchiseBrisGlace: values.franchiseBrisGlace,\r\n        franchiseDegatEaux: values.franchiseDegatEaux,\r\n        franchiseCatastropheNaturelles: values.franchiseCatastrophesNaturelles,\r\n        tauxTaxe: values.tauxTaxe,\r\n        montantMaximumGarantie: values.montantMaximum,\r\n        fraisGestion: values.fraisGestion,\r\n        tvaFraisGestion: values.tvaFraisGestion,\r\n        delaiPrescription: values.delaiEnAttente,\r\n        delaiPrescriptionSansSouscription: values.delaiSansSouscription,\r\n        exclusionsProduit: values.exclusion,\r\n        periodicitesMrb: values.periodicites,\r\n        partenaireId: values.intermediaire\r\n      };\r\n      this.updatedProductMrb(\r\n        this.props.record.location.state.record.id,\r\n        requestModel\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const { visible } = this.state;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 10 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 12 }\r\n      }\r\n    };\r\n    return (\r\n      <div>\r\n        <ComponentTitle title=\"Modification du produit MRB\" />\r\n        <Modal\r\n          visible={visible}\r\n          title=\"Ajout de tarification\"\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          afterClose={this.handleClose}\r\n          footer={[\r\n            <Button\r\n              key=\"back\"\r\n              onClick={this.handleCancel}\r\n              className=\"not-rounded\"\r\n            >\r\n              Annuler\r\n            </Button>,\r\n            <Button\r\n              key=\"submit\"\r\n              type=\"primary\"\r\n              onClick={this.handleOk}\r\n              className=\"not-rounded\"\r\n            >\r\n              Ajouter\r\n            </Button>\r\n          ]}\r\n        >\r\n          <Form {...formItemLayout} hideRequiredMark>\r\n            <Col>\r\n              <Form.Item label=\"Nature du bien \">\r\n                {getFieldDecorator(\"natureBien\")(\r\n                  <Select placeholder=\"Séléctionnez...\">\r\n                    <Option value=\"Appartement\">Appartement</Option>\r\n                    <Option value=\"Maison\">Maison</Option>\r\n                    <Option value=\"Villa\">Villa</Option>\r\n                    <Option value=\"Bâtiment\">Bâtiment</Option>\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Age du bien\" required={false}>\r\n                {getFieldDecorator(\"ageMin\", {\r\n                  validateTrigger: [\"onChange\", \"onBlur\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"Ans\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Min\"\r\n                  />\r\n                )}\r\n                {getFieldDecorator(\"ageMax\", {\r\n                  validateTrigger: [\"onChange\", \"onBlur\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"Ans\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Max\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Valeur du bien\" required={false}>\r\n                {getFieldDecorator(\"valeurMin\", {\r\n                  validateTrigger: [\"onChange\", \"onBlur\"],\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"Dhs\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Min\"\r\n                  />\r\n                )}\r\n                {getFieldDecorator(\"valeurMax\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    addonAfter=\"Dhs\"\r\n                    className=\"not-rounded\"\r\n                    placeholder=\"Max\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n              <Form.Item label=\"Taux de la contribution\" required={false}>\r\n                {getFieldDecorator(\"tauxContribution\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs obligatoire.\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Input\r\n                    className=\"not-rounded\"\r\n                    addonAfter=\"%\"\r\n                    placeholder=\"Taux de la contribution\"\r\n                  />\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Modal>\r\n        <div style={{ background: \"#ECECEC\", padding: \"20px\" }}>\r\n          <Form id=\"formadd\" {...formItemLayout}>\r\n            <Row gutter={12}>\r\n              <Col span={12}>\r\n                <Card\r\n                  title=\"Informations Générales\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Form.Item label=\"Libelle\">\r\n                    {getFieldDecorator(\"libelle\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez la libelle\"\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Abréviation\">\r\n                    {getFieldDecorator(\"code\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Intermédiaire\">\r\n                    {getFieldDecorator(\"intermediaire\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(\r\n                      <Select placeholder=\"Selectionnez ...\">\r\n                        {this.state.partenaire.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.raisonSocial}\r\n                            >\r\n                              {element.raisonSocial}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Periodicité\">\r\n                    {getFieldDecorator(\"periodicites\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(\r\n                      <Select mode=\"multiple\" placeholder=\"Selectionnez ...\">\r\n                        {this.state.periodicite.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.abb}\r\n                            >\r\n                              {element.libelle}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Exclusion\">\r\n                    {getFieldDecorator(\"exclusion\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(\r\n                      <Select mode=\"multiple\" placeholder=\"Selectionnez ...\">\r\n                        {this.state.exclusions.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.exclusionNom}\r\n                            >\r\n                              {element.exclusionNom}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                </Card>\r\n                <Card\r\n                  title=\"Franchise\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"franchiseIncendie\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Checkbox\r\n                        defaultChecked={\r\n                          this.props.record.location.state.record\r\n                            .franchiseIncendie\r\n                        }\r\n                      >\r\n                        Franchise incendie\r\n                      </Checkbox>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"franchiseBrisGlace\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Checkbox\r\n                        defaultChecked={\r\n                          this.props.record.location.state.record\r\n                            .franchiseBrisGlace\r\n                        }\r\n                      >\r\n                        Franchise bris de glace\r\n                      </Checkbox>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"franchiseDegatEaux\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Checkbox\r\n                        defaultChecked={\r\n                          this.props.record.location.state.record\r\n                            .franchiseDegatEaux\r\n                        }\r\n                      >\r\n                        Franchise dégats des eaux\r\n                      </Checkbox>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    {getFieldDecorator(\"franchiseCatastrophesNaturelles\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Checkbox\r\n                        defaultChecked={\r\n                          this.props.record.location.state.record\r\n                            .franchiseCatastropheNaturelles\r\n                        }\r\n                      >\r\n                        Franchise catastrophes naturelles\r\n                      </Checkbox>\r\n                    )}\r\n                  </Form.Item>\r\n                </Card>\r\n              </Col>\r\n              <Col span={12}>\r\n                <Card\r\n                  title=\"Paramètres globaux\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Form.Item label=\"Frais de gestion Wakala\">\r\n                    {getFieldDecorator(\"fraisGestion\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"TVA frais de gestion\">\r\n                    {getFieldDecorator(\"tvaFraisGestion\", {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          message: \"entrez le code \"\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Montant max de garantie\">\r\n                    {getFieldDecorator(\"montantMaximum\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Taux taxe\">\r\n                    {getFieldDecorator(\"tauxTaxe\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <label>\r\n                    <Form.Item label=\" Délai de prescription de l’offre EART\" />\r\n                  </label>\r\n                  <Form.Item label=\"En l’attente du retour client\">\r\n                    {getFieldDecorator(\"delaiEnAttente\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Client sans souscription\">\r\n                    {getFieldDecorator(\"delaiSansSouscription\", {\r\n                      rules: [\r\n                        {\r\n                          required: true\r\n                        }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                </Card>\r\n                <Card\r\n                  title=\"Souscripteur/ Assuré\"\r\n                  bordered={false}\r\n                  style={{ marginTop: 16 }}\r\n                >\r\n                  <Form.Item>\r\n                    {\" \"}\r\n                    {getFieldDecorator(\"assureDiffParticipant\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(\r\n                      <Checkbox\r\n                        defaultChecked={\r\n                          this.props.record.location.state.record.fraisGestion\r\n                        }\r\n                      >\r\n                        Assuré différent du participant\r\n                      </Checkbox>\r\n                    )}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Nature du participant/souscripteur\">\r\n                    {getFieldDecorator(\"natureSouscripteur\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                  <Form.Item label=\"Nature de l'assuré\">\r\n                    {getFieldDecorator(\"natureAssure\", {\r\n                      rules: [\r\n                        { required: true, message: \"Champs Obligatoire !\" }\r\n                      ]\r\n                    })(<Input />)}\r\n                  </Form.Item>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n            <Form.Item>\r\n              <Button\r\n                type=\"primary\"\r\n                htmlType=\"submit\"\r\n                className=\"not-rounded\"\r\n                style={{ marginLeft: \"970px\", width: \"25%\", marginTop: 40 }}\r\n                onClick={this.handleSubmit}\r\n              >\r\n                Enregistrer\r\n              </Button>\r\n            </Form.Item>\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(ModifieProduitMRB);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  DatePicker,\r\n  Input,\r\n  Typography,\r\n  Button,\r\n  Table,\r\n  Icon,\r\n  AutoComplete,\r\n  notification\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { connectedUserContext } from \"../../../app/App\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport { getAllPartenaire } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport {\r\n  getDecesProduit,\r\n  getTarification\r\n} from \"../../Parametrage/ProduitDeces/ProduitDecesAPI\";\r\nimport { getallperson } from \"../../Participants/ParticipantAPI\";\r\nimport { getPeriodicite } from \"../../GestionContrats/ContratsAPI\";\r\nimport { jasperFile } from \"../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\n\r\nconst { Title } = Typography;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nconst currentDate = moment(moment(), dateFormat).add(1, \"days\");\r\nconst { Option } = Select;\r\nlet pointVente = \"\";\r\nlet dateNaissance = new Date();\r\n\r\nconst columnsSimulation = [\r\n  {\r\n    title: \"MONTANT DE PARTICIPATION HT (DH)\",\r\n    dataIndex: \"montantCotisation\"\r\n  },\r\n  {\r\n    title: \"Montant de taxe (DH)\",\r\n    dataIndex: \"taxe\"\r\n  },\r\n  {\r\n    title: \"Montant de participation TTC (DH)\",\r\n    dataIndex: \"total\"\r\n  },\r\n  {\r\n    title: \"Prorata HT (DH)\",\r\n    dataIndex: \"Prorata\"\r\n  },\r\n  {\r\n    title: \"Montant taxe 10% au prorata (DH)\",\r\n    dataIndex: \"taxeProrata\"\r\n  },\r\n  {\r\n    title: \"Prorata TTC (DH)\",\r\n    dataIndex: \"ProrataTTC\"\r\n  }\r\n];\r\n\r\nclass Simulation extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dateNaissance: null,\r\n      dureeContrat: 0,\r\n      dateEcheance: null,\r\n      dateEffet: currentDate,\r\n      Partenaires: [],\r\n      produits: [],\r\n      produit: {},\r\n      usedProducts: [],\r\n      OptionsAssurance: [],\r\n      tarification: {},\r\n      capital: null,\r\n      option: null,\r\n      differe: null,\r\n      tauxSurprime: null,\r\n      montantSurprime: null,\r\n      montantCotisation: 0,\r\n      cotisationTotale: 0,\r\n      tauxTaxe: null,\r\n      prorata: 0,\r\n      encours: null,\r\n      cumul: 0,\r\n      dataSimulation: [],\r\n      fraisAcquisitionTTC: null,\r\n      fraisGestionTTC: null,\r\n      contributionPure: null,\r\n      tauxFrais: null,\r\n      tauxGestion: null,\r\n      tvaFrais: null,\r\n      tvaGestion: null,\r\n      test: null,\r\n      cin: null,\r\n      nom: null,\r\n      booleen: false,\r\n      prenom: null,\r\n      updated: false,\r\n      periodicite: [],\r\n      period: \"\",\r\n      personlistForAuto: [],\r\n      personlist: [],\r\n      souscripteur: {},\r\n      selectedCinSouscripteur: []\r\n    };\r\n  }\r\n\r\n  async getproprties() {\r\n    let personslist = await getallperson();\r\n    let helpArray = [];\r\n\r\n    personslist.data.content.forEach(element => {\r\n      const object = element.cin;\r\n      helpArray.push(object);\r\n    });\r\n\r\n    this.setState({\r\n      personlist: [...personslist.data.content],\r\n      personlistForAuto: [...helpArray]\r\n    });\r\n  }\r\n  searchPersonnePhysique = value => {\r\n    const dataSource = [...this.state.personlist];\r\n    const sousc = dataSource.filter(item => item.cin === value.key)[0];\r\n    dateNaissance = moment(sousc.dateNaissance, dateFormat);\r\n    this.props.form.setFieldsValue({\r\n      nom: sousc.nom,\r\n      prenom: sousc.prenom,\r\n      dateNaissance: moment(sousc.dateNaissance, dateFormat),\r\n      age: moment().diff(moment(sousc.dateNaissance, dateFormat), \"years\")\r\n    });\r\n    this.setState({\r\n      souscripteur: sousc,\r\n      nom: sousc.nom,\r\n      prenom: sousc.prenom,\r\n      dateNaissance: sousc.dateNaissance\r\n    });\r\n  };\r\n\r\n  handleChangeCinSouscripteur = value => {\r\n    this.setState({ selectedCinSouscripteur: value });\r\n  };\r\n  componentDidMount() {\r\n    this.getDroppDownData();\r\n    this.getAllPeriodicite();\r\n    this.getproprties();\r\n  }\r\n  async getAllPeriodicite() {\r\n    let response = await getPeriodicite();\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n  async getTariffication(capital, differe, produit, dateNaissance) {\r\n    const age = moment().diff(moment(dateNaissance), \"years\");\r\n\r\n    const duree = this.state.dureeContrat;\r\n    const typeProduit = produit.produitType;\r\n    let response = await getTarification(\r\n      duree,\r\n      age,\r\n      capital,\r\n      differe,\r\n      typeProduit,\r\n      produit.id\r\n    );\r\n    this.setState({ tarification: response.data });\r\n  }\r\n  handleEffetDateChange = value => {\r\n    if (this.state.dateEcheance !== null) {\r\n      let echeanceDate = this.state.dateEcheance;\r\n      this.setState({\r\n        dateEffet: value,\r\n        dureeContrat: echeanceDate.diff(value, \"months\")\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeDateNaissance = date => {\r\n    let dateConvert = moment(date).format(\"DD-MM-YYYY\");\r\n    this.setState({ dateNaissance: dateConvert });\r\n    const age = moment().diff(moment(date), \"years\");\r\n    this.props.form.setFieldsValue({\r\n      age: age\r\n    });\r\n  };\r\n  onChangeEncours = e => {\r\n    this.setState({ encours: e.target.value });\r\n  };\r\n\r\n  onChangePeriodicite = e => {\r\n    let selected = this.state.periodicite.filter(item => item.id === e);\r\n    this.setState({ period: selected[0].libelle });\r\n  };\r\n\r\n  onChangeNom = e => {\r\n    this.setState({ nom: e.target.value });\r\n  };\r\n  onChangePrenom = e => {\r\n    this.setState({ prenom: e.target.value });\r\n  };\r\n  onChangeCapital = e => {\r\n    this.setState({ capital: e.target.value });\r\n  };\r\n  onChangeDiffere = e => {\r\n    this.setState({ differe: e.target.value });\r\n  };\r\n  onChangemontantSurprime = e => {\r\n    this.setState({ montantSurprime: e.target.value });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (\r\n      prevState.tarification !== this.state.tarification &&\r\n      this.state.produit.produitType === \"taux\"\r\n    ) {\r\n      const capital = this.props.form.getFieldValue(\"capital\");\r\n\r\n      const montantCotisation = (\r\n        (this.state.tarification.taux * capital) /\r\n        100\r\n      ).toFixed(2);\r\n      const cotisationTotale = (\r\n        montantCotisation *\r\n        (1 + this.state.produit.taxe / 100)\r\n      ).toFixed(2);\r\n\r\n      let prorata = (\r\n        montantCotisation *\r\n        ((13 - moment().format(\"M\")) / 12)\r\n      ).toFixed(2);\r\n      console.log(\"prorata:\", prorata);\r\n\r\n      const taxeAuProrata = ((prorata * 10) / 100).toFixed(2);\r\n      const Prorata_TTC = parseFloat(taxeAuProrata) + parseFloat(prorata);\r\n\r\n      this.setState({\r\n        montantCotisation: (this.state.tarification.taux * capital) / 100,\r\n        cotisationTotale:\r\n          montantCotisation * (1 + this.state.produit.taxe / 100),\r\n        taxe: (montantCotisation * this.state.produit.taxe) / 100,\r\n        dataSimulation: [\r\n          {\r\n            key: \"1\",\r\n            taxe: (montantCotisation * this.state.produit.taxe) / 100,\r\n            montantCotisation: montantCotisation,\r\n            total: cotisationTotale,\r\n            Prorata: prorata,\r\n            taxeProrata: taxeAuProrata,\r\n            ProrataTTC: Prorata_TTC\r\n          }\r\n        ]\r\n      });\r\n      this.props.form.setFieldsValue({\r\n        montantCotisation: (this.state.tarification.taux * capital) / 100\r\n      });\r\n    } else if (\r\n      prevState.tarification !== this.state.tarification &&\r\n      this.state.produit.produitType === \"forfait\"\r\n    ) {\r\n      this.setState({ montantCotisation: this.state.tarification.forfait });\r\n      this.props.form.setFieldsValue({\r\n        montantCotisation: this.state.tarification.forfait\r\n      });\r\n    }\r\n    if (prevState.montantCotisation !== this.state.montantCotisation) {\r\n      this.setState({ updated: true });\r\n    }\r\n  }\r\n\r\n  async jasperFiles(requestDevis) {\r\n    let response = await jasperFile(requestDevis);\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  handleConf = () => {\r\n    let requestModel = {\r\n      pointVente: pointVente,\r\n      nomPrenom: this.state.nom + \" \" + this.state.prenom,\r\n      dateNaissance: this.state.dateNaissance,\r\n      capital: this.state.capital,\r\n      duree: this.state.dureeContrat,\r\n      differe: this.state.differe,\r\n      periodicite: this.state.period,\r\n      montantParticipationHT: this.state.montantCotisation,\r\n      taxe: this.state.taxe,\r\n      montantParticipationTTC: this.state.cotisationTotale.toFixed(2),\r\n      risque: this.state.produit.risque.libelle,\r\n      produit: this.state.produit.code\r\n    };\r\n    this.jasperFiles(requestModel);\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      this.getTariffication(\r\n        fieldsValue.capital,\r\n        fieldsValue.Differe,\r\n        this.state.produit,\r\n        fieldsValue.dateNaissance\r\n      );\r\n    });\r\n  };\r\n  partnerChange = value => {\r\n    this.setState({\r\n      usedProducts: this.state.produits.filter(\r\n        item => item.partenaire.raisonSocial === value.label\r\n      )\r\n    });\r\n  };\r\n  onChangeDureeContrat = e => {\r\n    let date = moment.addRealMonth(this.state.dateEffet, e.target.value);\r\n    this.setState({\r\n      dureeContrat: e.target.value,\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value)\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value),\r\n      dureeContrat: parseInt(e.target.value)\r\n    });\r\n    const age = moment(date).diff(moment(dateNaissance), \"years\");\r\n\r\n    if (age >= 70) {\r\n      this.setState({ booleen: true });\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => notification.close(key)}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      );\r\n      notification.error({\r\n        message: \"TAKAFUL\",\r\n        description: \"l'âge du sociètaire à l'echeance dépasse 70.\",\r\n        btn,\r\n        duration: 0,\r\n        key\r\n      });\r\n    }\r\n  };\r\n  handleEcheanceDateChange = value => {\r\n    let effetDate = this.state.dateEffet;\r\n    this.setState({\r\n      dateEcheance: value,\r\n      dureeContrat: value.diff(effetDate, \"months\")\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dureeContrat: value.diff(effetDate, \"months\")\r\n    });\r\n    const age = moment(value).diff(moment(dateNaissance), \"years\");\r\n\r\n    if (age >= 70) {\r\n      const key = `open${Date.now()}`;\r\n      const btn = (\r\n        <Button\r\n          type=\"primary\"\r\n          size=\"small\"\r\n          onClick={() => notification.close(key)}\r\n        >\r\n          Confirm\r\n        </Button>\r\n      );\r\n      this.setState({ booleen: true });\r\n      notification.error({\r\n        message: \"TAKAFUL\",\r\n        description: \"l'âge du sociètaire à l'echeance dépasse 70.\",\r\n        btn,\r\n        duration: 0,\r\n        key\r\n      });\r\n    }\r\n  };\r\n  async getDroppDownData() {\r\n    const responsePartenaire = await getAllPartenaire();\r\n    let responseProduit = await getDecesProduit();\r\n    this.setState({\r\n      Partenaires: responsePartenaire.data.content,\r\n      produits: responseProduit.data.content\r\n    });\r\n  }\r\n  onChangeProduit = e => {\r\n    let selected = this.state.produits.filter(item => item.id === e)[0];\r\n    this.setState({\r\n      produit: selected,\r\n      tauxFrais: selected.fraisAcquisition,\r\n      tauxGestion: selected.fraisGestion,\r\n      tvaFrais: selected.tvaFraisAcquisition,\r\n      tvaGestion: selected.tvaFraisGestion\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 }\r\n      }\r\n    };\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <ComponentTitle title=\"Simulation Décès Financement\" />\r\n        <Col span={24} offset={1}>\r\n          <Title level={4}>INFORMATIONS PROSPECT</Title>\r\n        </Col>\r\n        <br />\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"CIN\" hasFeedback>\r\n              {getFieldDecorator(\"cin\", {\r\n                valuePropName: \"selected\"\r\n              })(\r\n                <AutoComplete\r\n                  size=\"default\"\r\n                  dataSource={this.state.personlistForAuto}\r\n                  onSelect={this.searchPersonnePhysique}\r\n                  allowClear={true}\r\n                  value={this.state.selectedCinSouscripteur}\r\n                  onChange={this.handleChangeCinSouscripteur}\r\n                  labelInValue\r\n                  placeholder=\"CIN\"\r\n                  filterOption={(inputValue, option) =>\r\n                    option.props.children\r\n                      .toUpperCase()\r\n                      .indexOf(inputValue.toUpperCase()) !== -1\r\n                  }\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Nom\" hasFeedback>\r\n              {getFieldDecorator(\r\n                \"nom\",\r\n                {}\r\n              )(<Input onChange={this.onChangeNom}></Input>)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Prenom\" hasFeedback>\r\n              {getFieldDecorator(\r\n                \"prenom\",\r\n                {}\r\n              )(<Input onChange={this.onChangePrenom}></Input>)}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Date de naissance\" hasFeedback>\r\n              {getFieldDecorator(\"dateNaissance\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"entre la Date de naissance\"\r\n                  }\r\n                ]\r\n              })(\r\n                <DatePicker\r\n                  className=\"date-style\"\r\n                  format={dateFormat}\r\n                  disabledDate={this.disabledDate}\r\n                  onChange={this.onChangeDateNaissance}\r\n                ></DatePicker>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Age\">\r\n              {getFieldDecorator(\"age\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide !\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  className=\"number-input\"\r\n                  onChange={this.onChange}\r\n                  addonAfter=\"Ans\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Col span={24} offset={1}>\r\n          <Title level={4}>INFORMATIONS CONTRAT</Title>\r\n        </Col>\r\n        <br />\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Date d'effet\" hasFeedback>\r\n              {getFieldDecorator(\"dateEffet\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    message: \"entre la Date d'effet\"\r\n                  }\r\n                ]\r\n              })(\r\n                <DatePicker\r\n                  className=\"date-style\"\r\n                  format={dateFormat}\r\n                  disabledDate={this.disabledDate}\r\n                  onChange={this.handleEffetDateChange}\r\n                  defaultValue={currentDate}\r\n                  disabled={true}\r\n                ></DatePicker>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Date d'échéance\" hasFeedback>\r\n              {getFieldDecorator(\"dateEcheance\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"selectionnez une date d'echeance\"\r\n                  }\r\n                ]\r\n              })(\r\n                <DatePicker\r\n                  className=\"date-style\"\r\n                  format={dateFormat}\r\n                  value={this.state.dateEcheance}\r\n                  disabledDate={this.disabledDateEcheance}\r\n                  onChange={this.handleEcheanceDateChange}\r\n                ></DatePicker>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Durée de contrat\">\r\n              {getFieldDecorator(\"dureeContrat\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide !\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  className=\"number-input\"\r\n                  onChange={this.onChangeDureeContrat}\r\n                  addonAfter=\"Mois\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <connectedUserContext.Consumer>\r\n              {value => (\r\n                (pointVente = value.pointVentes[0].libelle),\r\n                (\r\n                  <Form.Item label=\"Agence\" hasFeedback>\r\n                    {getFieldDecorator(\"pointVente\", {\r\n                      valuePropName: \"selected\",\r\n                      rules: [\r\n                        {\r\n                          message: \"selectionnez une agence\"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"agence\"\r\n                        defaultValue={\r\n                          value.pointVentes.length === 1 &&\r\n                          value.pointVentes[0].id\r\n                        }\r\n                      >\r\n                        {value.pointVentes.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.libelle}\r\n                            >\r\n                              {element.libelle}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                )\r\n              )}\r\n            </connectedUserContext.Consumer>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Différé\">\r\n              {getFieldDecorator(\"Differe\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide !\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  addonAfter=\"Mois\"\r\n                  onChange={this.onChangeDiffere}\r\n                  className=\"number-input\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Intermédiaire\" hasFeedback>\r\n              {getFieldDecorator(\"partenaire\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"selectionnez un Intermédiaire\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  placeholder=\"Intermédiaire\"\r\n                  onChange={this.partnerChange}\r\n                  labelInValue\r\n                >\r\n                  {this.state.Partenaires.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.raisonSocial}\r\n                      >\r\n                        {element.raisonSocial}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Capital assuré\">\r\n              {getFieldDecorator(\"capital\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                    message: \"Format invalide!\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  addonAfter=\"DH\"\r\n                  onChange={this.onChangeCapital}\r\n                  className=\"number-input\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Produit\" hasFeedback>\r\n              {getFieldDecorator(\"produit\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"selectionnez un produit\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select placeholder=\"produit\" onChange={this.onChangeProduit}>\r\n                  {this.state.usedProducts.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.code}\r\n                      >\r\n                        {element.code}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Périodicité\">\r\n              {getFieldDecorator(\r\n                \"periodicite\",\r\n                {}\r\n              )(\r\n                <Select\r\n                  placeholder=\"Selectionnez ...\"\r\n                  onChange={this.onChangePeriodicite}\r\n                >\r\n                  {this.state.periodicite.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.abb}\r\n                      >\r\n                        {element.libelle}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Taux de marge\">\r\n              {getFieldDecorator(\"tauxInteret\", {\r\n                rules: [\r\n                  {\r\n                    pattern: new RegExp(/^(?:[1-9]\\d*|0)?(?:\\.\\d+)?$/),\r\n                    message: \"Format invalide!\"\r\n                  }\r\n                ]\r\n              })(<Input addonAfter=\"%\" className=\"number-input\" />)}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            {this.state.OptionsAssurance.length !== 0 && (\r\n              <Form.Item label=\"Option Assurance\">\r\n                {getFieldDecorator(\"optionAssurance\", {\r\n                  valuePropName: \"selected\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une Option Assurance\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"Option Assurance\"\r\n                    optionLabelProp=\"label\"\r\n                    labelInValue\r\n                    onChange={this.onChangeOption}\r\n                    defaultValue={\r\n                      this.state.OptionsAssurance.length === 1 && {\r\n                        value: this.state.OptionsAssurance[0].id,\r\n                        label: this.state.OptionsAssurance[0].libelle\r\n                      }\r\n                    }\r\n                  >\r\n                    {this.state.OptionsAssurance.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            )}\r\n          </Col>\r\n          <Col span={10}>\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"action-btn-calculer\"\r\n              htmlType=\"submit\"\r\n              disabled={this.state.booleen}\r\n            >\r\n              Calculer\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {this.state.montantCotisation !== 0 && (\r\n            <Table\r\n              className=\"table-simulation\"\r\n              columns={columnsSimulation}\r\n              dataSource={this.state.dataSimulation}\r\n              pagination={false}\r\n              align=\"center\"\r\n              size=\"middle\"\r\n            />\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <Col span={23}>\r\n            {this.state.montantCotisation !== 0 && (\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"edit-btn-pdf\"\r\n                onClick={() => this.handleConf()}\r\n              >\r\n                <Icon type=\"download\" />\r\n                Editer\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nmoment.addRealMonth = function addRealMonth(d, m) {\r\n  var fm = moment(d).add(m, \"M\");\r\n  var fmEnd = moment(fm).endOf(\"month\");\r\n  return d.date() !== fm.date() && fm.isSame(fmEnd.format(\"YYYY-MM-DD\"))\r\n    ? fm.add(1, \"d\")\r\n    : fm;\r\n};\r\nexport default Form.create()(Simulation);\r\n","/* eslint-disable react/prop-types */\r\nimport React, { Component } from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport {\r\n  Form,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  DatePicker,\r\n  Input,\r\n  Typography,\r\n  Button,\r\n  Table,\r\n  Icon,\r\n  AutoComplete\r\n} from \"antd\";\r\nimport moment from \"moment\";\r\nimport { connectedUserContext } from \"../../../app/App\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport { getAllPartenaire } from \"../../Parametrage/partenaire/PartenaireAPI\";\r\nimport {\r\n  getTarificationMrb,\r\n  getAllProductMrb\r\n} from \"../../MRB/ProduitMrb/ProduitMRBAPI\";\r\nimport { getallperson } from \"../../Participants/ParticipantAPI\";\r\nimport { getPeriodicite } from \"../../GestionContrats/ContratsAPI\";\r\nimport { jasperFileMrb } from \"../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\n\r\nconst { Title } = Typography;\r\nconst dateFormat = \"DD-MM-YYYY\";\r\nconst currentDate = moment(moment(), dateFormat).add(1, \"days\");\r\nconst { Option } = Select;\r\nlet pointVente = \"\";\r\nlet dateNaissance = new Date();\r\n\r\nconst columnsSimulation = [\r\n  {\r\n    title: \"Prime Nette (DH)\",\r\n    dataIndex: \"primeNette\"\r\n  },\r\n  {\r\n    title: \"Prime HT (DH)\",\r\n    dataIndex: \"primeHT\"\r\n  },\r\n  {\r\n    title: \"Prime EVCAT (DH)\",\r\n    dataIndex: \"primeEvcat\"\r\n  },\r\n  {\r\n    title: \"Prime TTC(DH)\",\r\n    dataIndex: \"primeTTC\"\r\n  },\r\n\r\n  {\r\n    title: \"Prorata HT (DH)\",\r\n    dataIndex: \"Prorata\"\r\n  },\r\n  {\r\n    title: \"Prorata TTC (DH)\",\r\n    dataIndex: \"ProrataTTC\"\r\n  }\r\n];\r\n\r\nclass SimulationMrb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dateNaissance: null,\r\n      dureeContrat: 0,\r\n      dateEcheance: null,\r\n      dateEffet: currentDate,\r\n      Partenaires: [],\r\n      produits: [],\r\n      produit: {},\r\n      usedProducts: [],\r\n      OptionsAssurance: [],\r\n      tarification: {},\r\n\r\n      option: null,\r\n\r\n      primeHT: 0,\r\n\r\n      Prorata: 0,\r\n      primeNette: 0,\r\n      primeTTC: 0,\r\n      primeEvcat: 0,\r\n      prorataTTC: 0,\r\n      taxe: 0,\r\n\r\n      valeurBatiment: 0,\r\n      natureBatiment: \"\",\r\n      valeurContenu: 0,\r\n      dataSimulation: [],\r\n\r\n      test: null,\r\n      cin: null,\r\n      nom: null,\r\n      booleen: false,\r\n      prenom: null,\r\n      updated: false,\r\n      periodicite: [],\r\n      period: \"\",\r\n      personlistForAuto: [],\r\n      personlist: [],\r\n      souscripteur: {},\r\n      selectedCinSouscripteur: []\r\n    };\r\n  }\r\n\r\n  async getproprties() {\r\n    let personslist = await getallperson();\r\n    let helpArray = [];\r\n\r\n    personslist.data.content.forEach(element => {\r\n      const object = element.cin;\r\n      helpArray.push(object);\r\n    });\r\n\r\n    this.setState({\r\n      personlist: [...personslist.data.content],\r\n      personlistForAuto: [...helpArray]\r\n    });\r\n  }\r\n  searchPersonnePhysique = value => {\r\n    const dataSource = [...this.state.personlist];\r\n    const sousc = dataSource.filter(item => item.cin === value.key)[0];\r\n    dateNaissance = moment(sousc.dateNaissance, dateFormat);\r\n    this.props.form.setFieldsValue({\r\n      nom: sousc.nom,\r\n      prenom: sousc.prenom,\r\n      dateNaissance: moment(sousc.dateNaissance, dateFormat),\r\n      age: moment().diff(moment(sousc.dateNaissance, dateFormat), \"years\")\r\n    });\r\n    this.setState({\r\n      souscripteur: sousc,\r\n      nom: sousc.nom,\r\n      prenom: sousc.prenom,\r\n      dateNaissance: sousc.dateNaissance\r\n    });\r\n  };\r\n\r\n  handleChangeCinSouscripteur = value => {\r\n    this.setState({ selectedCinSouscripteur: value });\r\n  };\r\n  componentDidMount() {\r\n    this.getDroppDownData();\r\n    this.getAllPeriodicite();\r\n    this.getproprties();\r\n  }\r\n  async getAllPeriodicite() {\r\n    let response = await getPeriodicite();\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n  async getTariffication(valeur, nature, produit) {\r\n    let response = await getTarificationMrb(valeur, nature, produit);\r\n\r\n    this.setState({ tarification: response.data });\r\n  }\r\n  handleEffetDateChange = value => {\r\n    if (this.state.dateEcheance !== null) {\r\n      let echeanceDate = this.state.dateEcheance;\r\n      this.setState({\r\n        dateEffet: value,\r\n        dureeContrat: echeanceDate.diff(value, \"months\")\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeDateNaissance = date => {\r\n    let dateConvert = moment(date).format(\"DD-MM-YYYY\");\r\n    this.setState({ dateNaissance: dateConvert });\r\n    const age = moment().diff(moment(date), \"years\");\r\n    this.props.form.setFieldsValue({\r\n      age: age\r\n    });\r\n  };\r\n  onChangeEncours = e => {\r\n    this.setState({ encours: e.target.value });\r\n  };\r\n\r\n  onChangePeriodicite = e => {\r\n    let selected = this.state.periodicite.filter(item => item.id === e);\r\n    this.setState({ period: selected[0].libelle });\r\n  };\r\n\r\n  onChangeNom = e => {\r\n    this.setState({ nom: e.target.value });\r\n  };\r\n  onChangePrenom = e => {\r\n    this.setState({ prenom: e.target.value });\r\n  };\r\n  onChangeValeurBatiment = e => {\r\n    let valeurC = parseFloat(e.target.value * 20) / 100;\r\n    console.log(\"valeurC:\", valeurC);\r\n    this.setState({ valeurBatiment: e.target.value, valeurContenu: valeurC });\r\n  };\r\n  onChangeNatureBatiment = e => {\r\n    this.setState({ natureBatiment: e });\r\n  };\r\n  onChangemontantSurprime = e => {\r\n    this.setState({ montantSurprime: e.target.value });\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.tarification !== this.state.tarification) {\r\n      //tauxContribution est le meme montant de contribution\r\n      this.setState({ primeNette: this.state.tarification.tauxContribution });\r\n      const prime_Evcat = (\r\n        (this.state.tarification.tauxContribution * 8) /\r\n        100\r\n      ).toFixed(2);\r\n      this.setState({ primeEvcat: prime_Evcat });\r\n      const prime_HT =\r\n        parseFloat(this.state.tarification.tauxContribution) +\r\n        parseFloat(prime_Evcat);\r\n      this.setState({ primeHT: prime_HT });\r\n\r\n      const taxe = ((prime_HT * 14) / 100).toFixed(2);\r\n      this.setState({ taxe: taxe });\r\n\r\n      const FSEC = ((prime_HT * 1) / 100).toFixed(2);\r\n\r\n      const prime_TTC =\r\n        parseFloat(prime_HT) + parseFloat(taxe) + parseFloat(FSEC);\r\n\r\n      this.setState({ primeTTC: prime_TTC });\r\n\r\n      let prorata = (prime_HT * ((13 - moment().format(\"M\")) / 12)).toFixed(2);\r\n\r\n      this.setState({ Prorata: prorata });\r\n\r\n      const taxeAuProrata = ((prorata * 14) / 100).toFixed(2);\r\n      const Prorata_TTC = parseFloat(taxeAuProrata) + parseFloat(prorata);\r\n      this.setState({ prorataTTC: Prorata_TTC });\r\n\r\n      this.setState({\r\n        dataSimulation: [\r\n          {\r\n            key: \"1\",\r\n            primeNette: this.state.tarification.tauxContribution,\r\n            primeHT: prime_HT,\r\n            primeEvcat: prime_Evcat,\r\n            primeTTC: prime_TTC,\r\n            Prorata: prorata,\r\n            ProrataTTC: Prorata_TTC\r\n          }\r\n        ]\r\n      });\r\n    }\r\n  }\r\n\r\n  async jasperFilesMrb(requestDevis) {\r\n    let response = await jasperFileMrb(requestDevis);\r\n    if (response.status === 200) {\r\n      const file = new Blob([response.data], { type: \"application/pdf\" });\r\n      const fileURL = URL.createObjectURL(file);\r\n      window.open(fileURL);\r\n    }\r\n  }\r\n  handleConf = () => {\r\n    let requestModel = {\r\n      pointVente: pointVente,\r\n      nomPrenom: this.state.nom + \" \" + this.state.prenom,\r\n      dateNaissance: this.state.dateNaissance,\r\n      primeNette: this.state.primeNette,\r\n      primeHT: this.state.primeHT,\r\n      primeTTC: this.state.primeTTC,\r\n      periodicite: this.state.period,\r\n      primeEvcat: this.state.primeEvcat,\r\n      valeurBatiment: this.state.valeurBatiment,\r\n      typeBatiment: this.state.valeurContenu,\r\n      produit: this.state.produit.code,\r\n      taxe: this.state.taxe\r\n    };\r\n\r\n    this.jasperFilesMrb(requestModel);\r\n  };\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, fieldsValue) => {\r\n      if (err) {\r\n        return;\r\n      }\r\n      this.getTariffication(\r\n        fieldsValue.valeurBatiment,\r\n        fieldsValue.natureBatiment,\r\n        this.state.produit.id\r\n      );\r\n    });\r\n  };\r\n  partnerChange = value => {\r\n    this.setState({\r\n      usedProducts: this.state.produits.filter(\r\n        item => item.partenaire.raisonSocial === value.label\r\n      )\r\n    });\r\n  };\r\n  onChangeDureeContrat = e => {\r\n    let date = moment.addRealMonth(this.state.dateEffet, e.target.value);\r\n    this.setState({\r\n      dureeContrat: e.target.value,\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value)\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dateEcheance: moment.addRealMonth(this.state.dateEffet, e.target.value),\r\n      dureeContrat: parseInt(e.target.value)\r\n    });\r\n  };\r\n  handleEcheanceDateChange = value => {\r\n    let effetDate = this.state.dateEffet;\r\n    this.setState({\r\n      dateEcheance: value,\r\n      dureeContrat: value.diff(effetDate, \"months\")\r\n    });\r\n    this.props.form.setFieldsValue({\r\n      dureeContrat: value.diff(effetDate, \"months\")\r\n    });\r\n  };\r\n  async getDroppDownData() {\r\n    const responsePartenaire = await getAllPartenaire();\r\n    let responseProduit = await getAllProductMrb();\r\n    this.setState({\r\n      Partenaires: responsePartenaire.data.content,\r\n      produits: responseProduit.data.content\r\n    });\r\n  }\r\n  onChangeProduit = e => {\r\n    let selected = this.state.produits.filter(item => item.id === e)[0];\r\n    this.setState({\r\n      produit: selected,\r\n      tauxFrais: selected.fraisAcquisition,\r\n      tauxGestion: selected.fraisGestion,\r\n      tvaFrais: selected.tvaFraisAcquisition,\r\n      tvaGestion: selected.tvaFraisGestion\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 }\r\n      }\r\n    };\r\n    return (\r\n      <Form {...formItemLayout} onSubmit={this.handleSubmit}>\r\n        <ComponentTitle title=\"Simulation MRB\" />\r\n        <Col span={24} offset={1}>\r\n          <Title level={4}>INFORMATIONS PROSPECT</Title>\r\n        </Col>\r\n        <br />\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"CIN\" hasFeedback>\r\n              {getFieldDecorator(\"cin\", {\r\n                valuePropName: \"selected\"\r\n              })(\r\n                <AutoComplete\r\n                  size=\"default\"\r\n                  dataSource={this.state.personlistForAuto}\r\n                  onSelect={this.searchPersonnePhysique}\r\n                  allowClear={true}\r\n                  value={this.state.selectedCinSouscripteur}\r\n                  onChange={this.handleChangeCinSouscripteur}\r\n                  labelInValue\r\n                  placeholder=\"CIN\"\r\n                  filterOption={(inputValue, option) =>\r\n                    option.props.children\r\n                      .toUpperCase()\r\n                      .indexOf(inputValue.toUpperCase()) !== -1\r\n                  }\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Nom\" hasFeedback>\r\n              {getFieldDecorator(\r\n                \"nom\",\r\n                {}\r\n              )(<Input onChange={this.onChangeNom}></Input>)}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Prenom\" hasFeedback>\r\n              {getFieldDecorator(\r\n                \"prenom\",\r\n                {}\r\n              )(<Input onChange={this.onChangePrenom}></Input>)}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Date de naissance\" hasFeedback>\r\n              {getFieldDecorator(\"dateNaissance\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"entre la Date de naissance\"\r\n                  }\r\n                ]\r\n              })(\r\n                <DatePicker\r\n                  className=\"date-style\"\r\n                  format={dateFormat}\r\n                  disabledDate={this.disabledDate}\r\n                  onChange={this.onChangeDateNaissance}\r\n                ></DatePicker>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Age\">\r\n              {getFieldDecorator(\"age\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide !\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  className=\"number-input\"\r\n                  onChange={this.onChange}\r\n                  addonAfter=\"Ans\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Col span={24} offset={1}>\r\n          <Title level={4}>INFORMATIONS CONTRAT</Title>\r\n        </Col>\r\n        <br />\r\n        <br />\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Date d'effet\" hasFeedback>\r\n              {getFieldDecorator(\"dateEffet\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    message: \"entre la Date d'effet\"\r\n                  }\r\n                ]\r\n              })(\r\n                <DatePicker\r\n                  className=\"date-style\"\r\n                  format={dateFormat}\r\n                  disabledDate={this.disabledDate}\r\n                  onChange={this.handleEffetDateChange}\r\n                  defaultValue={currentDate}\r\n                  disabled={true}\r\n                ></DatePicker>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Date d'échéance\" hasFeedback>\r\n              {getFieldDecorator(\"dateEcheance\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"selectionnez une date d'echeance\"\r\n                  }\r\n                ]\r\n              })(\r\n                <DatePicker\r\n                  className=\"date-style\"\r\n                  format={dateFormat}\r\n                  value={this.state.dateEcheance}\r\n                  disabledDate={this.disabledDateEcheance}\r\n                  onChange={this.handleEcheanceDateChange}\r\n                ></DatePicker>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Durée de contrat\">\r\n              {getFieldDecorator(\"dureeContrat\", {\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    pattern: new RegExp(/^[0-9\\b]+$/),\r\n                    message: \"Format invalide !\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  className=\"number-input\"\r\n                  onChange={this.onChangeDureeContrat}\r\n                  addonAfter=\"Mois\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <connectedUserContext.Consumer>\r\n              {value => (\r\n                (pointVente = value.pointVentes[0].libelle),\r\n                (\r\n                  <Form.Item label=\"Agence\" hasFeedback>\r\n                    {getFieldDecorator(\"pointVente\", {\r\n                      valuePropName: \"selected\",\r\n                      rules: [\r\n                        {\r\n                          message: \"selectionnez une agence\"\r\n                        }\r\n                      ]\r\n                    })(\r\n                      <Select\r\n                        placeholder=\"agence\"\r\n                        defaultValue={\r\n                          value.pointVentes.length === 1 &&\r\n                          value.pointVentes[0].id\r\n                        }\r\n                      >\r\n                        {value.pointVentes.map(element => {\r\n                          return (\r\n                            <Option\r\n                              key={element.id}\r\n                              value={element.id}\r\n                              label={element.libelle}\r\n                            >\r\n                              {element.libelle}\r\n                            </Option>\r\n                          );\r\n                        })}\r\n                      </Select>\r\n                    )}\r\n                  </Form.Item>\r\n                )\r\n              )}\r\n            </connectedUserContext.Consumer>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Valeur de batiment\">\r\n              {getFieldDecorator(\"valeurBatiment\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true\r\n                  }\r\n                ]\r\n              })(\r\n                <Input\r\n                  addonAfter=\"DH\"\r\n                  onChange={this.onChangeValeurBatiment}\r\n                  className=\"number-input\"\r\n                />\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Intermédiaire\" hasFeedback>\r\n              {getFieldDecorator(\"partenaire\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"selectionnez un Intermédiaire\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  placeholder=\"Intermédiaire\"\r\n                  onChange={this.partnerChange}\r\n                  labelInValue\r\n                >\r\n                  {this.state.Partenaires.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.raisonSocial}\r\n                      >\r\n                        {element.raisonSocial}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Nature de batiment\">\r\n              {getFieldDecorator(\"natureBatiment\", {\r\n                rules: [\r\n                  {\r\n                    required: true\r\n                  }\r\n                ]\r\n              })(\r\n                <Select\r\n                  placeholder=\"Sélectionnez \"\r\n                  onChange={this.onChangeNatureBatiment}\r\n                >\r\n                  <Option value=\"Appartement\" label=\"Appartement\">\r\n                    Appartement\r\n                  </Option>\r\n                  <Option value=\"Maison\" label=\"Maison\">\r\n                    Maison\r\n                  </Option>\r\n                  <Option value=\"Villa\" label=\"Villa\">\r\n                    Villa\r\n                  </Option>\r\n                  <Option value=\"Bâtiment\" label=\"Bâtiment\">\r\n                    Bâtiment\r\n                  </Option>\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Produit\" hasFeedback>\r\n              {getFieldDecorator(\"produit\", {\r\n                valuePropName: \"selected\",\r\n                rules: [\r\n                  {\r\n                    required: true,\r\n                    message: \"selectionnez un produit\"\r\n                  }\r\n                ]\r\n              })(\r\n                <Select placeholder=\"produit\" onChange={this.onChangeProduit}>\r\n                  {this.state.usedProducts.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.code}\r\n                      >\r\n                        {element.code}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            <Form.Item label=\"Périodicité\">\r\n              {getFieldDecorator(\r\n                \"periodicite\",\r\n                {}\r\n              )(\r\n                <Select\r\n                  placeholder=\"Selectionnez ...\"\r\n                  onChange={this.onChangePeriodicite}\r\n                >\r\n                  {this.state.periodicite.map(element => {\r\n                    return (\r\n                      <Option\r\n                        key={element.id}\r\n                        value={element.id}\r\n                        label={element.abb}\r\n                      >\r\n                        {element.libelle}\r\n                      </Option>\r\n                    );\r\n                  })}\r\n                </Select>\r\n              )}\r\n            </Form.Item>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col span={10}>\r\n            {this.state.OptionsAssurance.length !== 0 && (\r\n              <Form.Item label=\"Option Assurance\">\r\n                {getFieldDecorator(\"optionAssurance\", {\r\n                  valuePropName: \"selected\",\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"selectionnez une Option Assurance\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"Option Assurance\"\r\n                    optionLabelProp=\"label\"\r\n                    labelInValue\r\n                    onChange={this.onChangeOption}\r\n                    defaultValue={\r\n                      this.state.OptionsAssurance.length === 1 && {\r\n                        value: this.state.OptionsAssurance[0].id,\r\n                        label: this.state.OptionsAssurance[0].libelle\r\n                      }\r\n                    }\r\n                  >\r\n                    {this.state.OptionsAssurance.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            )}\r\n          </Col>\r\n          <Col span={10}>\r\n            <Button\r\n              type=\"primary\"\r\n              className=\"action-btn-calculer\"\r\n              htmlType=\"submit\"\r\n              disabled={this.state.booleen}\r\n            >\r\n              Calculer\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          {this.state.primeHT !== 0 && (\r\n            <Table\r\n              className=\"table-simulation\"\r\n              columns={columnsSimulation}\r\n              dataSource={this.state.dataSimulation}\r\n              pagination={false}\r\n              align=\"center\"\r\n              size=\"middle\"\r\n            />\r\n          )}\r\n        </Row>\r\n        <Row>\r\n          <Col span={23}>\r\n            {this.state.primeHT !== 0 && (\r\n              <Button\r\n                type=\"primary\"\r\n                className=\"edit-btn-pdf\"\r\n                onClick={() => this.handleConf()}\r\n              >\r\n                <Icon type=\"download\" />\r\n                Editer\r\n              </Button>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\nmoment.addRealMonth = function addRealMonth(d, m) {\r\n  var fm = moment(d).add(m, \"M\");\r\n  var fmEnd = moment(fm).endOf(\"month\");\r\n  return d.date() !== fm.date() && fm.isSame(fmEnd.format(\"YYYY-MM-DD\"))\r\n    ? fm.add(1, \"d\")\r\n    : fm;\r\n};\r\nexport default Form.create()(SimulationMrb);\r\n","import React from \"react\";\r\nexport const formItemLayoutDetailsRetraiteProduit = {\r\n    labelCol: {\r\n      span: 10,\r\n    },\r\n    wrapperCol: {\r\n      span: 12,\r\n    },\r\n  };\r\n  export const initialState = {\r\n    data: [],\r\n    visible: false,\r\n    searchText: \"\",\r\n    searchedColumn: \"\",\r\n    record: {},\r\n    value: \"\",\r\n    keyRecord: \"\",\r\n    auxiliaire: [],\r\n  };\r\n  export const commissionsColumns = [\r\n    {\r\n      title: \"Date Début\",\r\n      dataIndex: \"dateDebut\",\r\n      key: \"dateDebut\",\r\n    },\r\n    {\r\n      title: \"Date Fin\",\r\n      dataIndex: \"dateFin\",\r\n      key: \"Date Fin\",\r\n    },\r\n    {\r\n      title: \"Commission partenaire\",\r\n      dataIndex: \"commissionPartenaire\",\r\n      key: \"Commission partenaire\",\r\n    },\r\n    {\r\n      title: \"TVA\",\r\n      dataIndex: \"tva\",\r\n      key: \"tva\",\r\n    },\r\n  ];\r\n  export function typePrestationColumns(Tag) {\r\n    return [\r\n      {\r\n        title: \"Type prestation\",\r\n        dataIndex: \"typePrestation.libelle\",\r\n        key: \"typePrestation.libelle\",\r\n      },\r\n      {\r\n        title: \"Pièces justificatives\",\r\n        key: \"pieceJointe\",\r\n        dataIndex: \"pieceJointe\",\r\n        render: (pieceJointe) => (\r\n          <span>\r\n            {pieceJointe.map((tag) => {\r\n              let color = \"geekblue\";\r\n              return <Tag color={color}>{tag.libelle}</Tag>;\r\n            })}\r\n          </span>\r\n        ),\r\n      },\r\n    ];\r\n  }","import { Button, Col, Divider, Form, Icon, Input, Row, Tag } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  commissionsColumns,\r\n  formItemLayoutDetailsRetraiteProduit,\r\n  initialState,\r\n  typePrestationColumns\r\n} from \"./DetailsConstants\";\r\nimport ComponentTitle from \"../../../../util/Title/ComponentTitle\";\r\n\r\nimport { MyContext } from \"../ConsultationRetraiteProduit.js\";\r\n\r\nclass Details extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = initialState;\r\n    this.columns = commissionsColumns;\r\n    this.columns1 = typePrestationColumns(Tag);\r\n  }\r\n  handleReload() {\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const formItemLayout = formItemLayoutDetailsRetraiteProduit;\r\n    let libelles = [];\r\n    return (\r\n      <div className=\"person\">\r\n        <ComponentTitle title=\"Consultation Retraite Produit\" />\r\n        <MyContext.Consumer>\r\n          {context => (\r\n            <React.Fragment>\r\n              <h3>Détails du produit : {context.state.libelle}</h3>\r\n              <Divider\r\n                style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n              ></Divider>\r\n\r\n              <Row\r\n                style={{\r\n                  backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                  marginBottom: \"30px\",\r\n                  marginTop: \"10px\"\r\n                }}\r\n              >\r\n                <Col span={20}>\r\n                  <Divider orientation=\"left\">Paramètres générales</Divider>\r\n                </Col>\r\n                <Col span={24}>\r\n                  <Form {...formItemLayout}>\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Code\">\r\n                        <Input value={context.state.code} />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Libelle\">\r\n                        <Input value={context.state.libelle} />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"N° d'homologation\">\r\n                        <Input value={context.state.numeroHomologation} />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Date d'homologation\">\r\n                        <Input value={context.state.dateHomologation} />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Frais de Gestion WAKALA\r\n                          </label>\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.fraisGestion}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Frais d'acquisition\">\r\n                        <Input\r\n                          value={context.state.fraisAcquisition}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Taux Taxe D&aposAssurance\r\n                          </label>\r\n                        }\r\n                      >\r\n                        <Input value={context.state.taxe} addonAfter=\"%\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={20}>\r\n                      <Divider orientation=\"left\">\r\n                        Modalités de Rachat Total\r\n                      </Divider>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Application de rachat total\">\r\n                        <Input\r\n                          value={context.state.rachatTotal ? \"Oui\" : \"Non\"}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Durée Minimale Sousciption Avant Rachat Total\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.rachatTotal !== true\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state\r\n                              .dureeMinimalSouscriptionAvantRachatTotal\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Application de la condition disciplinaire\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.rachatTotal !== true\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state.conditionDisciplinaireTotale\r\n                              ? \"Oui\"\r\n                              : \"Non\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Nature de la condition disciplinaire\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.natureConditionDisciplinaireTotale ===\r\n                            \"ASAISIR\" ||\r\n                          context.state.conditionDisciplinaireTotale === false\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state.natureConditionDisciplinaireTotale ===\r\n                            \"POURCENTAGE\"\r\n                              ? \"Pourcentage\"\r\n                              : \"Fixe\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Valeur de la condition disciplinaire\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.natureConditionDisciplinaireTotale ===\r\n                            \"ASAISIR\" ||\r\n                          context.state.conditionDisciplinaireTotale === false\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state.valeurConditionDisciplinaireTotale\r\n                          }\r\n                          addonAfter={\r\n                            context.state.natureConditionDisciplinaireTotale ===\r\n                            \"FIXE\"\r\n                              ? \"DHS\"\r\n                              : \"%\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={20}>\r\n                      <Divider orientation=\"left\">\r\n                        Modalités de Rachat Partiel\r\n                      </Divider>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Application de rachat partiel\r\n                          </label>\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.rachatPartiel ? \"Oui \" : \"Non\"}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Durée Minimale de Souscription avant rachat Partiel\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.rachatPartiel !== true\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state\r\n                              .dureeMinimalSouscriptionAvantRachatPartiel\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Application de la conditionn disciplinaire\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.rachatPartiel !== true\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state.conditionDisciplinairePartiel\r\n                              ? \"Oui\"\r\n                              : \"Non\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Nature de la condition disciplinaire\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.natureConditionDisciplinairePartiel ===\r\n                            \"ASAISIR\" ||\r\n                          context.state.conditionDisciplinairePartiel === false\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state.natureConditionDisciplinairePartiel\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Valeur de la condition disciplinaire\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.natureConditionDisciplinairePartiel ===\r\n                            \"ASAISIR\" ||\r\n                          context.state.conditionDisciplinairePartiel === false\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state.valeurConditionDisciplinairePartiel\r\n                          }\r\n                          addonAfter={\r\n                            context.state\r\n                              .natureConditionDisciplinairePartiel === \"FIXE\"\r\n                              ? \"DHS\"\r\n                              : \"%\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Maximum du montant de rachat partiel\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.rachatTotal !== true\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.maximumMontantRachatPartiel}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Nombre Maximum de fois de rachat partiel\r\n                          </label>\r\n                        }\r\n                        style={\r\n                          context.state.rachatTotal !== true\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.nombreMaximumRachatPartiel}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={20}>\r\n                      <Divider orientation=\"left\">Paramètres globaux </Divider>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Numéro du compte TAKAFUL\">\r\n                        <Input value={context.state.numeroCompte} />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Intitulé du compte TAKAFUL\">\r\n                        <Input value={context.state.libelleCompte} />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Pool D'investissement\">\r\n                        <Input\r\n                          style={{ display: \"none\" }}\r\n                          value={context.state.poolInvestissment.map(element =>\r\n                            libelles.push(element.libelle)\r\n                          )}\r\n                        ></Input>\r\n\r\n                        <Input value={libelles.join()} />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col span={20}>\r\n                      <Divider orientation=\"left\">\r\n                        Paramètres de fiscalité{\" \"}\r\n                      </Divider>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Nature Fiscale\">\r\n                        <Input\r\n                          value={\r\n                            context.state.natureFiscale === \"EPARGNE \"\r\n                              ? \"Epargne\"\r\n                              : \"Retraite complémentaire\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Revenu global\">\r\n                        <Input value={context.state.revenuGlobal} />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Régime Fiscale\">\r\n                        <Input\r\n                          value={\r\n                            context.state.natureFiscale === \"RETRAITE \"\r\n                              ? \"Retraite complémentaire\"\r\n                              : \"Vie capitalisation\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Taux de rendement avant imposition\">\r\n                        <Input\r\n                          value={context.state.tauxRendementAvantImposition}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={20}>\r\n                      <Divider orientation=\"left\">\r\n                        Paramètres de Souscription{\" \"}\r\n                      </Divider>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Durée Minimale de souscription\r\n                          </label>\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.dureeMinimalSouscription}\r\n                          addonAfter=\"Mois\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Renouvellement de contrat Tacite Reconduction\r\n                          </label>\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state\r\n                              .renouvellementContratTaciteReconduction\r\n                              ? \"Oui\"\r\n                              : \"Non\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Montant minimum de contribution\">\r\n                        <Input\r\n                          value={context.state.montantMinContribution}\r\n                          addonAfter=\"DHS\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Taux de Rendement cible avec imposition\r\n                          </label>\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.tauxRendementAvantImposition}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item label=\"Mode De Gestion\">\r\n                        <Input\r\n                          value={\r\n                            context.state.modeGestion === \"MOUDARABA\"\r\n                              ? \"Moudaraba\"\r\n                              : \"WakalabillIstithmar\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label=\"Profit Moudaraba\"\r\n                        style={\r\n                          context.state.modeGestion !== \"MOUDARABA\"\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.profitMoudaraba}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label=\"Frais WAKALA BIL ISTITHMAR\"\r\n                        style={\r\n                          context.state.modeGestion !== \"WAKALABILISTITMAR\"\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.fraisFixeWakalabilIstithmar}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label=\"Superformance WAKALA BIL ISTITHMAR\"\r\n                        style={\r\n                          context.state.modeGestion !== \"WAKALABILISTITMAR\"\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={context.state.surperformanceWakalabilIstithmar}\r\n                          addonAfter=\"%\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label=\"Durée minimale avant rachat partiel\"\r\n                        style={\r\n                          context.state.rachatPartiel !== true\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state\r\n                              .dureeMinimalSouscriptionAvantRachatPartiel\r\n                          }\r\n                          addonAfter=\"Mois\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label=\"Durée minimale avant rachat totale\"\r\n                        style={\r\n                          context.state.rachatTotal !== true\r\n                            ? { display: \"none\" }\r\n                            : \"\"\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state\r\n                              .dureeMinimalSouscriptionAvantRachatTotal\r\n                          }\r\n                          addonAfter=\"Mois\"\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col span={12}>\r\n                      <Form.Item\r\n                        label={\r\n                          <label style={{ whiteSpace: \"normal\" }}>\r\n                            Mode du calcul du capital constitué révelorisé\r\n                          </label>\r\n                        }\r\n                      >\r\n                        <Input\r\n                          value={\r\n                            context.state.modeCalculCapitalConstitue ===\r\n                            \"METHOD1\"\r\n                              ? \"Méthode 1 – Début de période + cotisations du mois (non investies)\"\r\n                              : \"Méthode 2 – Fin de période\"\r\n                          }\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n                  </Form>\r\n                </Col>\r\n              </Row>\r\n              <h3>Périodicités</h3>\r\n              <Divider\r\n                style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n              ></Divider>\r\n              <Row\r\n                style={{\r\n                  backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                  marginBottom: \"30px\",\r\n                  marginTop: \"10px\"\r\n                }}\r\n              >\r\n                <Col span={24}>\r\n                  <Col span={12}>\r\n                    <h3>Périodicités</h3>\r\n                    <Divider\r\n                      style={{\r\n                        marginBottom: \"3px\",\r\n                        marginTop: \"10px\",\r\n                        width: \"5%\"\r\n                      }}\r\n                    ></Divider>\r\n                    {context.state.periodicites.map(element => {\r\n                      return (\r\n                        <Tag\r\n                          key={element.id}\r\n                          color=\"geekblue\"\r\n                          style={{ margin: \"20px 4px\" }}\r\n                        >\r\n                          {element.libelle}\r\n                        </Tag>\r\n                      );\r\n                    })}\r\n                  </Col>\r\n\r\n                  {/* <Col span={12}>\r\n                      <h3>Points de Vente</h3>\r\n                      <Divider\r\n                        style={{ marginBottom: \"3px\", marginTop: \"10px\" }}\r\n                      ></Divider>\r\n                      {context.state.pointVentes.map((element) => {\r\n                        return (\r\n                          <Tag color=\"cyan\" style={{ margin: \"20px 4px\" }}>\r\n                            {element.libelle}\r\n                          </Tag>\r\n                        );\r\n                      })}\r\n                    </Col> */}\r\n                </Col>\r\n              </Row>\r\n\r\n              {/* <h3>Commisssions</h3>\r\n                <Divider\r\n                  style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n                ></Divider>\r\n                <Row\r\n                  style={{\r\n                    backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                    marginBottom: \"30px\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <Col span={24}>\r\n                    <Table\r\n                      rowClassName=\"editable-row\"\r\n                      columns={this.columns}\r\n                      dataSource={context.state.commissions}\r\n                      pagination={false}\r\n                    />\r\n                  </Col>\r\n                </Row> */}\r\n\r\n              {/* <h3>Types de prestations</h3>\r\n                <Divider\r\n                  style={{ marginBottom: \"30px\", marginTop: \"10px\" }}\r\n                ></Divider>\r\n                <Row\r\n                  style={{\r\n                    backgroundColor: \"rgb(0,0,0,0.02)\",\r\n                    marginBottom: \"30px\",\r\n                    marginTop: \"10px\",\r\n                  }}\r\n                >\r\n                  <Col span={24}>\r\n                    <Table\r\n                      rowClassName=\"editable-row\"\r\n                      columns={this.columns1}\r\n                      dataSource={context.state.prestations}\r\n                      pagination={false}\r\n                    />\r\n                  </Col>\r\n                </Row> */}\r\n            </React.Fragment>\r\n          )}\r\n        </MyContext.Consumer>\r\n\r\n        <Button\r\n          type=\"primary\"\r\n          className=\"add-button\"\r\n          onClick={() => this.handleReload()}\r\n        >\r\n          <Icon type=\"arrow-left\" />\r\n          Retour\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Details;\r\n","import \"./ConsultationRetraiteProduit.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Button, Divider, Form, Icon, Table,notification } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ComponentTitle from \"../../../util/Title/ComponentTitle\";\r\nimport Details from \"./Details/Details\";\r\nimport { getColumnSearchProps } from \"./ProduitRetraiteServices/getColumnSearchProps\";\r\nimport { getAllPointVente } from \"../pointvente/PointVenteAPI\";\r\nimport { getExclusion } from \"../../EchangeFichiersInformatiques/EchangeFileAPI\";\r\nimport { getPeriodicite } from \"../../GestionContrats/ContratsAPI\";\r\nimport { getRetraiteProduit } from \"./ProduitRetraiteAPI\";\r\nimport { getCategorie, getRisque } from \"../ProduitDeces/ProduitDecesAPI\";\r\n\r\nexport const MyContext = React.createContext();\r\n\r\nclass ConsultationRetraiteProduit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      visible: false,\r\n      searchText: \"\",\r\n      searchedColumn: \"\",\r\n      record: {},\r\n      value: \"\",\r\n      keyRecord: \"\",\r\n      isEdit: false,\r\n      isEdited: false,\r\n      periodicite: [],\r\n      exclusion: [],\r\n      pointVente: [],\r\n      risques: [],\r\n      categories: [],\r\n    };\r\n    this.columns = [\r\n      {\r\n        title: \"Code\",\r\n        dataIndex: \"code\",\r\n        key: \"code\",\r\n        ...getColumnSearchProps(\"code\", \"Code\", this),\r\n      },\r\n      {\r\n        title: \"Libelle\",\r\n        dataIndex: \"libelle\",\r\n        key: \"libelle\",\r\n        ...getColumnSearchProps(\"libelle\", \"Libelle\", this),\r\n      },\r\n      {\r\n        title: \"Date création\",\r\n        dataIndex: \"creationDate\",\r\n        key: \"creation_date\",\r\n        ...getColumnSearchProps(\"creationDate\", \"Date creation\", this),\r\n      },\r\n      {\r\n        title: \"Risque \",\r\n        dataIndex: \"risque.libelle\",\r\n        key: [\"risque\", \"risque_id\"],\r\n        ...getColumnSearchProps(\"risque.libelle\", \"risque \", this),\r\n      },\r\n      {\r\n        title: \"Catégorie \",\r\n        dataIndex: \"categorie.libelle\",\r\n        key: [\"categorie\", \"categorie_id\"],\r\n        ...getColumnSearchProps(\"categorie.libelle\", \"categorie \", this),\r\n      },\r\n      {\r\n        title: \"Date modification \",\r\n        dataIndex: \"dateModification\",\r\n        key: \"dateModification\",\r\n        ...getColumnSearchProps(\"dateModification\", \"dateModification \", this),\r\n      },\r\n      {\r\n        title: \"Opérations\",\r\n        align: \"center\",\r\n        dataIndex: \"operation\",\r\n        render: (text, record) => {\r\n          return (\r\n            <span>\r\n              <Link\r\n                to={{\r\n                  pathname: \"/ModificationRetraiteProduit\",\r\n                  state: { record: record },\r\n                }}\r\n              >\r\n                {/* Modifier */}\r\n                <Icon\r\n                  type=\"edit\"\r\n                  style={{ color: \"rgb(119, 204, 109)\", fontSize: \"25px\" }}\r\n                />\r\n              </Link>\r\n              <Divider type=\"vertical\" />\r\n\r\n              <a onClick={() => this.handleClick(record)}>\r\n                <Icon\r\n                  type=\"profile\"\r\n                  style={{ color: \"rgb(109, 143, 204)\", fontSize: \"25px\" }}\r\n                />\r\n              </a>\r\n            </span>\r\n          );\r\n        },\r\n      },\r\n    ];\r\n  }\r\n  componentDidMount() {\r\n    this.getAllPeriodicite(this);\r\n    this.getAllExclusion(this);\r\n    this.getAllPointVentes(this);\r\n    this.getAllRisque(this);\r\n    this.getAllCategorie(this);\r\n    this.rechercheRetraiteProduit(this);\r\n  }\r\n\r\nrechercheRetraiteProduit = async (context) => {\r\n  getRetraiteProduit()\r\n    .then((response) => {\r\n      let newDataList = [];\r\n      response.data.content.forEach((element) => {\r\n        let key = { key: element.id };\r\n        element = { ...element, ...key };\r\n        newDataList.push(element);\r\n      });\r\n      context.setState({\r\n        data: newDataList,\r\n      });\r\n    })\r\n    .catch((error) => {\r\n      if (error.status === 401) {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            \"Votre login ou mot de passe est incorrect. Veuillez réessayer!\",\r\n        });\r\n      } else {\r\n        notification.error({\r\n          message: \"Takaful\",\r\n          description:\r\n            error.message ||\r\n            \"Désolé! Quelque chose s'est mal passé Veuillez réessayer!\",\r\n        });\r\n      }\r\n    });\r\n};\r\n\r\ngetAllExclusion = async (context) => {\r\n      let response = await getExclusion();\r\n      context.setState({\r\n        exclusion: response.data.content,\r\n      });\r\n    };\r\ngetAllRisque = async (context) => {\r\n  let response = await getRisque();\r\n  context.setState({\r\n    risques: response.data.content,\r\n  });\r\n};\r\n\r\ngetAllPointVentes = async (context) => {\r\n  let response = await getAllPointVente();\r\n  context.setState({\r\n    pointVente: response.data.content,\r\n  });\r\n};\r\n  getAllCategorie = async (context) => {\r\n    let response = await getCategorie();\r\n    context.setState({\r\n      categories: response.data.content,\r\n    });\r\n  };\r\n  getAllPeriodicite = async (context) => {\r\n    let response = await getPeriodicite();\r\n    context.setState({\r\n      periodicite: response.data.content,\r\n    });\r\n  };\r\n  handleClick = (value) => {\r\n    this.setState({ visible: true, isEdit: true, record: value });\r\n  };\r\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\r\n    confirm();\r\n    this.setState({\r\n      searchText: selectedKeys[0],\r\n      searchedColumn: dataIndex,\r\n    });\r\n  };\r\n  handleReset = (clearFilters) => {\r\n    clearFilters();\r\n    this.setState({ searchText: \"\" });\r\n  };\r\n  onClose = () => {\r\n    this.setState({\r\n      isEdited: false,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <MyContext.Provider\r\n          value={{\r\n            state: this.state.record,\r\n          }}\r\n        >\r\n          {this.state.isEdit ? (\r\n            <Details />\r\n          ) : (\r\n            <div>\r\n              <ComponentTitle title=\"Paramétrage produit retraite\" />\r\n              <Button type=\"primary\" className=\"add-button nouveau-btn\">\r\n                <Link to=\"/produitRetraite\">\r\n                  <Icon type=\"plus\" /> Nouveau produit retraite\r\n                </Link>\r\n              </Button>\r\n              <Table\r\n                bordered\r\n                rowClassName=\"editable-row\"\r\n                columns={this.columns}\r\n                dataSource={this.state.data}\r\n                pagination={{ defaultCurrent: 1, defaultPageSize: 5 }}\r\n              />\r\n            </div>\r\n          )}\r\n        </MyContext.Provider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create()(ConsultationRetraiteProduit);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Col, Divider, Form, Input, Row, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  formItemInputWithAddons,\r\n  formItemLayoutResponsive\r\n} from \"../../../../util/Helpers\";\r\nimport { getAllPartenaire } from \"../../partenaire/PartenaireAPI\";\r\nimport { getPeriodicite } from \"../../../GestionContrats/ContratsAPI\";\r\nimport { getCategorie } from \"../../ProduitDeces/ProduitDecesAPI\";\r\n\r\nconst produits = [\r\n  \"Epargne investissement Takaful Al Akhdar Bank – Retraite avec stratégie d’investissement active\",\r\n  \"EpargneinvestissementTakaful Al Yousr Bank – Retraiteavec stratégie d’investissement active\",\r\n  \"Epargne investissement Takaful Bureaux directs – Retraite avec stratégie d’investissement active\"\r\n];\r\nconst { Option } = Select;\r\nclass StepOne extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      categories: [],\r\n      periodicite: [],\r\n      partenaires: []\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getAllCategorie();\r\n    this.getAllPeriodicite();\r\n    this.getAllPartenaires();\r\n  }\r\n\r\n  async getAllPartenaires() {\r\n    let response = await getAllPartenaire();\r\n    this.setState({\r\n      partenaires: response.data.content\r\n    });\r\n  }\r\n  async getAllPeriodicite() {\r\n    let response = await getPeriodicite();\r\n    this.setState({\r\n      periodicite: response.data.content\r\n    });\r\n  }\r\n  async getAllCategorie() {\r\n    let response = await getCategorie();\r\n    this.setState({\r\n      categories: response.data.content\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayoutResponsive} id=\"formadd\">\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Informations générales</Divider>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Form.Item label=\"Catégorie\" hasFeedback>\r\n                {getFieldDecorator(\"categorie\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez une catégorie \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.categories.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Form.Item label=\"Intermediaire\" hasFeedback>\r\n                {getFieldDecorator(\"partenaire\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez un intermediaire \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.partenaires.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.raisonSocial}\r\n                        >\r\n                          {element.raisonSocial}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={10}>\r\n              <Form.Item label=\"Libelle\">\r\n                {getFieldDecorator(\"libelle\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez la libelle\"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select placeholder=\"-sélectionnez -\">\r\n                    {produits.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element}\r\n                          label={element}\r\n                        >\r\n                          {element}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={10}>\r\n              <Form.Item label=\"Abréviation\">\r\n                {getFieldDecorator(\"code\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"entrez le code \"\r\n                    }\r\n                  ]\r\n                })(<Input />)}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\"></Divider>\r\n            </Col>\r\n\r\n            <Col span={10}>\r\n              {formItemInputWithAddons(\r\n                \"Frais de gestion WAKALA\",\r\n                \"fraisGestion\",\r\n                \"%\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n            <Col span={10}>\r\n              {formItemInputWithAddons(\r\n                \"TVA frais de gestion\",\r\n                \"tvaFraisGestion\",\r\n                \"%\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n            <Col span={10}>\r\n              {formItemInputWithAddons(\r\n                \"Frais d'acquisition\",\r\n                \"fraisAcquisition\",\r\n                \"%\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n            <Col span={10}>\r\n              {formItemInputWithAddons(\r\n                \"TVA frais d'acquisition\",\r\n                \"tvaFraisGestion\",\r\n                \"%\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Périodicité</Divider>\r\n            </Col>\r\n            <Col span={20} offset={2}>\r\n              <Form.Item>\r\n                {\" \"}\r\n                {getFieldDecorator(\"periodicites\", {\r\n                  rules: [{ required: true, message: \"Champs Obligatoire !\" }]\r\n                })(\r\n                  <Select\r\n                    mode=\"multiple\"\r\n                    placeholder=\"Selectionnez ...\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.periodicite.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.abb}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      libelle: Form.createFormField({\r\n        ...props.libelle,\r\n        value: props.libelle.value\r\n      }),\r\n      code: Form.createFormField({\r\n        ...props.code,\r\n        value: props.code.value\r\n      }),\r\n      risque: Form.createFormField({\r\n        ...props.risque,\r\n        value: props.risque.value\r\n      }),\r\n      categorie: Form.createFormField({\r\n        ...props.categorie,\r\n        value: props.categorie.value\r\n      }),\r\n\r\n      partenaire: Form.createFormField({\r\n        ...props.partenaire,\r\n        value: props.partenaire.value\r\n      }),\r\n      periodicites: Form.createFormField({\r\n        ...props.periodicites,\r\n        value: props.periodicites.value\r\n      }),\r\n      fraisGestion: Form.createFormField({\r\n        ...props.fraisGestion,\r\n        value: props.fraisGestion.value\r\n      }),\r\n      tvaFraisGestion: Form.createFormField({\r\n        ...props.tvaFraisGestion,\r\n        value: props.tvaFraisGestion.value\r\n      }),\r\n      fraisAcquisition: Form.createFormField({\r\n        ...props.fraisAcquisition,\r\n        value: props.fraisAcquisition.value\r\n      }),\r\n      tvaFraisAcquisition: Form.createFormField({\r\n        ...props.tvaFraisAcquisition,\r\n        value: props.tvaFraisAcquisition.value\r\n      }),\r\n      montantAccessoire: Form.createFormField({\r\n        ...props.montantAccessoire,\r\n        value: props.montantAccessoire.value\r\n      }),\r\n      taxe: Form.createFormField({\r\n        ...props.taxe,\r\n        value: props.taxe.value\r\n      })\r\n    };\r\n  }\r\n})(StepOne);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Col, Divider, Form, Input, Radio, Row, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport {\r\n  formItemInputWithAddons,\r\n  formItemInputWithoutAddons\r\n} from \"../../../../util/Helpers\";\r\nimport { getPoolInvestissment } from \"../ProduitRetraiteAPI\";\r\nconst { Option } = Select;\r\nclass StepThree extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      poolInvestissments: [],\r\n      naturesFiscales: [\r\n        {\r\n          value: \"EPARGNE\",\r\n          name: \"Epargne\"\r\n        },\r\n        {\r\n          value: \"RETRAITE\",\r\n          name: \"Retraite complémentaire\"\r\n        }\r\n      ],\r\n      modesGestions: [\r\n        {\r\n          value: \"MOUDARABA\",\r\n          name: \"Moudaraba\"\r\n        },\r\n        {\r\n          value: \"WAKALABILISTITMAR\",\r\n          name: \"WakalabillIstithmar\"\r\n        }\r\n      ],\r\n      modeCapitalReconstitue: [\r\n        {\r\n          value: \"METHOD1\",\r\n          name:\r\n            \"Méthode 1 – Début de période + cotisations du mois (non investies\"\r\n        },\r\n        {\r\n          value: \"METHOD2\",\r\n          name: \"Méthode 2 – Fin de période\"\r\n        }\r\n      ],\r\n      regimeFiscal: [\r\n        {\r\n          value: \"RETRAITE\",\r\n          name: \"Retraite complémentaire\"\r\n        },\r\n        {\r\n          value: \"VIE\",\r\n          name: \"Vie capitalisation\"\r\n        }\r\n      ],\r\n      natureFiscale: this.props.record.natureFiscale,\r\n      abattementFiscal: true,\r\n      modeGestion: this.props.record.modeGestion,\r\n      revenuGlobal: this.props.record.revenuGlobal\r\n    };\r\n  }\r\n\r\n  onChangeNatureFiscale = e => {\r\n    this.setState({\r\n      natureFiscale: e\r\n    });\r\n  };\r\n\r\n  onChangeModeGestion = e => {\r\n    this.setState({\r\n      modeGestion: e\r\n    });\r\n  };\r\n\r\n  onChangeRevenuGlobal = e => {\r\n    this.setState({\r\n      revenuGlobal: e.target.value\r\n    });\r\n  };\r\n  onChangeAbattementFiscal = e => {\r\n    this.setState({\r\n      abattementFiscal: e.target.value,\r\n      revenuGlobal: e.target.value ? this.state.revenuGlobal : \"\"\r\n    });\r\n  };\r\n  componentDidMount() {\r\n    this.getAllPoolInvestissment(this);\r\n  }\r\n\r\n  getAllPoolInvestissment = async context => {\r\n    let response = await getPoolInvestissment();\r\n    context.setState({\r\n      poolInvestissments: response.data.content\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        xs: { span: 24 },\r\n        sm: { span: 24 },\r\n        md: { span: 15 },\r\n        lg: { span: 12 }\r\n      },\r\n      wrapperCol: {\r\n        xs: { span: 20 },\r\n        sm: { span: 20 },\r\n        md: { span: 9 },\r\n        lg: { span: 12 }\r\n      }\r\n    };\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayout} id=\"formadd\">\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Paramètres globaux</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              {formItemInputWithoutAddons(\r\n                \"Numéro Compte Takaful\",\r\n                \"numeroCompte\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n            <Col span={11}>\r\n              {formItemInputWithoutAddons(\r\n                \"Intitulé du compte Takaful\",\r\n                \"libelleCompte\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Pool d'investissement\" hasFeedback>\r\n                {getFieldDecorator(\"poolInvestissment\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez un pool \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select mode=\"multiple\" placeholder=\"Selectionnez ...\">\r\n                    {this.state.poolInvestissments.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.id}\r\n                          label={element.libelle}\r\n                        >\r\n                          {element.libelle}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Paramètres de fiscalité</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Nature fiscale \" hasFeedback>\r\n                {getFieldDecorator(\"natureFiscale\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez une nature fiscale \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.onChangeNatureFiscale}\r\n                  >\r\n                    {this.state.naturesFiscales.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.value}\r\n                          label={element.name}\r\n                        >\r\n                          {element.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            {this.state.natureFiscale === \"RETRAITE\" ? (\r\n              <Col span={11}>\r\n                <Form.Item label=\"Retraite avec abattement fiscale\">\r\n                  {getFieldDecorator(\"retraiteAbattementFiscale\", {\r\n                    valuePropName: \"unchecked\",\r\n                    initialValue: this.state.abattementFiscal\r\n                  })(\r\n                    <Radio.Group\r\n                      buttonStyle=\"solid\"\r\n                      defaultValue={this.state.abattementFiscal}\r\n                      onChange={this.onChangeAbattementFiscal}\r\n                    >\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            ) : null}\r\n\r\n            {this.state.abattementFiscal &&\r\n            this.state.natureFiscale === \"RETRAITE\" ? (\r\n              <Col span={11}>\r\n                <Form.Item label=\"Revenu global\">\r\n                  {getFieldDecorator(\"revenuGlobal\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        pattern: new RegExp(/[+-]?([0-9]*[.])?[0-9]+$/),\r\n                        message: \"Format invalide!\"\r\n                      }\r\n                    ]\r\n                  })(\r\n                    <Input\r\n                      value={this.state.revenuGlobal}\r\n                      addonAfter=\"DHS\"\r\n                      onChange={this.onChangeRevenuGlobal}\r\n                    />\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            ) : null}\r\n\r\n            <Col span={11}>\r\n              <Form.Item label=\"Régime fiscale \" hasFeedback>\r\n                {getFieldDecorator(\"regimeFiscal\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez un régime fiscale \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.regimeFiscal.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.value}\r\n                          label={element.name}\r\n                        >\r\n                          {element.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item\r\n                label={\r\n                  <label style={{ whiteSpace: \"normal\" }}>\r\n                    Taux Rendement Avant Imposition\r\n                  </label>\r\n                }\r\n              >\r\n                {getFieldDecorator(\"tauxRendementAvantImposition\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"Champs Obligatoire\"\r\n                    }\r\n                  ]\r\n                })(<Input addonAfter=\"%\" />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Paramètres de souscription</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item\r\n                label={\r\n                  <label style={{ whiteSpace: \"normal\" }}>\r\n                    Durée Minimale de Souscription\r\n                  </label>\r\n                }\r\n              >\r\n                {getFieldDecorator(\"dureeMinimalSouscription\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      pattern: new RegExp(/^[0-9\\b]+$/),\r\n                      message: \"Format invalide!\"\r\n                    }\r\n                  ]\r\n                })(<Input addonAfter=\"Mois\" />)}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item\r\n                label={\r\n                  <label style={{ whiteSpace: \"normal\" }}>\r\n                    Renouvellement Contrat par tacite de reconduction\r\n                  </label>\r\n                }\r\n              >\r\n                {getFieldDecorator(\"renouvellementContratTaciteReconduction\", {\r\n                  valuePropName: \"unchecked\",\r\n                  initialValue: false\r\n                })(\r\n                  <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    defaultValue={true}\r\n                    onChange={this.onChange}\r\n                  >\r\n                    <Radio.Button value={true}>Oui</Radio.Button>\r\n                    <Radio.Button value={false}>Non</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            <Col span={11}>\r\n              {formItemInputWithAddons(\r\n                \"Montant minimal de contribution\",\r\n                \"montantMinContribution\",\r\n                \"DHS\",\r\n                getFieldDecorator\r\n              )}\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Mode de gestion\" hasFeedback>\r\n                {getFieldDecorator(\"modeGestion\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez un mode de gestion \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.onChangeModeGestion}\r\n                  >\r\n                    {this.state.modesGestions.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.value}\r\n                          label={element.name}\r\n                        >\r\n                          {element.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            {this.state.modeGestion !== \"MOUDARABA\" ? (\r\n              <Col span={11}>\r\n                {formItemInputWithAddons(\r\n                  \"Frais fixe WAKALA BILISTITHMAR\",\r\n                  \"fraisFixeWakalabilIstithmar\",\r\n                  \"DHS\",\r\n                  getFieldDecorator\r\n                )}\r\n              </Col>\r\n            ) : null}\r\n\r\n            {this.state.modeGestion !== \"MOUDARABA\" ? (\r\n              <Col span={11}>\r\n                {formItemInputWithAddons(\r\n                  \"Superformance WAKALA BIL ISTITHMAR\",\r\n                  \"surperformanceWakalabilIstithmar\",\r\n                  \"%\",\r\n                  getFieldDecorator\r\n                )}\r\n              </Col>\r\n            ) : null}\r\n            {this.state.modeGestion === \"MOUDARABA\" ? (\r\n              <Col span={11}>\r\n                {formItemInputWithAddons(\r\n                  \"Profit Moudaraba\",\r\n                  \"profitMoudaraba\",\r\n                  \"%\",\r\n                  getFieldDecorator\r\n                )}\r\n              </Col>\r\n            ) : null}\r\n            <Col span={11}>\r\n              <Form.Item\r\n                label={\r\n                  <label style={{ whiteSpace: \"normal\" }}>\r\n                    Mode de Calcul du Capital Constitue\r\n                  </label>\r\n                }\r\n                hasFeedback\r\n              >\r\n                {getFieldDecorator(\"modeCalculCapitalConstitue\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez un mode de gestion \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    {this.state.modeCapitalReconstitue.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.value}\r\n                          label={element.name}\r\n                        >\r\n                          {element.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      numeroCompte: Form.createFormField({\r\n        ...props.numeroCompte,\r\n        value: props.numeroCompte.value\r\n      }),\r\n      libelleCompte: Form.createFormField({\r\n        ...props.libelleCompte,\r\n        value: props.libelleCompte.value\r\n      }),\r\n      natureFiscale: Form.createFormField({\r\n        ...props.natureFiscale,\r\n        value: props.natureFiscale.value\r\n      }),\r\n      tauxRendementAvantImposition: Form.createFormField({\r\n        ...props.tauxRendementAvantImposition,\r\n        value: props.tauxRendementAvantImposition.value\r\n      }),\r\n      revenuGlobal: Form.createFormField({\r\n        ...props.revenuGlobal,\r\n        value: props.revenuGlobal.value\r\n      }),\r\n      dureeMinimalSouscription: Form.createFormField({\r\n        ...props.dureeMinimalSouscription,\r\n        value: props.dureeMinimalSouscription.value\r\n      }),\r\n      renouvellementContratTaciteReconduction: Form.createFormField({\r\n        ...props.renouvellementContratTaciteReconduction,\r\n        value: props.renouvellementContratTaciteReconduction.value\r\n      }),\r\n      montantMinContribution: Form.createFormField({\r\n        ...props.montantMinContribution,\r\n        value: props.montantMinContribution.value\r\n      }),\r\n      modeGestion: Form.createFormField({\r\n        ...props.modeGestion,\r\n        value: props.modeGestion.value\r\n      }),\r\n      fraisFixeWakalabilIstithmar: Form.createFormField({\r\n        ...props.fraisFixeWakalabilIstithmar,\r\n        value: props.fraisFixeWakalabilIstithmar.value\r\n      }),\r\n      surperformanceWakalabilIstithmar: Form.createFormField({\r\n        ...props.surperformanceWakalabilIstithmar,\r\n        value: props.surperformanceWakalabilIstithmar.value\r\n      }),\r\n      profitMoudaraba: Form.createFormField({\r\n        ...props.profitMoudaraba,\r\n        value: props.profitMoudaraba.value\r\n      }),\r\n      modeCalculCapitalConstitue: Form.createFormField({\r\n        ...props.modeCalculCapitalConstitue,\r\n        value: props.modeCalculCapitalConstitue.value\r\n      }),\r\n      regimeFiscal: Form.createFormField({\r\n        ...props.regimeFiscal,\r\n        value: props.regimeFiscal.value\r\n      }),\r\n      poolInvestissment: Form.createFormField({\r\n        ...props.poolInvestissment,\r\n        value: props.poolInvestissment.value\r\n      })\r\n    };\r\n  }\r\n})(StepThree);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\n\r\nimport { Col, Divider, Form, Input, Radio, Row, Select } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  formItemInputWithAddons,\r\n  formItemLayoutResponsive\r\n} from \"../../../../util/Helpers\";\r\n\r\nconst { Option } = Select;\r\nclass StepTwo extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      conditionsDisciplinaires: [\r\n        {\r\n          value: \"FIXE\",\r\n          name: \"Montant fixe\"\r\n        },\r\n        {\r\n          value: \"POURCENTAGE\",\r\n          name: \"Pourcentage\"\r\n        },\r\n        {\r\n          value: \"ASAISIR\",\r\n          name: \"Montant à saisir\"\r\n        }\r\n      ],\r\n      rachatTotal: this.props.rachatTotal.value,\r\n      rachatPartiel: this.props.rachatPartiel.value,\r\n      conditionDisciplinairePartiel: this.props.conditionDisciplinairePartiel\r\n        .value,\r\n      conditionDisciplinaireTotale: this.props.conditionDisciplinaireTotale\r\n        .value,\r\n      natureConditionDisciplinairePartiel: this.props\r\n        .natureConditionDisciplinairePartiel.value,\r\n      natureConditionDisciplinaireTotale: this.props\r\n        .natureConditionDisciplinaireTotale.value\r\n    };\r\n  }\r\n  onChangeRachatTotal = e => {\r\n    this.setState({\r\n      rachatTotal: e.target.value\r\n    });\r\n  };\r\n  onChangeRachatPartiel = e => {\r\n    this.setState({\r\n      rachatPartiel: e.target.value\r\n    });\r\n  };\r\n  onChangeApplicationConditionDisciplinairePartiel = e => {\r\n    this.setState({\r\n      conditionDisciplinairePartiel: e.target.value\r\n    });\r\n  };\r\n\r\n  onChangeApplicationConditionDisciplinaireTotale = e => {\r\n    this.setState({\r\n      conditionDisciplinaireTotale: e.target.value\r\n    });\r\n  };\r\n\r\n  onChangeNatureConditionDisciplinairePartiel = e => {\r\n    this.setState({\r\n      natureConditionDisciplinairePartiel: e\r\n    });\r\n  };\r\n  onChangeNatureConditionDisciplinaireTotale = e => {\r\n    this.setState({\r\n      natureConditionDisciplinaireTotale: e\r\n    });\r\n  };\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n\r\n    return (\r\n      <Row>\r\n        <Col span={24} offset={1}>\r\n          <Form {...formItemLayoutResponsive} id=\"formadd\">\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Modalités de rachat total</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Application de rachat total \">\r\n                {getFieldDecorator(\"rachatTotal\", { initialValue: false })(\r\n                  <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    defaultValue={false}\r\n                    onChange={this.onChangeRachatTotal}\r\n                  >\r\n                    <Radio.Button value={true}>Oui</Radio.Button>\r\n                    <Radio.Button value={false}>Non</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            {this.state.rachatTotal ? (\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  label={\r\n                    <label style={{ whiteSpace: \"normal\" }}>\r\n                      Durée Minimale Souscription Avant Rachat Total\r\n                    </label>\r\n                  }\r\n                >\r\n                  {getFieldDecorator(\r\n                    \"dureeMinimalSouscriptionAvantRachatTotal\",\r\n                    {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          pattern: new RegExp(/^[0-9\\b]+$/),\r\n                          message: \"Format invalide!\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(<Input addonAfter=\"Mois\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            ) : null}\r\n            {this.state.rachatTotal ? (\r\n              <Col span={11}>\r\n                <Form.Item label=\"Application de la condition disciplinaire \">\r\n                  {getFieldDecorator(\"conditionDisciplinaireTotale\", {\r\n                    initialValue: false\r\n                  })(\r\n                    <Radio.Group\r\n                      buttonStyle=\"solid\"\r\n                      defaultValue={false}\r\n                      onChange={\r\n                        this.onChangeApplicationConditionDisciplinaireTotale\r\n                      }\r\n                    >\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            ) : null}\r\n            <Col span={11}>\r\n              <Form.Item\r\n                label={\r\n                  <label style={{ whiteSpace: \"normal\" }}>\r\n                    Nature de la condition disciplinaire\r\n                  </label>\r\n                }\r\n                hasFeedback\r\n              >\r\n                {getFieldDecorator(\"natureConditionDisciplinaireTotale\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez une condition \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.onChangeNatureConditionDisciplinaireTotale}\r\n                  >\r\n                    {this.state.conditionsDisciplinaires.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.value}\r\n                          label={element.name}\r\n                        >\r\n                          {element.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            {this.state.natureConditionDisciplinaireTotale !== \"ASAISIR\" ? (\r\n              <Col span={11}>\r\n                {formItemInputWithAddons(\r\n                  \"Valeur de la condition disciplinaire\",\r\n                  \"valeurConditionDisciplinaireTotale\",\r\n                  this.state.natureConditionDisciplinaireTotale === \"FIXE\"\r\n                    ? \"DHS\"\r\n                    : \"%\",\r\n                  getFieldDecorator\r\n                )}\r\n              </Col>\r\n            ) : null}\r\n\r\n            <Col span={20}>\r\n              <Divider orientation=\"left\">Modalités de rachat Partiel</Divider>\r\n            </Col>\r\n            <Col span={11}>\r\n              <Form.Item label=\"Application de rachat partiel \">\r\n                {getFieldDecorator(\"rachatPartiel\", {\r\n                  initialValue: false\r\n                })(\r\n                  <Radio.Group\r\n                    buttonStyle=\"solid\"\r\n                    defaultValue={false}\r\n                    onChange={this.onChangeRachatPartiel}\r\n                  >\r\n                    <Radio.Button value={true}>Oui</Radio.Button>\r\n                    <Radio.Button value={false}>Non</Radio.Button>\r\n                  </Radio.Group>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n\r\n            {this.state.rachatPartiel ? (\r\n              <Col span={11}>\r\n                <Form.Item\r\n                  label={\r\n                    <label style={{ whiteSpace: \"normal\" }}>\r\n                      Durée Minimale Souscription Avant Rachat Partiel\r\n                    </label>\r\n                  }\r\n                >\r\n                  {getFieldDecorator(\r\n                    \"dureeMinimalSouscriptionAvantRachatPartiel\",\r\n                    {\r\n                      rules: [\r\n                        {\r\n                          required: true,\r\n                          pattern: new RegExp(/^[0-9\\b]+$/),\r\n                          message: \"Format invalide!\"\r\n                        }\r\n                      ]\r\n                    }\r\n                  )(<Input addonAfter=\"Mois\" />)}\r\n                </Form.Item>\r\n              </Col>\r\n            ) : null}\r\n            {this.state.rachatPartiel ? (\r\n              <Col span={11}>\r\n                <Form.Item label=\"Application de la condition disciplinaire \">\r\n                  {getFieldDecorator(\"conditionDisciplinairePartiel\", {\r\n                    initialValue: false\r\n                  })(\r\n                    <Radio.Group\r\n                      buttonStyle=\"solid\"\r\n                      defaultValue={false}\r\n                      onChange={\r\n                        this.onChangeApplicationConditionDisciplinairePartiel\r\n                      }\r\n                    >\r\n                      <Radio.Button value={true}>Oui</Radio.Button>\r\n                      <Radio.Button value={false}>Non</Radio.Button>\r\n                    </Radio.Group>\r\n                  )}\r\n                </Form.Item>\r\n              </Col>\r\n            ) : null}\r\n            <Col span={11}>\r\n              <Form.Item\r\n                label={\r\n                  <label style={{ whiteSpace: \"normal\" }}>\r\n                    Nature de la condition disciplinaire\r\n                  </label>\r\n                }\r\n                hasFeedback\r\n              >\r\n                {getFieldDecorator(\"natureConditionDisciplinairePartiel\", {\r\n                  rules: [\r\n                    {\r\n                      required: true,\r\n                      message: \"choisissez une condition \"\r\n                    }\r\n                  ]\r\n                })(\r\n                  <Select\r\n                    placeholder=\"-sélectionnez -\"\r\n                    onChange={this.onChangeNatureConditionDisciplinairePartiel}\r\n                  >\r\n                    {this.state.conditionsDisciplinaires.map(element => {\r\n                      return (\r\n                        <Option\r\n                          key={element.id}\r\n                          value={element.value}\r\n                          label={element.name}\r\n                        >\r\n                          {element.name}\r\n                        </Option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                )}\r\n              </Form.Item>\r\n            </Col>\r\n            {this.state.natureConditionDisciplinairePartiel !== \"ASAISIR\" ? (\r\n              <Col span={11}>\r\n                {formItemInputWithAddons(\r\n                  \"Valeur de la condition disciplinaire\",\r\n                  \"valeurConditionDisciplinairePartiel\",\r\n                  this.state.natureConditionDisciplinairePartiel === \"FIXE\"\r\n                    ? \"DHS\"\r\n                    : \"%\",\r\n                  getFieldDecorator\r\n                )}\r\n              </Col>\r\n            ) : null}\r\n\r\n            {this.state.rachatPartiel ? (\r\n              <Col span={11}>\r\n                {formItemInputWithAddons(\r\n                  \"Valeur de la condition disciplinaire\",\r\n                  \"valeurConditionDisciplinairePartiel\",\r\n                  \"%\",\r\n                  getFieldDecorator\r\n                )}\r\n              </Col>\r\n            ) : null}\r\n            {this.state.rachatPartiel ? (\r\n              <Col span={11}>\r\n                <Form.Item label=\"Nombre maximum de rachat partiel\">\r\n                  {getFieldDecorator(\"nombreMaximumRachatPartiel\", {\r\n                    rules: [\r\n                      {\r\n                        required: true,\r\n                        message: \"Champs Obligatoire\"\r\n                      }\r\n                    ]\r\n                  })(<Input />)}\r\n                </Form.Item>\r\n              </Col>\r\n            ) : null}\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form.create({\r\n  name: \"global_state\",\r\n  onFieldsChange(props, changedFields) {\r\n    props.onChange(changedFields);\r\n  },\r\n  mapPropsToFields(props) {\r\n    return {\r\n      rachatTotal: Form.createFormField({\r\n        ...props.rachatTotal,\r\n        value: props.rachatTotal.value\r\n      }),\r\n      dureeMinimalSouscriptionAvantRachatTotal: Form.createFormField({\r\n        ...props.dureeMinimalSouscriptionAvantRachatTotal,\r\n        value: props.dureeMinimalSouscriptionAvantRachatTotal.value\r\n      }),\r\n      conditionDisciplinaireTotale: Form.createFormField({\r\n        ...props.conditionDisciplinaireTotale,\r\n        value: props.conditionDisciplinaireTotale.value\r\n      }),\r\n      natureConditionDisciplinaireTotale: Form.createFormField({\r\n        ...props.natureConditionDisciplinaireTotale,\r\n        value: props.natureConditionDisciplinaireTotale.value\r\n      }),\r\n      valeurConditionDisciplinaireTotale: Form.createFormField({\r\n        ...props.valeurConditionDisciplinaireTotale,\r\n        value: props.valeurConditionDisciplinaireTotale.value\r\n      }),\r\n      rachatPartiel: Form.createFormField({\r\n        ...props.rachatPartiel,\r\n        value: props.rachatPartiel.value\r\n      }),\r\n      dureeMinimalSouscriptionAvantRachatPartiel: Form.createFormField({\r\n        ...props.dureeMinimalSouscriptionAvantRachatPartiel,\r\n        value: props.dureeMinimalSouscriptionAvantRachatPartiel.value\r\n      }),\r\n      conditionDisciplinairePartiel: Form.createFormField({\r\n        ...props.conditionDisciplinairePartiel,\r\n        value: props.conditionDisciplinairePartiel.value\r\n      }),\r\n      natureConditionDisciplinairePartiel: Form.createFormField({\r\n        ...props.natureConditionDisciplinairePartiel,\r\n        value: props.natureConditionDisciplinairePartiel.value\r\n      }),\r\n      valeurConditionDisciplinairePartiel: Form.createFormField({\r\n        ...props.valeurConditionDisciplinairePartiel,\r\n        value: props.valeurConditionDisciplinairePartiel.value\r\n      }),\r\n      maximumMontantRachatPartiel: Form.createFormField({\r\n        ...props.maximumMontantRachatPartiel,\r\n        value: props.maximumMontantRachatPartiel.value\r\n      }),\r\n      nombreMaximumRachatPartiel: Form.createFormField({\r\n        ...props.nombreMaximumRachatPartiel,\r\n        value: props.nombreMaximumRachatPartiel.value\r\n      })\r\n    };\r\n  }\r\n})(StepTwo);\r\n","/* eslint-disable react/prop-types */\r\nimport \"antd/dist/antd.css\";\r\nimport { Button, Icon, notification, Steps } from \"antd\";\r\nimport React, { Component } from \"react\";\r\nimport { formatDateToFormatOne } from \"../../../../util/Helpers\";\r\nimport StepOne from \"./StepOne\";\r\nimport StepThree from \"./StepThree\";\r\nimport StepTwo from \"./StepTwo\";\r\nimport { getHonoraire } from \"../../Honoraires/HonorairesAPI\";\r\nimport { updateRetraiteProduct } from \"../ProduitRetraiteAPI\";\r\n\r\nconst { Step } = Steps;\r\nlet Hon = {};\r\nclass ModificationRetraiteProduit extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      current: 0,\r\n      honoraire: {},\r\n      fields: {\r\n        // ///////////Step1//////////////////////\r\n        risque: { value: this.props.record.location.state.record.risque.id },\r\n        categorie: {\r\n          value: this.props.record.location.state.record.categorie.id\r\n        },\r\n        partenaire: {\r\n          value: this.props.record.location.state.record.partenaire.id\r\n        },\r\n        periodicites: {\r\n          value: this.props.record.location.state.record.periodicites.map(\r\n            element => {\r\n              return element.id;\r\n            }\r\n          )\r\n        },\r\n        numeroHomologation: {\r\n          value: this.props.record.location.state.record.numeroHomologation\r\n        },\r\n        dateHomologation: {\r\n          value: this.props.record.location.state.record.dateHomologation\r\n        },\r\n        libelle: { value: this.props.record.location.state.record.libelle },\r\n        code: { value: this.props.record.location.state.record.code },\r\n        fraisGestion: {\r\n          value: this.props.record.location.state.record.fraisGestion\r\n        },\r\n        fraisAcquisition: {\r\n          value: this.props.record.location.state.record.fraisAcquisition\r\n        },\r\n        tvaFraisAcquisition: {\r\n          value: this.props.record.location.state.record.tvaFraisAcquisition\r\n        },\r\n        tvaFraisGestion: {\r\n          value: this.props.record.location.state.record.tvaFraisGestion\r\n        },\r\n        montantAccessoire: {\r\n          value: this.props.record.location.state.record.montantAccessoire\r\n        },\r\n        taxe: { value: this.props.record.location.state.record.taxe },\r\n        rachatTotal: {\r\n          value: this.props.record.location.state.record.rachatTotal\r\n        },\r\n\r\n        dureeMinimalSouscriptionAvantRachatTotal: {\r\n          value: this.props.record.location.state.record\r\n            .dureeMinimalSouscriptionAvantRachatTotal\r\n        },\r\n        conditionDisciplinaireTotale: {\r\n          value: this.props.record.location.state.record\r\n            .conditionDisciplinaireTotale\r\n        },\r\n        natureConditionDisciplinaireTotale: {\r\n          value: this.props.record.location.state.record\r\n            .natureConditionDisciplinaireTotale\r\n        },\r\n        valeurConditionDisciplinaireTotale: {\r\n          value: this.props.record.location.state.record\r\n            .valeurConditionDisciplinaireTotale\r\n        },\r\n        rachatPartiel: {\r\n          value: this.props.record.location.state.record.rachatPartiel\r\n        },\r\n        dureeMinimalSouscriptionAvantRachatPartiel: {\r\n          value: this.props.record.location.state.record\r\n            .dureeMinimalSouscriptionAvantRachatPartiel\r\n        },\r\n        conditionDisciplinairePartiel: {\r\n          value: this.props.record.location.state.record\r\n            .conditionDisciplinairePartiel\r\n        },\r\n        natureConditionDisciplinairePartiel: {\r\n          value: this.props.record.location.state.record\r\n            .natureConditionDisciplinairePartiel\r\n        },\r\n        valeurConditionDisciplinairePartiel: {\r\n          value: this.props.record.location.state.record\r\n            .valeurConditionDisciplinairePartiel\r\n        },\r\n        maximumMontantRachatPartiel: {\r\n          value: this.props.record.location.state.record\r\n            .maximumMontantRachatPartiel\r\n        },\r\n        nombreMaximumRachatPartiel: {\r\n          value: this.props.record.location.state.record\r\n            .nombreMaximumRachatPartiel\r\n        },\r\n\r\n        numeroCompte: {\r\n          value: this.props.record.location.state.record.numeroCompte\r\n        },\r\n        libelleCompte: {\r\n          value: this.props.record.location.state.record.libelleCompte\r\n        },\r\n        natureFiscale: {\r\n          value: this.props.record.location.state.record.natureFiscale\r\n        },\r\n        revenuGlobal: {\r\n          value: this.props.record.location.state.record.revenuGlobal\r\n        },\r\n        tauxRendementAvantImposition: {\r\n          value: this.props.record.location.state.record\r\n            .tauxRendementAvantImposition\r\n        },\r\n        dureeMinimalSouscription: {\r\n          value: this.props.record.location.state.record\r\n            .dureeMinimalSouscription\r\n        },\r\n        renouvellementContratTaciteReconduction: {\r\n          value: this.props.record.location.state.record\r\n            .renouvellementContratTaciteReconduction\r\n        },\r\n        montantMinContribution: {\r\n          value: this.props.record.location.state.record.montantMinContribution\r\n        },\r\n        modeGestion: {\r\n          value: this.props.record.location.state.record.modeGestion\r\n        },\r\n        fraisFixeWakalabilIstithmar: {\r\n          value: this.props.record.location.state.record\r\n            .fraisFixeWakalabilIstithmar\r\n        },\r\n        surperformanceWakalabilIstithmar: {\r\n          value: this.props.record.location.state.record\r\n            .surperformanceWakalabilIstithmar\r\n        },\r\n        profitMoudaraba: {\r\n          value: this.props.record.location.state.record.profitMoudaraba\r\n        },\r\n        modeCalculCapitalConstitue: {\r\n          value: this.props.record.location.state.record\r\n            .modeCalculCapitalConstitue\r\n        },\r\n        regimeFiscal: {\r\n          value: this.props.record.location.state.record.regimeFiscal\r\n        },\r\n        poolInvestissment: {\r\n          value: this.props.record.location.state.record.poolInvestissment.map(\r\n            element => {\r\n              return element.id;\r\n            }\r\n          )\r\n        }\r\n      }\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    this.getAllHonoraire();\r\n  }\r\n  async getAllHonoraire() {\r\n    let response = await getHonoraire();\r\n    Hon = response.data.content;\r\n  }\r\n\r\n  checkForm1Validity() {\r\n    return (\r\n      this.state.fields.libelle.value !== \"\" &&\r\n      this.state.fields.code.value !== \"\" &&\r\n      this.state.fields.fraisAcquisition.value !== \"\" &&\r\n      this.state.fields.fraisGestion.value !== \"\" &&\r\n      this.state.fields.taxe.value !== \"\" &&\r\n      this.state.fields.tvaFraisAcquisition.value !== \"\" &&\r\n      this.state.fields.tvaFraisGestion.value !== \"\" &&\r\n      this.state.fields.periodicites.value.length !== 0\r\n    );\r\n  }\r\n  checkForm2Validity() {\r\n    let checkRachatPartiel = true;\r\n    let checkRachatTotal = true;\r\n    if (this.state.fields.rachatTotal.value) {\r\n      if (\r\n        this.state.fields.natureConditionDisciplinaireTotale.value !== \"ASAISIR\"\r\n      ) {\r\n        checkRachatTotal =\r\n          this.state.fields.dureeMinimalSouscriptionAvantRachatTotal.value !==\r\n            \"\" &&\r\n          this.state.fields.valeurConditionDisciplinaireTotale.value !== \"\";\r\n      }\r\n    }\r\n\r\n    if (this.state.fields.rachatPartiel.value) {\r\n      if (\r\n        this.state.fields.natureConditionDisciplinairePartiel.value !==\r\n        \"ASAISIR\"\r\n      ) {\r\n        checkRachatPartiel =\r\n          this.state.fields.dureeMinimalSouscriptionAvantRachatPartiel.value !==\r\n            \"\" &&\r\n          this.state.fields.valeurConditionDisciplinairePartiel.value !== \"\" &&\r\n          this.state.fields.maximumMontantRachatPartiel.value !== \"\" &&\r\n          this.state.fields.nombreMaximumRachatPartiel.value !== \"\";\r\n      }\r\n    }\r\n    return checkRachatPartiel && checkRachatTotal;\r\n  }\r\n  checkForm3Validity() {\r\n    let checkMoudaraba,\r\n      checkWakalaBilIstithmar,\r\n      validityOfOtherFields = false;\r\n\r\n    checkMoudaraba =\r\n      this.state.fields.modeGestion.value === \"MOUDARABA\" ? true : false;\r\n    checkWakalaBilIstithmar =\r\n      this.state.fields.modeGestion.value !== \"MOUDARABA\" ? true : false;\r\n\r\n    validityOfOtherFields =\r\n      this.state.fields.libelleCompte.value !== \"\" &&\r\n      this.state.fields.numeroCompte.value !== \"\" &&\r\n      this.state.fields.montantMinContribution.value !== \"\" &&\r\n      this.state.fields.dureeMinimalSouscription.value !== \"\" &&\r\n      this.state.fields.tauxRendementAvantImposition.value !== \"\" &&\r\n      this.state.fields.poolInvestissment.value.length !== 0;\r\n    if (checkMoudaraba) {\r\n      return (\r\n        validityOfOtherFields && this.state.fields.profitMoudaraba.value !== \"\"\r\n      );\r\n    }\r\n    if (checkWakalaBilIstithmar) {\r\n      return (\r\n        validityOfOtherFields &&\r\n        this.state.fields.fraisFixeWakalabilIstithmar.value !== \"\" &&\r\n        this.state.fields.surperformanceWakalabilIstithmar.value !== \"\"\r\n      );\r\n    }\r\n  }\r\n  next() {\r\n    const current = this.state.current + 1;\r\n    this.setState({ current });\r\n  }\r\n  prev() {\r\n    const current = this.state.current - 1;\r\n    this.setState({ current });\r\n  }\r\n  handleFormChange = changedFields => {\r\n    this.setState(({ fields }) => ({\r\n      fields: { ...fields, ...changedFields }\r\n    }));\r\n  };\r\n  handleSubmit() {\r\n    if (this.state.current === 2) {\r\n      let periodicit = [];\r\n      let poolInvestissments = [];\r\n      this.state.fields.periodicites.value.forEach(element => {\r\n        periodicit.push({ id: element });\r\n      });\r\n\r\n      this.state.fields.poolInvestissment.value.forEach(element => {\r\n        poolInvestissments.push({ id: element });\r\n      });\r\n\r\n      let productRequest = {\r\n        id: this.props.record.location.state.record.id,\r\n        creationDate: this.props.record.location.state.record.creationDate,\r\n        code: this.state.fields.code.value,\r\n        libelle: this.state.fields.libelle.value,\r\n        fraisGestion: this.state.fields.fraisGestion.value,\r\n        fraisAcquisition: this.state.fields.fraisAcquisition.value,\r\n        tvaFraisGestion: this.state.fields.tvaFraisGestion.value,\r\n        tvaFraisAcquisition: this.state.fields.tvaFraisAcquisition.value,\r\n        periodicites: periodicit,\r\n        risque: {\r\n          id: this.state.fields.risque.value\r\n        },\r\n        categorie: {\r\n          id: this.state.fields.categorie.value\r\n        },\r\n        partenaire: {\r\n          id: this.state.fields.partenaire.value\r\n        },\r\n        rachatTotal: this.state.fields.rachatTotal.value,\r\n        dureeMinimalSouscriptionAvantRachatTotal: this.state.fields\r\n          .dureeMinimalSouscriptionAvantRachatTotal.value,\r\n        conditionDisciplinaireTotale: this.state.fields\r\n          .conditionDisciplinaireTotale.value,\r\n        natureConditionDisciplinaireTotale: this.state.fields\r\n          .natureConditionDisciplinaireTotale.value,\r\n        valeurConditionDisciplinaireTotale: this.state.fields\r\n          .valeurConditionDisciplinaireTotale.value,\r\n        rachatPartiel: this.state.fields.rachatPartiel.value,\r\n        dureeMinimalSouscriptionAvantRachatPartiel: this.state.fields\r\n          .dureeMinimalSouscriptionAvantRachatPartiel.value,\r\n        conditionDisciplinairePartiel: this.state.fields\r\n          .conditionDisciplinairePartiel.value,\r\n        natureConditionDisciplinairePartiel: this.state.fields\r\n          .natureConditionDisciplinairePartiel.value,\r\n        valeurConditionDisciplinairePartiel: this.state.fields\r\n          .valeurConditionDisciplinairePartiel.value,\r\n        maximumMontantRachatPartiel: this.state.fields\r\n          .maximumMontantRachatPartiel.value,\r\n        tauxRendementAvantImposition: this.state.fields\r\n          .tauxRendementAvantImposition.value,\r\n        nombreMaximumRachatPartiel: this.state.fields.nombreMaximumRachatPartiel\r\n          .value,\r\n\r\n        numeroCompte: this.state.fields.numeroCompte.value,\r\n        libelleCompte: this.state.fields.libelleCompte.value,\r\n        dateModification: formatDateToFormatOne(new Date()),\r\n        poolInvestissment: poolInvestissments,\r\n        natureFiscale: this.state.fields.natureFiscale.value,\r\n        revenuGlobal: this.state.fields.revenuGlobal.value,\r\n        dureeMinimalSouscription: this.state.fields.dureeMinimalSouscription\r\n          .value,\r\n        renouvellementContratTaciteReconduction: this.state.fields\r\n          .renouvellementContratTaciteReconduction.value,\r\n        montantMinContribution: this.state.fields.montantMinContribution.value,\r\n        modeGestion: this.state.fields.modeGestion.value,\r\n        fraisFixeWakalabilIstithmar: this.state.fields\r\n          .fraisFixeWakalabilIstithmar.value,\r\n        surperformanceWakalabilIstithmar: this.state.fields\r\n          .surperformanceWakalabilIstithmar.value,\r\n        profitMoudaraba: this.state.fields.profitMoudaraba.value,\r\n        modeCalculCapitalConstitue: this.state.fields.modeCalculCapitalConstitue\r\n          .value,\r\n        numeroHomologation: this.state.fields.numeroHomologation.value,\r\n        dateHomologation: this.state.fields.dateHomologation.value,\r\n        taxe: this.state.fields.taxe.value,\r\n        montantAccessoire: this.state.fields.montantAccessoire.value,\r\n        regimeFiscal: this.state.fields.regimeFiscal.value\r\n      };\r\n      updateRetraiteProduct(\r\n        this.props.record.location.state.record.id,\r\n        productRequest\r\n      )\r\n        .then(response => {\r\n          notification.success({\r\n            message: \"TAKAFUL\",\r\n            description: \"La modification est bien faite\"\r\n          });\r\n          this.props.record.history.push(\"/consultproduitretraite\");\r\n        })\r\n        .catch(error => {\r\n          notification.error({\r\n            message: \"TAKAFUL\",\r\n            description:\r\n              error.message || \"Sorry! Something went wrong. Please try again!\"\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { current, fields } = this.state;\r\n    const steps = [\r\n      {\r\n        title: \"Etape 1\",\r\n        content: (\r\n          <StepOne\r\n            record={this.props.record.location.state.record}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Informations générales \"\r\n      },\r\n      {\r\n        title: \"Etape 2\",\r\n        content: (\r\n          <StepTwo\r\n            record={this.props.record.location.state.record}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Modalités de Rachat\"\r\n      },\r\n      {\r\n        title: \"Etape 3\",\r\n        content: (\r\n          <StepThree\r\n            record={this.props.record.location.state.record}\r\n            honoraire={Hon}\r\n            {...fields}\r\n            onChange={this.handleFormChange}\r\n          />\r\n        ),\r\n        description: \"Paramètres globaux\"\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <div>\r\n        <Steps current={current}>\r\n          {steps.map(item => (\r\n            <Step\r\n              key={item.title}\r\n              title={item.title}\r\n              description={item.description}\r\n            />\r\n          ))}\r\n        </Steps>\r\n        <div className=\"steps-content-style\">{steps[current].content}</div>\r\n        <div className=\"steps-action\">\r\n          {current > 0 && (\r\n            <Button onClick={() => this.prev()}>\r\n              <Icon type=\"arrow-left\" />\r\n              Précédent\r\n            </Button>\r\n          )}\r\n          {current < steps.length - 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{\r\n                marginLeft: \"25px\"\r\n              }}\r\n              onClick={() => {\r\n                if (this.state.current === 0) {\r\n                  if (this.checkForm1Validity()) {\r\n                    this.next();\r\n                  }\r\n                }\r\n                if (this.state.current === 1) {\r\n                  if (this.checkForm2Validity()) {\r\n                    this.next();\r\n                  }\r\n                }\r\n              }}\r\n            >\r\n              Suivant\r\n              <Icon type=\"arrow-right\" />\r\n            </Button>\r\n          )}\r\n\r\n          {current === steps.length - 1 && (\r\n            <Button\r\n              type=\"primary\"\r\n              style={{ marginLeft: 8 }}\r\n              onClick={() => {\r\n                if (this.checkForm3Validity()) {\r\n                  this.handleSubmit();\r\n                }\r\n              }}\r\n            >\r\n              <Icon type=\"save\" />\r\n              Enregistrer\r\n            </Button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ModificationRetraiteProduit;\r\n","/* eslint-disable react/prop-types */\r\nimport { Divider, Layout, notification } from \"antd\";\r\nimport Sider from \"antd/lib/layout/Sider\";\r\nimport React, { Component } from \"react\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport AppHeader from \"../common/AppHeader\";\r\nimport LoadingIndicator from \"../common/LoadingIndicator\";\r\nimport NotFound from \"../common/NotFound\";\r\nimport { ACCESS_TOKEN } from \"../constants/index\";\r\nimport Acceuil from \"../menutakaful/Acceuil/Acceuil\";\r\nimport Users from \"../menutakaful/Administration/Users/Users\";\r\nimport Restitutions from \"../menutakaful/Parametrage/Restitutions/Restitutions\";\r\nimport Participant from \"../menutakaful/Participants/Participant\";\r\nimport AllParticipant from \"../menutakaful/Participants/AllParticipant\";\r\nimport Auxiliaires from \"../menutakaful/Parametrage/Auxiliaires/auxiliaires\";\r\nimport Honoraires from \"../menutakaful/Parametrage/Honoraires/Honoraires\";\r\n\r\nimport TypePrestation from \"../menutakaful/Parametrage/TypePrestation/TypePrestation\";\r\nimport CauseRestitution from \"../menutakaful/Parametrage/CauseRestitution/CauseRestitution\";\r\n\r\nimport MenuTakaful from \"../menutakaful/MenuTakaful\";\r\nimport Login from \"../user/login/Login\";\r\nimport Profile from \"../user/profile/Profile\";\r\nimport \"./App.css\";\r\nimport Partenaire from \"../menutakaful/Parametrage/partenaire/Partenaire\";\r\nimport CreatePartenaire from \"../menutakaful/Parametrage/partenaire/CreatePartenaire\";\r\nimport TypeAvenant from \"../menutakaful/Parametrage/avenant/TypeAvenant\";\r\nimport CreateTypeAvenant from \"../menutakaful/Parametrage/avenant/CreateTypeAvenant\";\r\nimport PointVente from \"../menutakaful/Parametrage/pointvente/PointVente\";\r\nimport RolesAndPermission from \"../menutakaful/Administration/roles and permissions/RolesAndPermission\";\r\nimport ProduitDeces from \"../menutakaful/Parametrage/ProduitDeces/ProduitDeces\";\r\nimport ProduitRetraite from \"../menutakaful/Parametrage/ProduitRetraite/ProduitRetraite\";\r\nimport ConsultProduitDeces from \"../menutakaful/Parametrage/ProduitDeces/ConsultProduitDeces\";\r\nimport Souscription from \"../menutakaful/Production Prestations/Souscription/Souscription\";\r\nimport ConsultDecesContrat from \"../menutakaful/GestionContrats/ConsultDecesContrat\";\r\nimport Agenda from \"../menutakaful/Utilitaire/Agenda\";\r\nimport GestionAcceptation from \"../menutakaful/Production Prestations/GestionAcceptation/GestionAcceptation\";\r\nimport ModificationAcceptation from \"../menutakaful/Production Prestations/GestionAcceptation/ModificationAcceptation\";\r\nimport ConsultationAcceptation from \"../menutakaful/Production Prestations/GestionAcceptation/ConsultationAcceptation\";\r\nimport DetailsContrat from \"../menutakaful/GestionContrats/DetailsContrat\";\r\nimport Modification from \"../menutakaful/Parametrage/ProduitDeces/Modification/Modification\";\r\nimport Honoraire from \"../menutakaful/Production Prestations/Honoraire/Honoraire\";\r\n//import Discussion from \"../menutakaful/Utilitaire/disccussion/Discussion\";\r\nimport MultirisqueBatiment from \"../menutakaful/MRB/MultirisqueBatiment\";\r\nimport ConsultationsContratsMrb from \"../menutakaful/MRB/ConsultationsContratsMrb\";\r\nimport Reglement from \"../menutakaful/GestionContrats/DetailsTabs/Reglement\";\r\nimport ProduitMRB from \"../menutakaful/MRB/ProduitMrb/ProduitMRB\";\r\nimport AjoutProduit from \"../menutakaful/MRB/ProduitMrb/AjoutProduit\";\r\nimport ModifieProduitMRB from \"../menutakaful/MRB/ProduitMrb/ModifieProduitMRB\";\r\nimport Global from \"../menutakaful/TableauBord/Global\";\r\nimport GestionImpayes from \"../menutakaful/TableauBord/GestionImpayes\";\r\nimport Comptabilite from \"../menutakaful/TableauBord/Comptabilite\";\r\nimport Simulation from \"../menutakaful/Utilitaire/simulation/Simulation\";\r\nimport SimulationMrb from \"../menutakaful/Utilitaire/simulation/SimulationMrb\";\r\nimport ConsultaionRetraiteProduit from \"../menutakaful/Parametrage/ProduitRetraite/ConsultationRetraiteProduit\";\r\nimport ModificationRetraiteProduit from \"../menutakaful/Parametrage/ProduitRetraite/Modification/ModificationRetraiteProduit\";\r\nimport ConsultRetraiteContrat from \"../menutakaful/GestionContrats/RetraiteContrat/ConsultRetraiteContrat/ConsultRetraiteContrat\";\r\nimport SouscriptionRetraiteContrat from \"../menutakaful/GestionContrats/RetraiteContrat/SouscriptionRetraiteContrat/SouscriptionRetraiteContrat\";\r\nimport EchangeFichiers from \"../menutakaful/EchangeFichiersInformatiques/EchangeFichiers\";\r\nimport { getCurrentUser } from \"../user/UserAPI\";\r\nconst { Content, Footer } = Layout;\r\nconst connectedUserContext = React.createContext({ user: {} });\r\nvar event = \"\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      collapsed: false,\r\n      currentUser: null,\r\n      isAuthenticated: false,\r\n      isLoading: false\r\n    };\r\n    this.handleLogout = this.handleLogout.bind(this);\r\n    this.loadCurrentUser = this.loadCurrentUser.bind(this);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    notification.config({\r\n      placement: \"topRight\",\r\n      top: 70,\r\n      duration: 3\r\n    });\r\n  }\r\n\r\n  loadCurrentUser() {\r\n    this.setState({\r\n      isLoading: true\r\n    });\r\n    getCurrentUser()\r\n      .then(response => {\r\n        this.setState({\r\n          currentUser: response.data,\r\n          isAuthenticated: true,\r\n          isLoading: false\r\n        });\r\n      })\r\n      .catch(error => {\r\n        this.setState({\r\n          isLoading: false\r\n        });\r\n      });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadCurrentUser();\r\n  }\r\n\r\n  handleLogout(\r\n    redirectTo = \"/\",\r\n    notificationType = \"success\",\r\n    description = \"Vous êtes déconnecté avec succès.\"\r\n  ) {\r\n    localStorage.removeItem(ACCESS_TOKEN);\r\n    this.setState({\r\n      currentUser: null,\r\n      isAuthenticated: false\r\n    });\r\n    this.props.history.push(redirectTo);\r\n    notification[notificationType]({\r\n      message: \"TAKAFUL\",\r\n      description: description\r\n    });\r\n  }\r\n\r\n  handleLogin() {\r\n    notification.success({\r\n      message: \"TAKAFUL\",\r\n      description: \"Vous êtes connecté avec succès.\"\r\n    });\r\n    this.loadCurrentUser();\r\n    this.props.history.push(\"/\");\r\n  }\r\n\r\n  onCollapse = collapsed => {\r\n    this.setState({ collapsed });\r\n  };\r\n\r\n  render() {\r\n    if (this.state.isLoading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n    let acceuilM;\r\n    if (this.state.isAuthenticated === true) {\r\n      for (let index of this.state.currentUser.events) {\r\n        var now = new Date();\r\n        var now1;\r\n        now1 = new Date(index.eventStartDate);\r\n        let start = new Date(\r\n          now.getFullYear(),\r\n          now.getMonth(),\r\n          now.getDate(),\r\n          now.getHours(),\r\n          now.getMinutes()\r\n        );\r\n        let startEvent = new Date(\r\n          now1.getFullYear(),\r\n          now1.getMonth(),\r\n          now1.getDate(),\r\n          now1.getHours(),\r\n          now1.getMinutes()\r\n        );\r\n        var diff = Math.abs(start - startEvent);\r\n        var minutes = Math.floor(diff / 1000 / 60);\r\n\r\n        if (startEvent > start && minutes <= 30) {\r\n          event = index.eventDescription;\r\n          const btn = (\r\n            <a href=\"#top\" onClick={() => this.props.history.push(\"/agenda\")}>\r\n              plus de détails\r\n            </a>\r\n          );\r\n          notification.info({\r\n            message: \"RAPPEL\",\r\n            description:\r\n              \"vous avez \" + event + \" d'ici \" + minutes + \" minutes\",\r\n            btn\r\n          });\r\n        }\r\n      }\r\n\r\n      acceuilM = (\r\n        <connectedUserContext.Provider value={this.state.currentUser}>\r\n          <Layout style={{ minHeight: \"100vh\" }}>\r\n            <Sider\r\n              width={240}\r\n              style={{ backgroundColor: \"#fff\" }}\r\n              collapsible\r\n              collapsed={this.state.collapsed}\r\n              onCollapse={this.onCollapse}\r\n            >\r\n              <MenuTakaful\r\n                isAuthenticated={this.state.isAuthenticated}\r\n                currentUser={this.state.currentUser}\r\n                handleLogout={this.handleLogout}\r\n              />\r\n            </Sider>\r\n            <Divider className=\"menu-divider\" type=\"vertical\" />\r\n\r\n            <Layout>\r\n              <AppHeader\r\n                isAuthenticated={this.state.isAuthenticated}\r\n                currentUser={this.state.currentUser}\r\n                onLogout={this.handleLogout}\r\n              />\r\n              <div style={{ margin: \"8px 16px\" }}></div>\r\n              <Content style={{ margin: \"0px 16px\" }}>\r\n                <div\r\n                  style={{\r\n                    padding: 40,\r\n                    background: \"#fff\",\r\n                    borderTop: \"3px solid #e6e4e4\"\r\n                  }}\r\n                >\r\n                  <Switch>\r\n                    <Route exact path=\"/\" render={() => <Acceuil />}>\r\n                      {\" \"}\r\n                    </Route>\r\n\r\n                    <Route\r\n                      name=\"partenaire\"\r\n                      path=\"/getAllBranche\"\r\n                      render={() => <Partenaire />}\r\n                    ></Route>\r\n                    <Route\r\n                      path=\"/CreatePartenaire\"\r\n                      render={() => <CreatePartenaire />}\r\n                    ></Route>\r\n                    <Route\r\n                      path=\"/avenant\"\r\n                      render={() => <TypeAvenant />}\r\n                    ></Route>\r\n                    <Route\r\n                      path=\"/CreateTypeAvenant\"\r\n                      render={() => <CreateTypeAvenant />}\r\n                    ></Route>\r\n                    <Route\r\n                      path=\"/PointVente\"\r\n                      render={() => <PointVente />}\r\n                    ></Route>\r\n\r\n                    <Route\r\n                      name=\"Restitutions\"\r\n                      path=\"/getRestitutions\"\r\n                      render={() => <Restitutions />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Auxiliaires\"\r\n                      path=\"/getAuxiliaires\"\r\n                      render={() => <Auxiliaires />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Honoraires\"\r\n                      path=\"/getHonoraires\"\r\n                      render={() => <Honoraires />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Prestations\"\r\n                      path=\"/getPrestation\"\r\n                      render={() => <TypePrestation />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"CauseRestitution\"\r\n                      path=\"/getCauseRes\"\r\n                      render={() => <CauseRestitution />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Utilisateurs\"\r\n                      path=\"/users\"\r\n                      render={() => <Users />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"rolesAndPermission\"\r\n                      path=\"/rolesAndPermission\"\r\n                      render={() => <RolesAndPermission />}\r\n                    ></Route>\r\n\r\n                    <Route\r\n                      name=\"produitdeces\"\r\n                      path=\"/produitdeces\"\r\n                      render={() => <ProduitDeces record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"produitretraite\"\r\n                      path=\"/produitRetraite\"\r\n                      render={() => <ProduitRetraite />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"produitdeces\"\r\n                      path=\"/consultproduitdeces\"\r\n                      render={() => <ConsultProduitDeces />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"produitretraite\"\r\n                      path=\"/consultproduitretraite\"\r\n                      render={() => <ConsultaionRetraiteProduit />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Agenda\"\r\n                      path=\"/Agenda\"\r\n                      render={() => <Agenda />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"souscription\"\r\n                      path=\"/souscription\"\r\n                      render={() => <Souscription />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"souscriptionRetraiteContrat\"\r\n                      path=\"/souscriptionRetraiteContrat\"\r\n                      render={() => (\r\n                        <SouscriptionRetraiteContrat record={this.props} />\r\n                      )}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"gestionacceptation\"\r\n                      path=\"/gestionacceptation\"\r\n                      render={() => <GestionAcceptation />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"consultproduitdeces\"\r\n                      path=\"/consultproduitdeces\"\r\n                      render={() => <ConsultProduitDeces record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"consultDecesContrat\"\r\n                      path=\"/consultDecesContrat\"\r\n                      render={() => <ConsultDecesContrat record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"consultRetraiteContrat\"\r\n                      path=\"/consultRetraiteContrat\"\r\n                      render={() => (\r\n                        <ConsultRetraiteContrat record={this.props} />\r\n                      )}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"ModificationAcceptation\"\r\n                      path=\"/ModificationAcceptation\"\r\n                      render={() => (\r\n                        <ModificationAcceptation record={this.props} />\r\n                      )}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"ConsultationAcceptation\"\r\n                      path=\"/ConsultationAcceptation\"\r\n                      render={() => (\r\n                        <ConsultationAcceptation record={this.props} />\r\n                      )}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"DetailsContrat\"\r\n                      path=\"/DetailsContrat\"\r\n                      render={() => <DetailsContrat />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Modification\"\r\n                      path=\"/Modification\"\r\n                      render={() => <Modification record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"ModificationRetraiteProduit\"\r\n                      path=\"/ModificationRetraiteProduit\"\r\n                      // render={(props) => <Greeting text=\"Hello, \" {...props} />}\r\n                      render={props => (\r\n                        <ModificationRetraiteProduit record={this.props} />\r\n                      )}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Honoraire\"\r\n                      path=\"/Honoraire\"\r\n                      render={() => <Honoraire />}\r\n                    ></Route>\r\n\r\n                    <Route\r\n                      path=\"/users/:username\"\r\n                      render={b => (\r\n                        <Profile\r\n                          isAuthenticated={this.state.isAuthenticated}\r\n                          currentUser={this.state.currentUser}\r\n                          {...b}\r\n                        />\r\n                      )}\r\n                    ></Route>\r\n                    <Route\r\n                      breadcrumbName=\"Restitutions\"\r\n                      name=\"Restitutions\"\r\n                      path=\"/getRestitutions\"\r\n                      render={() => <Restitutions />}\r\n                    ></Route>\r\n                    <Route\r\n                      breadcrumbName=\"Participants\"\r\n                      name=\"Participants\"\r\n                      path=\"/getParticipants\"\r\n                      render={() => <Participant />}\r\n                    ></Route>\r\n                    <Route\r\n                      breadcrumbName=\"AllParticipant\"\r\n                      name=\"AllParticipant\"\r\n                      path=\"/AllParticipant\"\r\n                      render={() => <AllParticipant />}\r\n                    ></Route>\r\n                    {/* <Route\r\n                      exact\r\n                      path=\"/Discussion\"\r\n                      render={b => (\r\n                        <Discussion\r\n                          currentUser={this.state.currentUser}\r\n                          {...b}\r\n                        />\r\n                      )}\r\n                    ></Route> */}\r\n                    <Route\r\n                      breadcrumbName=\"Mrb\"\r\n                      name=\"MultirisqueBatiment\"\r\n                      path=\"/MultirisquesBatiment\"\r\n                      render={() => <MultirisqueBatiment record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      breadcrumbName=\"Reglement\"\r\n                      name=\"Reglement\"\r\n                      path=\"/Reglement\"\r\n                      render={() => <Reglement />}\r\n                    ></Route>\r\n                    <Route\r\n                      breadcrumbName=\"ConsultationMrb\"\r\n                      name=\"ConsultationsContratsMrb\"\r\n                      path=\"/ConsultationsContratsMrb\"\r\n                      render={() => (\r\n                        <ConsultationsContratsMrb record={this.props} />\r\n                      )}\r\n                    ></Route>\r\n                    <Route\r\n                      breadcrumbName=\"ProduitMrb\"\r\n                      name=\"ProduitMrb\"\r\n                      path=\"/ProduitMrb\"\r\n                      render={() => <ProduitMRB />}\r\n                    ></Route>\r\n                    <Route\r\n                      breadcrumbName=\"AjoutProduit\"\r\n                      name=\"AjoutProduit\"\r\n                      path=\"/AjoutProduit\"\r\n                      render={() => <AjoutProduit record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"ModifieProduitMRB\"\r\n                      path=\"/ModifieProduitMRB\"\r\n                      render={() => <ModifieProduitMRB record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"EchangeFichiers\"\r\n                      path=\"/echangefichiers\"\r\n                      render={() => <EchangeFichiers />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"GestionImpayes\"\r\n                      path=\"/GestionImpayes\"\r\n                      render={() => <GestionImpayes />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Simulation\"\r\n                      path=\"/Simulation\"\r\n                      render={() => <Simulation record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"SimulationMrb\"\r\n                      path=\"/SimulationMrb\"\r\n                      render={() => <SimulationMrb record={this.props} />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Global\"\r\n                      path=\"/Global\"\r\n                      render={() => <Global />}\r\n                    ></Route>\r\n                    <Route\r\n                      name=\"Comptabilite\"\r\n                      path=\"/Comptabilite\"\r\n                      render={() => <Comptabilite record={this.props} />}\r\n                    ></Route>\r\n                    <Route render={() => <NotFound />}></Route>\r\n                  </Switch>\r\n                </div>\r\n              </Content>\r\n              <Footer style={{ textAlign: \"center\" }}>MAMDA-MCMA ©2020</Footer>\r\n            </Layout>\r\n          </Layout>\r\n        </connectedUserContext.Provider>\r\n      );\r\n    } else {\r\n      acceuilM = (\r\n        <div className=\"h100\">\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={props => <Login onLogin={this.handleLogin} {...props} />}\r\n            ></Route>\r\n\r\n            <Route render={() => <NotFound />}></Route>\r\n          </Switch>\r\n        </div>\r\n      );\r\n    }\r\n    return <div className=\"h100\">{acceuilM}</div>;\r\n  }\r\n}\r\n\r\nexport default withRouter(App);\r\nexport { connectedUserContext };\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://goo.gl/SC7cgQ\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log(\"New content is available; please refresh.\");\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then((registration) => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./app/App\";\r\nimport { unregister as unregisterServiceWorker } from \"./registerServiceWorker\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <Router basename={\"/takafulapp\"}>\r\n    <App />\r\n  </Router>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nunregisterServiceWorker();\r\n","module.exports = __webpack_public_path__ + \"static/media/adminstartioncon.fba425db.webp\";","module.exports = __webpack_public_path__ + \"static/media/paramicon.b30cff21.webp\";","module.exports = __webpack_public_path__ + \"static/media/productionIcon.29083ec7.webp\";","module.exports = __webpack_public_path__ + \"static/media/participantsIcon.3ed075af.webp\";","module.exports = __webpack_public_path__ + \"static/media/takaLogoW.67a1bf55.webp\";","module.exports = __webpack_public_path__ + \"static/media/takaLogo.84286010.webp\";"],"sourceRoot":""}